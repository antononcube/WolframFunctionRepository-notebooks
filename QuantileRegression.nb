(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1529961,      29285]
NotebookOptionsPosition[   1420810,      27121]
NotebookOutlinePosition[   1497515,      28620]
CellTagsIndexPosition[   1496793,      28597]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["QuantileRegression", "Title",
 CellTags->"Title"],

Cell["\<\
Computes quantile regression fits over a time series, a list of numbers, or a \
list of numeric pairs.\
\>", "Text",
 CellTags->"Description"],

Cell[CellGroupData[{

Cell[TextData[{
 "Definition",
 Cell[BoxData[
  TemplateBox[{"Definition",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Define your function using the name you gave in the Title line above. \
You can add input cells and extra code to define additional input cases or \
prerequisites. All definitions, including dependencies, will be included in \
the generated resource function.\n\nThis section should be evaluated before \
creating the Examples section below.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDefinition"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->"Definition",
 CellID->474513213],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "QuantileRegression", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SyntaxInformation", "[", "QuantileRegression", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<ArgumentsPattern\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"_.", ",", "_", ",", "_", ",", 
        RowBox[{"OptionsPattern", "[", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "::", "\"\<nmat\>\""}], "=", 
    "\"\<The first argument is expected to be a matrix of numbers with two \
columns, a numeric vector, or a time series.\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "::", "\"\<knord\>\""}], "=", 
    "\"\<The specified knots `1` and interpolation order `2` produce no \
B-Spline basis functions. The expression n - i - 2 should be non-negative, \
where n is the number of knots and i is the interpolation order.\>\""}], 
   ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "::", "\"\<zerob\>\""}], "=", 
    "\"\<The specified knots `1` and interpolation order `2` produced a list \
of zeroes instead of a list of B-Spline basis functions.\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "::", "\"\<knspec\>\""}], "=", 
    "\"\<The knots specification (for using B-splines) has to be an integer \
or a list of numbers.\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "::", "\"\<nprobs\>\""}], "=", 
    "\"\<The third argument is expected to be a list of numbers representing \
probabilities.\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "::", "\"\<nmeth\>\""}], "=", 
    "\"\<The value of the method option is expected to be LinearProgramming \
or a list with LinearProgramming as a first element.\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "::", "\"\<norder\>\""}], "=", 
    "\"\<The value of the option InterpolationOrder is expected to be a \
non-negative integer.\>\""}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "::", "\"\<nargs\>\""}], "=", 
    "\"\<Three arguments are expected.\>\""}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "QuantileRegression", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"InterpolationOrder", "\[Rule]", "3"}], ",", 
      RowBox[{"Method", "\[Rule]", "LinearProgramming"}]}], "}"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "[", 
     RowBox[{
      RowBox[{"data_", "?", "VectorQ"}], ",", "knots_", ",", "probs_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"QuantileRegression", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "data", "]"}], "]"}], ",", "data"}], "}"}], 
       "]"}], ",", "knots", ",", "probs", ",", "opts"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "[", 
     RowBox[{
      RowBox[{"data", ":", 
       RowBox[{"(", 
        RowBox[{"_TimeSeries", "|", "_TemporalData"}], ")"}]}], ",", "knots_",
       ",", "probs_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"QuantileRegression", "[", 
     RowBox[{
      RowBox[{"QuantityMagnitude", "[", 
       RowBox[{"data", "[", "\"\<Path\>\"", "]"}], "]"}], ",", "knots", ",", 
      "probs", ",", "opts"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "[", 
     RowBox[{"data_", ",", "knots_", ",", "probsArg_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mOptVal", ",", "intOrdOptVal", ",", 
        RowBox[{"probs", "=", 
         RowBox[{"Flatten", "@", 
          RowBox[{"List", "@", "probsArg"}]}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"MatrixQ", "[", 
             RowBox[{"data", ",", "NumericQ"}], "]"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{"Dimensions", "[", "data", "]"}], "[", 
              RowBox[{"[", "2", "]"}], "]"}], "\[GreaterEqual]", "2"}]}], 
           ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"QuantileRegression", "::", "\"\<nmat\>\""}], "]"}], ";", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"IntegerQ", "[", "knots", "]"}], "&&", 
             RowBox[{"knots", ">", "0"}]}], "||", 
            RowBox[{"VectorQ", "[", 
             RowBox[{"knots", ",", "NumericQ"}], "]"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"QuantileRegression", "::", "\"\<knspec\>\""}], "]"}], ";", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"!", 
          RowBox[{"VectorQ", "[", 
           RowBox[{"probs", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"NumericQ", "[", "#", "]"}], "&&", 
              RowBox[{"0", "\[LessEqual]", "#", "\[LessEqual]", "1"}]}], 
             "&"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"QuantileRegression", "::", "\"\<nprobs\>\""}], "]"}], ";", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"mOptVal", "=", 
        RowBox[{"OptionValue", "[", 
         RowBox[{"QuantileRegression", ",", "Method"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"intOrdOptVal", "=", 
        RowBox[{"OptionValue", "[", 
         RowBox[{"QuantileRegression", ",", "InterpolationOrder"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"IntegerQ", "[", "intOrdOptVal", "]"}], "&&", 
            RowBox[{"intOrdOptVal", "\[GreaterEqual]", "0"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"QuantileRegression", "::", "\"\<norder\>\""}], "]"}], ";", 
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"TrueQ", "[", 
          RowBox[{"mOptVal", "===", "LinearProgramming"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LPSplineQuantileRegression", "[", 
          RowBox[{"data", ",", "knots", ",", "intOrdOptVal", ",", "probs"}], 
          "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ListQ", "[", "mOptVal", "]"}], "&&", 
          RowBox[{"TrueQ", "[", 
           RowBox[{
            RowBox[{"mOptVal", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "===", "LinearProgramming"}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"LPSplineQuantileRegression", "[", 
          RowBox[{
          "data", ",", "knots", ",", "intOrdOptVal", ",", "probs", ",", 
           RowBox[{"Rest", "[", "mOptVal", "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "True", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{"QuantileRegression", "::", "\"\<nmeth\>\""}], "]"}], ";", 
          
          RowBox[{"Return", "[", 
           RowBox[{"{", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantileRegression", "[", "___", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"Message", "[", 
        RowBox[{"QuantileRegression", "::", "\"\<nargs\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "}"}]}]}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "LPSplineQuantileRegression", "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LPSplineQuantileRegression", "[", 
     RowBox[{
      RowBox[{"data_", "?", "MatrixQ"}], ",", "npieces_Integer", ",", 
      "order_Integer", ",", 
      RowBox[{"probs", ":", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}]}], ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"LPSplineQuantileRegression", "[", 
     RowBox[{"data", ",", 
      RowBox[{"Rescale", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"0", ",", "1", ",", 
          RowBox[{"1", "/", "npieces"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], "]"}],
       ",", "order", ",", "probs", ",", "opts"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LPSplineQuantileRegression", "[", 
    RowBox[{
     RowBox[{"dataArg_", "?", "MatrixQ"}], ",", 
     RowBox[{"knotsArg", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}]}], ",", "order_Integer", 
     ",", 
     RowBox[{"probs", ":", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"_", "?", "NumberQ"}], ".."}], "}"}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"data", "=", "dataArg"}], ",", 
       RowBox[{"knots", "=", 
        RowBox[{"Sort", "[", "knotsArg", "]"}]}], ",", 
       RowBox[{"yMedian", "=", "0"}], ",", 
       RowBox[{"yFactor", "=", "1"}], ",", 
       RowBox[{"yShift", "=", "0"}], ",", 
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Dimensions", "[", "dataArg", "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "pfuncs", ",", "c", ",", "t", 
       ",", "qrSolutions", ",", "mat"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "<", "0"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"yMedian", "=", 
          RowBox[{"Median", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"yFactor", "=", 
          RowBox[{"InterquartileRange", "[", 
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
          RowBox[{"Standardize", "[", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "Median", ",", 
            "InterquartileRange"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"yShift", "=", 
          RowBox[{"Abs", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"data", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "+", "yShift"}]}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Enhance", " ", "the", " ", "knots", " ", "list", " ", "with", " ", 
        "additional", " ", "clamped", " ", 
        RowBox[{"knots", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"knots", "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Min", "[", "knots", "]"}], ",", 
           RowBox[{"{", "order", "}"}]}], "]"}], ",", "knots", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Max", "[", "knots", "]"}], ",", 
           RowBox[{"{", "order", "}"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "knots", "]"}], "-", "order", "-", "2"}], 
         "<", "0"}], ",", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"QuantileRegression", "::", "\"\<knord\>\""}], ",", 
           "knots", ",", "order"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"B", "-", 
        RowBox[{"spline", " ", "basis", " ", "expressions"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"pfuncs", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"PiecewiseExpand", "[", 
          RowBox[{"BSplineBasis", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"order", ",", "knots"}], "}"}], ",", "i", ",", "t"}], 
           "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", 
           RowBox[{
            RowBox[{"Length", "[", "knots", "]"}], "-", "order", "-", "2"}]}],
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"pfuncs", ",", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "0"}], "&"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Message", "[", 
          RowBox[{
           RowBox[{"QuantileRegression", "::", "\"\<zerob\>\""}], ",", 
           "knots", ",", "order"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"B", "-", 
        RowBox[{"spline", " ", "basis", " ", "functions"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"pfuncs", "=", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{
          RowBox[{"{", "f", "}"}], ",", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"bf", "=", 
              RowBox[{"f", "/.", 
               RowBox[{"t", "\[Rule]", "#"}]}]}], "}"}], ",", 
            RowBox[{"bf", "&"}]}], "]"}]}], "]"}], "/@", "pfuncs"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Create", " ", "the", " ", "conditions", " ", "matrix"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"mat", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Join", "[", 
          RowBox[{"Through", "[", 
           RowBox[{"pfuncs", "[", 
            RowBox[{"data", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mat", "=", 
       RowBox[{"MapThread", "[", 
        RowBox[{"Join", ",", 
         RowBox[{"{", 
          RowBox[{"mat", ",", 
           RowBox[{"IdentityMatrix", "[", "n", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"mat", "=", 
       RowBox[{"SparseArray", "[", "mat", "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Find", " ", "the", " ", "regression", " ", "quantiles"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"qrSolutions", "=", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"c", "=", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"ConstantArray", "[", 
              RowBox[{"0", ",", 
               RowBox[{"Length", "[", "pfuncs", "]"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{"1", ",", "n"}], "]"}], " ", "q"}], ",", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{"1", ",", "n"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", "q"}], ")"}]}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"t", "=", 
           RowBox[{"LinearProgramming", "[", 
            RowBox[{"c", ",", "mat", ",", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"ConstantArray", "[", 
                 RowBox[{"0", ",", "n"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"DeleteCases", "[", 
              RowBox[{
               RowBox[{"{", "opts", "}"}], ",", 
               RowBox[{"InterpolationOrder", "\[Rule]", "_"}]}], "]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"VectorQ", "[", 
                RowBox[{"t", ",", "NumberQ"}], "]"}], "&&", 
               RowBox[{
                RowBox[{"Length", "[", "t", "]"}], ">", 
                RowBox[{"Length", "[", "pfuncs", "]"}]}]}], ")"}]}], ",", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"Length", "[", "pfuncs", "]"}]}], "]"}], ",", "t"}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"q", ",", "probs"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"yMedian", "\[Equal]", "0"}], "&&", 
         RowBox[{"yFactor", "\[Equal]", "1"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"f", "=", 
              RowBox[{
               RowBox[{"pfuncs", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "1"}], "]"}], "]"}], ".", 
               RowBox[{"qrSolutions", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", 
                  RowBox[{"1", ";;", 
                   RowBox[{"Length", "[", "pfuncs", "]"}]}]}], "]"}], 
                "]"}]}]}], "}"}], ",", 
            RowBox[{"f", "&"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "probs", "]"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "ELSE", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", "ws", "}"}], ",", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"f", "=", 
                RowBox[{
                 RowBox[{"yFactor", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"pfuncs", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ".", "ws"}], 
                    ")"}], "-", "yShift"}], ")"}]}], "+", "yMedian"}]}], 
               "}"}], ",", 
              RowBox[{"f", "&"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"qrSolutions", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", 
             RowBox[{"1", ";;", 
              RowBox[{"Length", "[", "pfuncs", "]"}]}]}], "]"}], "]"}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.780090111142228*^9, 3.780090111143919*^9}, {
  3.78009151043077*^9, 3.780091545673334*^9}, {3.7800917846228313`*^9, 
  3.780091817778371*^9}, {3.78009288520485*^9, 3.7800929469107933`*^9}, {
  3.780093067495591*^9, 3.7800930944217567`*^9}, {3.780099877005951*^9, 
  3.780099957007475*^9}, {3.780125414908991*^9, 3.780125453520102*^9}, {
  3.780126810643395*^9, 3.780126817674762*^9}, {3.780126948169297*^9, 
  3.780126949453906*^9}, {3.780127181683876*^9, 3.780127183671414*^9}, {
  3.780128265893415*^9, 3.7801282667803907`*^9}, {3.78014584312819*^9, 
  3.780145860012772*^9}},
 CellLabel->"In[23]:=",
 CellID->192351897]
}, Open  ]],

Cell["Documentation", "Section",
 Deletable->False,
 CellTags->"Documentation",
 CellID->855965831],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage",
 Cell[BoxData[
  TemplateBox[{"Usage",Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Document input usage cases by first typing an input structure, then \
pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " to add a brief explanation of the function\[CloseCurlyQuote]s \
behavior for that structure. Pressing ", 
          Cell[
           BoxData[
            StyleBox[
             DynamicBox[
              ToBoxes[
               
               If[$OperatingSystem === "MacOSX", "\[ReturnKey]", 
                "\[EnterKey]"], StandardForm], SingleEvaluation -> True, 
              Evaluator -> "System"], ShowStringCharacters -> False]]], 
          " repeatedly will create new cases as needed. Every input usage \
case defined above should be demonstrated explicitly here.\n\nSee existing \
documentation pages for examples."}], "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoUsage"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->{"UsageInputs", FontFamily -> "Source Sans Pro"},
 CellTags->"Usage",
 CellID->643497520],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{
   StyleBox["data", "TI"], ",", 
   StyleBox["knots", "TI"], ",", 
   StyleBox["probs", "TI"]}], "]"}]], "UsageInputs"],

Cell[TextData[{
 "does quantile regression over the times series or data array ",
 StyleBox["data", "TI"],
 " using the knots specification ",
 StyleBox["knots", "TI"],
 " for the probabilties ",
 StyleBox["probs", "TI"],
 " ."
}], "UsageDescription"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{
   StyleBox["data", "TI"], ",", 
   StyleBox["knots", "TI"], ",", 
   StyleBox["probs", "TI"], ",", 
   StyleBox["opts", "TI"]}], "]"}]], "UsageInputs"],

Cell[TextData[{
 "does quantile regression with the options ",
 StyleBox["opts", "TI"],
 " ."
}], "UsageDescription"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details & Options",
 Cell[BoxData[
  TemplateBox[{"Details & Options",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoDetailsOptions"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Notes",
 CellTags->"Details & Options",
 CellID->66019318],

Cell[TextData[StyleBox["QuantileRegression works on time series, lists of \
numbers, and lists of numeric pairs.", "Text"]], "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.780134114563143*^9, 3.780134137929813*^9}, {
  3.78013417202824*^9, 3.780134222234652*^9}, {3.780138221816683*^9, 
  3.780138221816886*^9}, {3.780334341927806*^9, 3.780334358949073*^9}},
 CellID->644890978],

Cell["\<\
The curves computed with quantile regression are called regression quantiles.\
\
\>", "Notes",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.780134114563143*^9, 3.780134148966242*^9}, 
   3.780336643197647*^9, {3.780336687571069*^9, 3.780336689504856*^9}, {
   3.782495987215869*^9, 3.782495995256315*^9}},
 CellTags->"TabNext",
 CellID->521904482],

Cell[TextData[StyleBox["The regression quantiles corresponding to the \
specified probabilities are linear combinations of B-splines generated over \
the specified knots.", "Text"]], "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.780134114563143*^9, 3.780134137929813*^9}, {
   3.78013417202824*^9, 3.780134222234652*^9}, {3.7801382225336733`*^9, 
   3.7801382937481213`*^9}, 3.780141153987955*^9, {3.780145528437566*^9, 
   3.7801456209724627`*^9}},
 CellID->932926317],

Cell[TextData[StyleBox["In other words, QuantileRegression computes fits \
using a B-spline functions basis. The basis is specified with the knots \
argument and the option InterpolationOrder.", "Text"]], "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.780134114563143*^9, 3.780134137929813*^9}, {
   3.78013417202824*^9, 3.780134222234652*^9}, {3.7801382225336733`*^9, 
   3.7801382937481213`*^9}, 3.780141153987955*^9, {3.7801455271809607`*^9, 
   3.7801455271811657`*^9}, {3.780145633314361*^9, 3.780145648918168*^9}, {
   3.7801456964499693`*^9, 3.7801457233615294`*^9}, {3.780334385703945*^9, 
   3.78033438709726*^9}},
 CellID->1454340227],

Cell[BoxData[GridBox[{
   {Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["InterpolationOrder", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
          "Link"}]],
       ButtonData->"paclet:ref/InterpolationOrder",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "InlineFormula",
     FontFamily->"Source Sans Pro"]], "TableText"], Cell["3", "TableText"], 
    Cell["interpolation order", "TableText"]},
   {Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["Method", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
          "Link"}]],
       ButtonData->"paclet:ref/Method",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "InlineFormula",
     FontFamily->"Source Sans Pro"]], "TableText"], Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["LinearProgramming", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
          "Link"}]],
       ButtonData->"paclet:ref/LinearProgramming",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "InlineFormula",
     FontFamily->"Source Sans Pro"]], "TableText"], Cell[
    "method for the quantile regression computations", "TableText"]}
  }]], "TableNotes",
 CellChangeTimes->{{3.78249609179585*^9, 3.782496145401044*^9}, {
  3.782496205401931*^9, 3.782496207853743*^9}},
 CellID->15349902],

Cell[TextData[StyleBox["QuantilesRegression takes the following options:", \
"Text"]], "Notes",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.780134114563143*^9, 3.780134137929813*^9}, {
  3.78013417202824*^9, 3.7801342200675287`*^9}, {3.78013440791611*^9, 
  3.780134427153706*^9}},
 CellID->773822928]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  TemplateBox[{"Examples",Cell[
     BoxData[
      FrameBox[
       Cell[
        TextData[{
         "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"[Right-click]\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Insert Page Break\"", FontFamily -> 
                "Source Sans Pro Semibold", FontColor -> GrayLevel[0.286275], 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          " between cells or through the menu using ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"Insert\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False], 
               StyleBox[
               "\" \[FilledRightTriangle] \"", FontFamily -> 
                "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                GrayLevel[0.5], StripOnInput -> False], 
               StyleBox[
               "\"Page Break\"", FontFamily -> "Source Sans Pro Semibold", 
                FontColor -> GrayLevel[0.286275], FontSize -> 14, 
                StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
             False]]], 
          ").\n\nExamples should be grouped into Subsection and Subsubsection \
cells similarly to existing documentation pages. Here are some typical \
Subsection names and the types of examples they normally contain:\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Basic Examples: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "most basic function usage\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Scope: \"", FontFamily -> "Source Sans Pro Semibold", 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Options: \"", FontFamily -> "Source Sans Pro Semibold", 
                FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "available options and parameters for the function\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Applications: \"", FontFamily -> "Source Sans Pro Semibold",
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
             ShowStringCharacters -> False]]], 
          "standard industry or academic applications\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Properties and Relations: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "how the function relates to other functions\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Possible Issues: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "limitations or unexpected behavior a user might experience\n  ", 
          Cell[
           BoxData[
            StyleBox[
             TemplateBox[{
               StyleBox[
               "\"\[FilledSmallSquare] \"", FontColor -> 
                RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
               StyleBox[
               "\"Neat Examples: \"", FontFamily -> 
                "Source Sans Pro Semibold", FontSize -> 14, StripOnInput -> 
                False]}, "RowDefault"], ShowStringCharacters -> False]]], 
          "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoExamples"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Deletable->False,
 CellTags->"Examples",
 CellID->180595041],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 CellLabel->"In[1]:=",
 CellID->462042388],

Cell["Make a random signal:", "Text",
 CellChangeTimes->{{3.780092494817978*^9, 3.780092532572364*^9}, {
  3.7803369045752287`*^9, 3.780336905586763*^9}},
 CellID->13078159],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "23", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", "n", "]"}], ",", 
      RowBox[{"RandomReal", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "100."}], "}"}], ",", "n"}], "]"}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.780089208676652*^9, 3.78008922676582*^9}, {
   3.780090124340819*^9, 3.780090184146447*^9}, {3.780090251313642*^9, 
   3.780090264226801*^9}, {3.780090462156766*^9, 3.7800904870769043`*^9}, {
   3.7800905291105328`*^9, 3.780090570191724*^9}, {3.780090781453969*^9, 
   3.780090871284848*^9}, {3.780090909550682*^9, 3.780091017776836*^9}, {
   3.78009109623806*^9, 3.780091181931394*^9}, {3.780091586632161*^9, 
   3.780091595539405*^9}, {3.780091825218638*^9, 3.780091834342745*^9}, {
   3.7800922062588167`*^9, 3.780092236261367*^9}, {3.780092308759981*^9, 
   3.7800923333739243`*^9}, 3.780092536030077*^9, {3.7800927601137877`*^9, 
   3.7800927660344677`*^9}, 3.78009668665062*^9, {3.780130562119527*^9, 
   3.7801305648517103`*^9}},
 CellLabel->"In[1]:=",
 CellID->443871870],

Cell[TextData[{
 "Compute Quantile Regression with ",
 Cell[BoxData[
  FormBox["5", TraditionalForm]]],
 " knots for the probabilities ",
 Cell[BoxData[
  FormBox["0.25", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["0.75", TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.780092537883581*^9, 3.780092577789139*^9}, {
  3.780093364327034*^9, 3.780093382640505*^9}, {3.78033442892669*^9, 
  3.780334428926777*^9}},
 CellID->1694020473],

Cell[BoxData[
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"randData", ",", "5", ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.75"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780089208676652*^9, 3.78008922676582*^9}, {
   3.780090124340819*^9, 3.780090184146447*^9}, {3.780090251313642*^9, 
   3.780090264226801*^9}, {3.780090462156766*^9, 3.7800904870769043`*^9}, {
   3.7800905291105328`*^9, 3.780090570191724*^9}, {3.780090781453969*^9, 
   3.780090871284848*^9}, {3.780090909550682*^9, 3.780091017776836*^9}, {
   3.78009109623806*^9, 3.780091181931394*^9}, {3.780091586632161*^9, 
   3.780091595539405*^9}, {3.780091825218638*^9, 3.780091834342745*^9}, {
   3.7800922062588167`*^9, 3.780092236261367*^9}, {3.780092308759981*^9, 
   3.7800923333739243`*^9}, 3.780092536030077*^9, {3.780092785226672*^9, 
   3.780092797118091*^9}, {3.780093260127633*^9, 3.780093264107644*^9}, 
   3.7800966905203114`*^9, 3.7801305737202177`*^9},
 CellLabel->"In[4]:=",
 CellID->1910655430],

Cell["Here are the formulas of the obtained regression quantiles:", "Text",
 CellChangeTimes->{{3.7800924753324957`*^9, 3.7800924902259483`*^9}, {
  3.78033443880182*^9, 3.7803344447651453`*^9}},
 CellID->2001378160],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "/@", 
  RowBox[{"Through", "[", 
   RowBox[{"qFuncs", "[", "x", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7800901884594316`*^9, 3.780090230734413*^9}},
 CellLabel->"In[5]:=",
 CellID->973059540],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"0.`", 
          RowBox[{
           RowBox[{"x", ">", "200"}], "||", 
           RowBox[{"x", "<", "1"}]}]},
         {
          RowBox[{"3818.7847249915`", "\[VeryThinSpace]", "-", 
           RowBox[{"70.59990387532112`", " ", "x"}], "+", 
           RowBox[{"0.43316288196676034`", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"0.0008757723390678317`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{
           FractionBox["801", "5"], "<", "x", "\[LessEqual]", "200"}]},
         {
          RowBox[{"4099.0541288913655`", "\[VeryThinSpace]", "-", 
           RowBox[{"75.84839458505643`", " ", "x"}], "+", 
           RowBox[{"0.4659249962597398`", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"0.0009439415323532654`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{
           RowBox[{"5", " ", "x"}], "\[Equal]", "801"}]},
         {
          RowBox[{"84.2683188002546`", "\[VeryThinSpace]", "-", 
           RowBox[{"0.5016368872052022`", " ", "x"}], "-", 
           RowBox[{"0.005762324600798029`", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"0.00004127324858251942`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{
           FractionBox["403", "5"], "<", "x", "\[LessEqual]", 
           FractionBox["602", "5"]}]},
         {
          RowBox[{
           RowBox[{"-", "62.90780464422164`"}], "+", 
           RowBox[{"4.976382595839821`", " ", "x"}], "-", 
           RowBox[{"0.07372782687182809`", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"0.000322354730265853`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{
           FractionBox["204", "5"], "\[LessEqual]", "x", "\[LessEqual]", 
           FractionBox["403", "5"]}]},
         {
          RowBox[{"34.90166049044879`", "\[VeryThinSpace]", "-", 
           RowBox[{"2.2154898405330044`", " ", "x"}], "+", 
           RowBox[{"0.10254355637260394`", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"0.0011177709498357156`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{"1", "\[LessEqual]", "x", "<", 
           FractionBox["204", "5"]}]},
         {
          RowBox[{"110.68084486274336`", "\[VeryThinSpace]", "-", 
           RowBox[{"1.159756307366882`", " ", "x"}], "-", 
           RowBox[{"0.0002962164599202982`", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"0.000026140058823721722`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"0.`", 
          RowBox[{
           RowBox[{"x", ">", "200"}], "||", 
           RowBox[{"x", "<", "1"}]}]},
         {
          RowBox[{"506.1873008371448`", "\[VeryThinSpace]", "-", 
           RowBox[{"14.13710010452489`", " ", "x"}], "+", 
           RowBox[{"0.1428098486703393`", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"0.0004564636295947824`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{
           FractionBox["403", "5"], "\[LessEqual]", "x", "<", 
           FractionBox["602", "5"]}]},
         {
          RowBox[{"983.6899016980851`", "\[VeryThinSpace]", "-", 
           RowBox[{"15.243865326953879`", " ", "x"}], "+", 
           RowBox[{"0.08464182566497819`", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"0.00015526357101398446`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{
           FractionBox["801", "5"], "\[LessEqual]", "x", "\[LessEqual]", 
           "200"}]},
         {
          RowBox[{"59.67557906755165`", "\[VeryThinSpace]", "+", 
           RowBox[{"1.195190328126067`", " ", "x"}], "-", 
           RowBox[{"0.015866771900576906`", " ", 
            SuperscriptBox["x", "2"]}], "-", 
           RowBox[{"0.000057996728507930134`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{"1", "\[LessEqual]", "x", "<", 
           FractionBox["204", "5"]}]},
         {
          RowBox[{
           RowBox[{"-", "759.529309544293`"}], "+", 
           RowBox[{"17.400689190693658`", " ", "x"}], "-", 
           RowBox[{"0.119131922884632`", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"0.0002687350734920707`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          RowBox[{
           FractionBox["602", "5"], "\[LessEqual]", "x", "<", 
           FractionBox["801", "5"]}]},
         {
          RowBox[{"24.222444204618753`", "\[VeryThinSpace]", "+", 
           RowBox[{"3.8020384798123104`", " ", "x"}], "-", 
           RowBox[{"0.07976010895171029`", " ", 
            SuperscriptBox["x", "2"]}], "+", 
           RowBox[{"0.0004640076591647279`", " ", 
            SuperscriptBox["x", "3"]}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True]}], "}"}]], "Output",
 CellChangeTimes->{{3.780090206373105*^9, 3.780090231355466*^9}, 
   3.7800902679674263`*^9, {3.7800904658399973`*^9, 3.780090490626317*^9}, {
   3.780090554167499*^9, 3.780090573622671*^9}, 3.780090783670001*^9, {
   3.780090917545183*^9, 3.7800910218451138`*^9}, {3.780091109913517*^9, 
   3.780091183214184*^9}, 3.780091596926457*^9, {3.780091828229432*^9, 
   3.7800918357662077`*^9}, {3.780092200733347*^9, 3.780092239503593*^9}, 
   3.7800923370133743`*^9, {3.780092769160801*^9, 3.78009279935973*^9}, 
   3.78009326622432*^9, 3.7800966932117033`*^9, 3.7800970657976847`*^9, 
   3.7801304612866383`*^9, {3.780130554524935*^9, 3.780130582502707*^9}, 
   3.780130639544091*^9, 3.780138376441712*^9, 3.780330649693653*^9, 
   3.780334119293098*^9, 3.780336765978767*^9, 3.782464171261855*^9},
 CellLabel->"Out[5]=",
 CellID->200350540]
}, Open  ]],

Cell["\<\
Here is a plot of the original data and the obtained regression quantiles:\
\>", "Text",
 CellChangeTimes->{{3.780092439263586*^9, 3.780092470978085*^9}, 
   3.7800970763176413`*^9},
 CellID->1912686119],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"randData", ",", 
     RowBox[{
      RowBox[{
      "qFuncs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/@", 
      
      RowBox[{"randData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{
      RowBox[{
      "qFuncs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/@", 
      
      RowBox[{"randData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "0.25`", ",", "0.75`"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thin", ",", "Thick", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78009026858465*^9, 3.780090355568449*^9}, 
   3.7800904537894783`*^9, {3.7800905812936993`*^9, 3.780090700349174*^9}, {
   3.78009073833045*^9, 3.780090795412019*^9}, {3.780092593946312*^9, 
   3.780092647913769*^9}, {3.7800928172788277`*^9, 3.780092837270083*^9}, {
   3.780093275686936*^9, 3.780093291502625*^9}, {3.7800966964954643`*^9, 
   3.780096702218973*^9}, {3.780097041947589*^9, 3.78009710819908*^9}, {
   3.780130644965616*^9, 3.780130659125646*^9}},
 CellLabel->"In[6]:=",
 CellID->1110694998],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
G9iy7/dsdP54ZOvlH2T4P8UXbXk=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
AiS6cS0=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
6LzqU8CHr/t60+T5lYCPSmp23fkwj38ArWSERg==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 200.}, {0, 97.0634149995362}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "0.25`", "0.75`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7800903309245*^9, 3.780090356223015*^9}, {
   3.780090454996011*^9, 3.780090496041542*^9}, {3.78009055584441*^9, 
   3.7800905750088053`*^9}, {3.780090624216156*^9, 3.780090701577004*^9}, {
   3.780090769925888*^9, 3.780090796162401*^9}, {3.780090920285935*^9, 
   3.780091022053643*^9}, {3.78009111238482*^9, 3.7800911842713413`*^9}, 
   3.7800915981191597`*^9, {3.780091830462552*^9, 3.78009183673175*^9}, {
   3.780092200919949*^9, 3.78009223968087*^9}, 3.780092339359828*^9, {
   3.780092615790535*^9, 3.780092648440567*^9}, {3.780092770892043*^9, 
   3.780092837806592*^9}, {3.7800932857158422`*^9, 3.7800932920017433`*^9}, 
   3.780096702877512*^9, {3.780097060987172*^9, 3.780097109953703*^9}, 
   3.780130461485395*^9, {3.780130554848102*^9, 3.780130582707415*^9}, {
   3.780130639799122*^9, 3.780130661745335*^9}, 3.780138376623657*^9, 
   3.7803306503260202`*^9, 3.780334119549725*^9, 3.780336766269215*^9, 
   3.782464171517983*^9},
 CellLabel->"Out[6]=",
 CellID->37167284]
}, Open  ]],

Cell["\<\
Find the fraction of the data points that are under the second regression \
quantile:\
\>", "Text",
 CellChangeTimes->{{3.7800918537718077`*^9, 3.780091894384305*^9}, {
  3.780092211197259*^9, 3.780092212522031*^9}, {3.7800926692541037`*^9, 
  3.780092689190442*^9}, {3.780093308006234*^9, 3.7800933100980186`*^9}},
 CellID->676882694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"Select", "[", 
     RowBox[{"randData", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        "<", 
        RowBox[{
         RowBox[{
         "qFuncs", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         "[", 
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         "]"}]}], "&"}]}], "]"}], "]"}], "/", 
   RowBox[{"Length", "[", "randData", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.780092280234021*^9, 3.780092301457436*^9}, {
  3.780092346076633*^9, 3.7800924293530188`*^9}, {3.780093297748917*^9, 
  3.780093297836669*^9}, {3.780096710208897*^9, 3.780096715743843*^9}, {
  3.780130597762136*^9, 3.780130604513029*^9}},
 CellLabel->"In[7]:=",
 CellID->1412693484],

Cell[BoxData["0.75`"], "Output",
 CellChangeTimes->{{3.780092376979115*^9, 3.780092429884076*^9}, {
   3.7800927736714897`*^9, 3.780092803159334*^9}, 3.780092841661002*^9, {
   3.780093293970414*^9, 3.780093298517247*^9}, {3.7800967105400352`*^9, 
   3.78009671601081*^9}, 3.780097066069601*^9, 3.78013046155548*^9, {
   3.78013055490691*^9, 3.780130605994845*^9}, 3.780130639851561*^9, 
   3.780138376677806*^9, 3.78033065148483*^9, 3.780334119609034*^9, 
   3.780336766334859*^9, 3.7824641716018476`*^9},
 CellLabel->"Out[7]=",
 CellID->1900284558]
}, Open  ]],

Cell[TextData[{
 "The obtained fraction is close to the second probability, ",
 Cell[BoxData[
  FormBox["0.75", TraditionalForm]]],
 ", given to ",
 Cell[BoxData["QuantileRegression"], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 "."
}], "Text",
 CellChangeTimes->{{3.780092662110724*^9, 3.780092749020361*^9}, {
   3.780093334085732*^9, 3.780093347955913*^9}, 3.782465182143615*^9},
 CellID->231253758]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scope", "Subsection",
 CellLabel->"In[8]:=",
 CellID->964056545],

Cell["\<\
Here is a Quantile regression computation over a numerical vector:\
\>", "Text",
 CellChangeTimes->{{3.780335943413865*^9, 3.780335968028062*^9}, {
  3.782465188762457*^9, 3.78246518913369*^9}},
 CellID->2146074136],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vecData", "=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{
      RowBox[{"Range", "[", "200", "]"}], "/", "6"}], "]"}], "+", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", "200"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFunc", "=", 
   RowBox[{"First", "@", 
    RowBox[{"QuantileRegression", "[", 
     RowBox[{"vecData", ",", "12", ",", "0.5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"vecData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"qFunc", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"Length", "[", "vecData", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<vector\>\"", ",", "\"\<fit\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.780335979965549*^9, 3.780336212732834*^9}, {
  3.780336251322982*^9, 3.7803363570867662`*^9}},
 CellLabel->"In[1]:=",
 CellID->1111448832],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
9297R/99f/4FBhIT0A==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AXc=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 200.}, {-1.355917868879993, 1.4743475748324684`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"vector\"", "\"fit\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.78033635756249*^9, 3.7803367665851593`*^9, 
  3.782464171853958*^9},
 CellLabel->"Out[3]=",
 CellID->705768122]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->2067138768],

Cell["\<\
Here is a Quantile regression computation over a times series object:\
\>", "Text",
 CellChangeTimes->{{3.780335471782853*^9, 3.780335503755725*^9}, {
  3.780335950534896*^9, 3.780335951085712*^9}, {3.7803369282457743`*^9, 
  3.7803369302810793`*^9}, {3.7824651944451523`*^9, 3.782465194803659*^9}},
 CellID->669793857],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"finData", "=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<GE\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2010", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2019", ",", "10", ",", "15"}], "}"}], ",", "\"\<Week\>\""}], 
      "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"qFunc", "=", 
   RowBox[{"First", "@", 
    RowBox[{"QuantileRegression", "[", 
     RowBox[{"finData", ",", "12", ",", "0.5"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"finData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"qFunc", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"finData", "[", "\"\<Times\>\"", "]"}]}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time series\>\"", ",", "\"\<fit\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.78033551346621*^9, 3.780335522050769*^9}, {
  3.780335556612276*^9, 3.780335560176708*^9}, {3.780335720775144*^9, 
  3.7803357212916737`*^9}, {3.780335759991416*^9, 3.780335760419095*^9}, {
  3.780335823644701*^9, 3.780335858238427*^9}, {3.780336515413013*^9, 
  3.780336521303891*^9}},
 CellLabel->"In[1]:=",
 CellID->484079091],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
FLrrG0pCp/P5aFgKBe/oKvu3nfn8t/AQu76tLVvWl/P5P/4whVXLjlSRY3z+
v3qEQtihP90eB/H5/91RNt9tCW15oyOf/w0VbPwkB3x78pKvRz2OU9B7VvVw
iefrn38qu96Kve0/ePH1b90JCtWNyaY2v/n6f+wkG18/RwV9vcDX//unKAzv
933hSv48Iq46TcG655cN9835+t/uLIWL4yN+man484/nOQqxjQ3us0P488+C
8xRslDfDizuj5TsuUChXt3Tb84g//11JY/udJwOOX1zHn//eXqTw0zJJ5M2f
L2UGl1j9zENEa57z59/uSgqHe3f6PX0Tf/6VXGbr44fK9+Y9+PPv2ivs+vc4
e14t4s//R6+y9VXptFgq58//969RMDnbP7OvO3/+/3adgrjybLRPCX//YZ1J
IeLd0663Y/j7j6FZFHr/qKu66MHff8y/QaHsQJhn/3L+/md7NoUGz33zZTv5
+5/LN9nxfc/f3ODJ3/+8uUVhU1+jw6t1/P2X4DaFIunPmWFH+Ps/lzsUtsOD
gJSJ/P3fRBW7XyNfvjbg7xtl4XfZeHqxwKsgk7//PJJL4fzsJ9oWK/n7z/w8
CicCg5zLnPn7T9091g8OC30XlfPff6zuU5jTu3/G7RT++8/QAgodqjtnG05D
S+Y9YPud9sJ5fh3Qim0PKViu/S9j1mX++4eykMLbzLPVHoP47x8lj9h47pSe
3DwPf3+RvnpMYdqufyVX5vLff7o9Zf1uYJzq+7kn5vd7RmF/6aBxeyLQ8jVq
Cht3GWoirNHqw88pPBgdGPP9sjvmv/eCwo7ettPeBKBl9CWFF+GjNzrWuWF+
y1esvj4FbS8fRVsMKabQ59WOwaE+aOnc1xSWjo62Hl/nivnjSth+ufBwnstZ
tED5hq0/CQWL9TPRktdv2Xp++4djgiVa8e8dq9e21lbkUQ/M71xGwa6T8axv
W9HiCe8pPFU87bx5NDoxrJzNB2MC1ycYozWHNMyeMbv+FXbH/Hkf2PHTJJuz
E9Fy8pHtB/LPhFyYhla3/czWo6vrNmR3QQsHV1A4c+JKvrrKBfNLv1BYlzcq
5PUttGprJeufEfYHM+PRFpe+Unjs3WvBjNloabGWwnLDBdVnPdDKRsLub2r6
3PgWaIGzjgINbHz1rbQb5vf9RuGL14iQjGtoxeoqCoWH5/s924nWp3xn+++E
6Xsdg9HiXD2bP7wt5iWPRCdqq9l4qQovaS9Eayx+sv1fxkab+EZnzD+ohsLn
QouR5e/Q8jm1FMKndVlfn41Wx/5i+4N4xbu8FLQwvY7C6aSIHS4b0LJXv9n+
/dCxc61noVV/6ynUxi7tPG8Y2sKpge3vBkY5Cx3Q0vF/KdgXO48ea4BWrmpk
/f30qdG7T06YP+Ufmz/jf30puY+W3G1i8+um9qu8zqMVXwU6OND6rJtNAlpv
bqiDmeecDs5YhRYPbKaD3jnNxaZT0YmzjXSw7fq9Uy6eaOXM5jrYnRVjFOaM
Fl1soQNF89y8i8ZoeZGxDrwH/IztUNUV8zeY6MCrsdK+uggt7GqqA9OCjm2H
3kLLxrXSQTuB4afaE+jEMWY6sP+RvC1qF9riYGsd3Ap9N1QVhpaq2uhgZPSd
J+ogtLLSXAel10dMnjQGLTBvq4OGNa+mjvdASwZY6qC96M+MjE5oRZCVDlIl
Lp/3tUDrY6x10HZU8TpS3QXzp7XTwZtw+dFrZejEl+11EDL52Nuah2jNnw46
GO2bduVCBlrUpaMOXhUI096cQMt9bHWQ0C/cN3I3Wi3rpIOKf84dj0SihQfs
dBCQdG5/35Vo2Z3OOhgzO2LCyCC06ou9DgY+bqt67Iu2aCPUwUEfbZjaEy3t
76iDD14R1X490cpZXXQQ7TT85lh7tCCmqw5qZqRPvW2Ollxw0sGZgFG+SgO0
4oWzDqzXrbd3qHHE/PXddHBxYEFgq0q02LE7u97G06Fr3qITx/bQQd+BexqD
nqIl1cymM5sJ0wscxf8HTw4SxQ==
         "]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
fsBqRAWpN847mlf0sz4p3mPCH/dDhPp/jfPeBw==
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.4718976*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.4718976*^9, 3.7800864*^9}, {0, 32.880001068115234`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"time series\"", "\"fit\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7803355766764402`*^9, 3.7803355840278883`*^9}, 
   3.780335619331709*^9, {3.780335697697894*^9, 3.780335762315295*^9}, {
   3.780335901704193*^9, 3.7803359167538013`*^9}, 3.780336476405796*^9, 
   3.780336523636373*^9, 3.780336772323222*^9, 3.78246417904533*^9},
 CellLabel->"Out[3]=",
 CellID->28167653]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1804791228],

Cell["\<\
The second argument -- the knots specification -- can be an integer \
specifying the number of knots, or a list of numbers specifying the knots of \
the B-spline basis:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.7800981368009977`*^9, 3.780098225881073*^9}},
 CellID->649685796],

Cell[BoxData[
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"randData", ",", 
     RowBox[{"randData", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"1", ";;", 
        RowBox[{"-", "1"}], ";;", "3"}], ",", "1"}], 
      "\[RightDoubleBracket]"}], ",", "0.5"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780096917577054*^9, 3.780096983860895*^9}, {
  3.7801304788365183`*^9, 3.780130478837268*^9}},
 CellLabel->"In[1]:=",
 CellID->836153427]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Options", "Subsection",
 CellLabel->"In[2]:=",
 CellID->776923543],

Cell[CellGroupData[{

Cell["InterpolationOrder", "Subsubsection",
 CellChangeTimes->{{3.780092968598382*^9, 3.780092977079414*^9}},
 CellLabel->"In[1]:=",
 CellID->330660962],

Cell[TextData[{
 "The option ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["InterpolationOrder", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/InterpolationOrder",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " specifies the polynomial order of the B-spline basis. Its values are \
expected to be non-negative integers:"
}], "Text",
 CellChangeTimes->{{3.780098244793062*^9, 3.780098328338584*^9}, 
   3.7824652087660933`*^9},
 CellID->2068667370],

Cell[BoxData[
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"First", "@", 
      RowBox[{"QuantileRegression", "[", 
       RowBox[{"randData", ",", "5", ",", "0.5", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "i"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "3"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780093122644937*^9, 3.780093148817438*^9}, {
   3.780093200151964*^9, 3.780093211681326*^9}, 3.7800967227960987`*^9, {
   3.7800980349198236`*^9, 3.7800980353565063`*^9}, 3.780130478840786*^9},
 CellLabel->"In[1]:=",
 CellID->1925318953],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"#1", "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "randData", "]"}], "]"}]}], "&"}], ")"}], "/@",
       "qFuncs"}], ",", "randData"}], "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thin", ",", "Thick", ",", "Thick", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<0.5, interpolation order 0\>\"", ",", 
        "\"\<0.5, interpolation order 1\>\"", ",", 
        "\"\<0.5, interpolation order 3\>\""}], "}"}], ",", "\"\<data\>\""}], 
     "]"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7800931673237267`*^9, 3.780093192286139*^9}, {
   3.780093228997753*^9, 3.780093230875763*^9}, {3.780093430176736*^9, 
   3.7800935381320257`*^9}, {3.780093812023505*^9, 3.780093818189845*^9}, 
   3.7800966649511414`*^9, {3.7800967320984077`*^9, 3.780096745288216*^9}, {
   3.780097125415545*^9, 3.780097137392367*^9}, {3.7800980407846823`*^9, 
   3.780098085136381*^9}, {3.780130620480139*^9, 3.780130630969945*^9}},
 CellLabel->"In[2]:=",
 CellID->1068833306],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
G9iy7/dsdP54ZOvlH2T4P8UXbXk=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJxdzbtqFWEUhuGFgliKWFhYbEVEgojHeDa/JjFG4ynGeIrbMSaeGkGwEYS/
0AvQJu0UguA1WKwynYU3MFhYewkqboR5BobhmZePtXP55fzqhohY//P+/f57
fk2svVhcX2tny+hH6Xsz3oK34e14Bx7gXXg33oP34jG8D+/HB/BBfAgfxkfw
UTyOj+Hj+AQ+iU/h0/gMPosncOm74jhHx3GejmOSjmOKPlXed+2mL69mRn26
74rjAh3HDB3HRTqOWTqOS3Qcl+k45ug4rtBxXKXjuEbHcb3vgitOHDfY44oT
xzx7XHHiuMkeV5w4FtgvlK0/v74Z+z452uPEcavvgitOHIvsccWJ4zZ7XHHi
uMMeV5w47rLHFSeOe+xxxYnjPntcceJYYo8rThwP2OOKE8eQ/bCMf/r28e3n
6dEeJ46HfRdcceJo+h7gghtccYsTdzgecR8X3OCKW5y4w7HMfVxwgytuceIO
x2Pu44IbXHGLE3c4Vri/UjZ+ePd6+GNudB83uOIWJ+5wrPY9wAU3uOIWJ+5w
POE+LrjBFbc4cYfjKfdxwQ2uuMWJOxzPuI8LbnDFLU7c4Xj+378BVQ2YOw==

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw11gtYzOkeB/BiT+WQxXZxiR3JcpIoQzbUN6WrrhPpprnUzCxZ6WRttNu4
pHUrua5yGRQSpTaXQo1HFDappWI5pgvSGkVsFtkz5zm/3zxPzzyf3uc778z7
f9/f+xsrXR4S18/AwKBG//e/9/+/ul3/6i7dGdPlCvoHDnzhES+QgGyCisLT
g7NusofgsY9lsaHQjWyGv9tVosQD7OEQqDrfthrNJVsBo0J/FiWwBZCcu+xc
dZ9tjXXBEx4J3d3JNjjyYntq3in2V7ia/n6shYUHeSLarWOrNqaybfFZRa28
t4Nth/HhTgOUIfPI9vB8oy5ovsieCnnmPwN8xnuSHZBum9RdlsF2xPFrj3bY
vmNPQ43Ya3qOxIssRMeHM00Db7GnY8DekatThN7kGbB13GClO8B2gm+triLa
2Ic8E/HKMMntBPbX2Nr/Sn/XB2xnnDpoe6zI3Zc8C7Vf7/IWnGbPxsu7fZ3b
LfzIczA4QbHNUMV2wdSB9VMSn7NdEXTMuaE1ZD4ZSHDLTRJdIquArIemllXj
/WncDcWrVpUJM8kqNzQMa4nMe8fjc/H6tO8nc2kAjc+FmU+peuMtsoE7hO2j
3XuFgTTujtDU9CeKg2QDDzhve+f+on8QjXvgyeYLJ361IRvMw4cs3/PZLzg/
D7aDbUbvz+S8JyI296074Mjjnths1NRx8B7P74XydWcC1N/z9/PC80+bSg+P
4nFvjFgjG3m0gn+fN3x6Z6tyJfz7fPD9vy2e5n3G4z440dXld/w4r58vmpbe
KD7hy+vnC+OOI5YndbzefnCKTfmhYDtZ/1zk2gVtp6bx+HzsjpriU9hIz1M1
H9eaTYqKkvn5+uNtaKtZsRWP+8Om/uLqkkreHwEI9d+t/UVKVgVgw41vPc/+
g8cDUTrP+9S5E7T/VIFovzJ22AU/3o9BGObyYVXZS9q/CMLc8ruPyrPIqiAk
zih0vyQka4JwuCQ9/3ITn4dg3LGXfF65moxgGBQ4r9SMJquCMXWC2e9XNHTe
NMEQH9XhqozPXwi2f1l9rMqIjBBU5qgHXc+n86sKQZfl6sTq+WRNCMbsEjXX
dHE9ECFgyGSXmzvIEOHHrUa5t6aTVSIUmmgH1DbPpbwIjzaULb+9hmwQClPD
nffqxpARij/nrHhf8JLqlyoUb3Ia59wx5Hwoev6atfaNGecX4HXY4arhEzm/
AK/OGpnMmUVWLUD3F/F+kgDOL0DXivqMNAnnF+Jl3YyG/CTOL4Ru8n7z2+mc
X4gXWwzDX2dzXu/n8v0WhZwPQ6fXr4+dr3Be7zyHcTF3OR+Gjv575eufcV5v
ycf84+85vwhPKyW6W6a8fnqPrp7aLeD1W4T2NXZJZkKyRu/7WednevH6h6PV
qfd9VATn9d4d5bJ2GefDoe25sjZPxXm9gydcu7GT8xH4T9FWk5fHOK+36Wu/
YeWcj8CjpWGZM2o5H4GHNy41RGg5H4nfJ1hbpPZwPhIP0tLDjxrx/olEc9uL
/dUjeP9EosktRPuHHd8PUWg8dH7cEJChd5+VQijifBTuRa47uUjO+Sj8VvZM
l5LM+Wg0WPo7HN7K+WjUryxJunaI83r/ZnnheQnno1Hn8MMH0+ucX4y6zFYX
x/ucX4yt25zOtug4vxjVbxuP/Nyfz89i9Fv83fbAEXx+YuBy3fxHoyl8fmKQ
bH926WUPsioGpXtCw5MiOB+D7k89npMSOC+GnWKnsDWNLBBDUedovS+HP0+M
I04NnwcVk8ViPDy0os+omj9fjOEmQ/+4/JCsFkOUcKY56TXPJ0ZGc+D1SSZU
D7Ri3ETXL61cHwwkMMrPOLxvGlnfaLgNtc8M8uF6IkFKcm2KcQxZLMGFlvgl
FUlcXyTo8Rm0aOVmsloC+5KCeXZqskaCJSP9prWd5fklyF3XKci+xfNLoe3c
NDi4heeXwkr0r4/GvTy/FGEXa55XDKL6J5Zixzhl00prro9S1G4xvmY3k6yW
wuTNsZI2f66XUnhEeaqzZWStFKqqJ9uCk7lfkOGiXdoak0yyQIY/d9l8U5nL
9VgGx76rC78r5/llWBYn85h8h+eX4URtP8f2Jzy/DG3Tj3yZ84Hnl2HMQTfT
kKFU77UyRBq1vDeZwPU/Fnu+VXVUziYLYuHg19nmmkhGLJ5UXbcuKSKLY7HP
5ajERsf3SSz8L6Sq99jSfaOOhYFj1GMTJVkTi9KCmWPW5JG1sVCON4/WtfL9
FIdRh17lxAjofhPEoW747Qf10WTEYf2OkyM8csjiOMwYlL7oXDPfh3HoTJPt
ncj9jzoOB/92bcwWkTVxCEm2MjfNImvjYNTzTpR6m+9fOcri7+14NZDub4Ec
y54W18t8yJBjrDhjSONGsliOu/eXBHpX8X0vx08ir4xyQ+oP1HLMrh1Xa+dK
1sjR7Wkw6FAKWStHruah79By7i8UCHMu27S+lyxQYGDp7pq3QupPoEDF5ERj
ZSJZrEDi8QDPB0Xczyjw1dhJafN1ZLUCD7KNqypsqR/SKJBh1t7PQUnWKuCW
oXE7msf9kxJvjA+ozNvIAiXuai49dh9C/ReUKOyz/fujPVmsxE/O+8ac8+d+
TQnpKmOX5fFktRKzS1dGT9xC1ihh/qotpSWfrFWie3LI/uwa7u++wY0lmoui
Z0H4L1fgiZ8=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[
         Large]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 200.}, {0, 97.0634149995362}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"data\"", "\"0.5, interpolation order 0\"", 
       "\"0.5, interpolation order 1\"", "\"0.5, interpolation order 3\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.780093180896557*^9, 3.780093231306078*^9}, 
   3.780093393310628*^9, 3.780093445039901*^9, {3.780093482394595*^9, 
   3.780093538788665*^9}, {3.7800938188487453`*^9, 3.780093822670385*^9}, 
   3.780096678551443*^9, {3.780096724769923*^9, 3.780096746147554*^9}, {
   3.7800971394606333`*^9, 3.7800971420990973`*^9}, {3.780098058644792*^9, 
   3.780098088458201*^9}, 3.780130555363968*^9, 3.780130614371777*^9, 
   3.7801306673819427`*^9, 3.780138377106553*^9, 3.780330652232851*^9, 
   3.780334120295871*^9, 3.780336773539892*^9, 3.782464179672826*^9},
 CellLabel->"Out[2]=",
 CellID->1641587915]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Method", "Subsubsection",
 CellChangeTimes->{{3.780093018421526*^9, 3.7800930193107567`*^9}},
 CellLabel->"In[3]:=",
 CellID->1083201938],

Cell[TextData[{
 Cell[BoxData["QuantileRegression"], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " uses ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["LinearProgramming", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/LinearProgramming",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ". Additional parameters can be passed to ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["LinearProgramming", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/LinearProgramming",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " with the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Method", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Method",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " option:"
}], "Text",
 CellChangeTimes->{{3.780093604330258*^9, 3.780093661099197*^9}, {
  3.782465218462123*^9, 3.7824652287461233`*^9}},
 CellID->1638918958],

Cell[BoxData[
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"randData", ",", "5", ",", "0.5", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"LinearProgramming", ",", 
        RowBox[{"Tolerance", "\[Rule]", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "2"}], ")"}]}]}], ",", 
        RowBox[{"Method", "\[Rule]", "\"\<CLP\>\""}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780093671090294*^9, 3.780093743950191*^9}, 
   3.780096750821643*^9, 3.780130478844687*^9},
 CellLabel->"In[1]:=",
 CellID->1019496439],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"randData", ",", 
     RowBox[{
      RowBox[{
      "qFuncs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/@", 
      
      RowBox[{"randData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thin", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "0.5`"}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780093752059157*^9, 3.7800938009865417`*^9}, {
  3.780096754377769*^9, 3.780096757875111*^9}, {3.78009716225001*^9, 
  3.7800971776014757`*^9}, {3.780130673306451*^9, 3.780130679837514*^9}},
 CellLabel->"In[2]:=",
 CellID->1874949453],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
G9iy7/dsdP54ZOvlH2T4P8UXbXk=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 200.}, {0, 97.0634149995362}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "0.5`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.780093756560441*^9, {3.7800938015367107`*^9, 3.7800938254213467`*^9}, 
   3.7800967622468452`*^9, {3.780097168239345*^9, 3.7800971795034037`*^9}, 
   3.780130555766879*^9, 3.780130682724235*^9, 3.7801383773790483`*^9, 
   3.780330652480825*^9, 3.780334120498753*^9, 3.780336774135603*^9, 
   3.782464179876562*^9},
 CellLabel->"Out[2]=",
 CellID->1445674396]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Applications", "Subsection",
 CellLabel->"In[3]:=",
 CellID->568056528],

Cell[CellGroupData[{

Cell["Fit for heteroscedastic data", "Subsubsection",
 CellChangeTimes->{{3.7801285968478947`*^9, 3.780128605555382*^9}, {
  3.780128668125989*^9, 3.7801286704469213`*^9}},
 CellLabel->"In[1]:=",
 CellID->38901514],

Cell["\<\
Here is heteroscedastic data (the variance is not constant with respect to \
the predictor variable):\
\>", "Text",
 CellChangeTimes->{{3.780129116929501*^9, 3.7801291663296213`*^9}, {
  3.780129219382826*^9, 3.78012924666747*^9}},
 CellID->60280420],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"distData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "]"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", 
           RowBox[{".15", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"1.5", "-", "x"}], "]"}], "/", "1.5"}], ")"}]}]}]}], 
          "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"distData", ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7801287251589823`*^9, 3.7801287260687113`*^9}, 
   3.780128781528081*^9, {3.780129049002102*^9, 3.780129059867218*^9}},
 CellLabel->"In[11]:=",
 CellID->1571093571],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw92nk8VdsXAPCLeyk0K6WU5uk1KPVKtE5FpOGhgZ9KGfIaVXoNJFOFp4ko
QyUaROZZon3MszKGEDKP1zzz073rvPvHex+fm+3s9V1r7X3OPov1L2ueEWSx
WP+b+M/v//M/k2hjiXUq4ZGfoFUjZuH9FhF6a+biUrj4Gr6/vaIo+l2E/pFQ
M2jvS5Ok3lUnniSK0CqcKj/JzRUQpFJtJhE08bPGvVcvckqJh/vvjwj9UW/B
8cThNHK/5feAIvS1Sc8arP1TydWJ0d5eEaFvqYw1boqkycRgEyOK0FEdDxPi
/vgAqr+HUxGhH7TeyB++kEQ28z4idITlLZ2nZwvIIt6AIrSWtECU/oksEOVd
oAgdOHpIi92WA32/L69XmL4bvcGo8t0v4A1XLUy7bbKUdi+shpzs3x9hOjF5
jmbTwzL4PVuNGGHaxMA+7FZGIHn3e7pvhelLe3Ir/hcTDrzLeyJMX8z78F6h
oBRu/x7OTJi2j/ismRlWTIx4H2FaXlv1i7NBBmjyBhSmuSdYGU6jNcCbrqIw
7blrj0zSx2BYzZuwMJ1dMlLmaB1GeMNJCNOF9k7KWbezgO8hTL/eEjK+420e
enDoCsnd/o+u5qEHh56fxHlhVx9LeJeXyKElDWQPmm98S/geHNpAI0vOxu4t
enBowU5p1fP/1KIHh35128zr3eB39ODQLs0a7SLmCcD34NAbD9T1yu+JInwP
Di0Rte96WjLjwaEVZVWj6k+UAd+DQx+bIje2fDyP8D04tOH73I59b5LQg00f
fBIS1aEdR/gebHqq6z69c77f0INNO0yiw91rigjfg037LjtZOCeyAD3Y9CbF
dusxzxfowaYXz9XcpCCUiB5s+kX/45IrzrnowaYnX/OVjHctQA82baKiPfXQ
qizC92DTL9fMWNG4Oo3wPdi0/usCiwufS9GDTT/37CiRjslDDzYtI6fiX16U
TfgeQvTTeU3E9Hkh4XsI0RracqMjp1PRQ4jua6gUW6xehPUhRN9cJDZH3vkJ
8D2E6LG0XB25Fa7A9xCin6laLJAxTSW86V4Rone3KO75p+Qz1ocQPV95V3fg
EYIeQnTkw6WXPgW9Bb6HEK2roVS7clsS1ocQze52sXsRXIj1IUSfr89J2m1R
iB6C9CZb906f96XoIUh37zrRa8dxInwPQfqrWrDPJ9f36CFI500RF7O1SkIP
QVrtRpLMSZ169BCkqTH56UXXiwnfQ5DeXWt6v9OsED0E6WhjSVuJtb7oIUjv
Ter3qLAoh528CxSk5xu5Su1Oi8X6EKQ98i96zzD7CnwPQVpK6dL4rFWO6CFI
T6u6/veN1ASsDwGane4fJ+scjvUhQMuP5x/94VKAHgL0/ldeR3W4NNaHAL3a
bfn4LJEi9Jj4/XAnw8CpVeghQBcqbxe3vWqLHgK0h/2eWDf/EqwPAbrVcmGk
6l9l2K8E6INPl4XsnhqN9SFAd1x/fS7VKRvrQ4Cez3rz59fsXKwPAfrlj7J1
SWXF6MGivWndM82dX9GDRV+sU0lKNS1FDxa99O3qxjkCGejBov8Rf6p2/CjT
r1j0qkQn0dvvg9CDRR9M/BmxOcsW64NFp+xS+Hf9hgz0YNHja14+sO6IJnwP
Fm2X477AKaqE8D1YtNVpNY9A8Vz0YNHpOnOmlnS7ogeLfiC8T3bxtGj0mPj9
0G/eQ8dLMf7jpNjMaO2ntjyM9zgJ7g5dcq0mH+M7TqY7qN8I8s7D/B4n275k
0PKXszCfx4knCExVKQrGeI2Ty+0JpXq2adjPx4jXFls2qCVjPMaIa9+TvbSE
L85/jBycvLr/yh4a+PMdIz4JyhBsmYb9eIzY+BsOpdmmY72PEWtNvYJpxsnA
u7yWUeIpbOSywT0G82eUeM9LarBZFwK8dHEfJVfWlhtZuhHg989REqbxc8OJ
okysz1Hi0bvGxa/OCetxlJQdLKuPe1+G3iNEpu3zx7N+Geg7QiblfJi3LvYT
eo4QVRc7a88Bpp5GSNfPTYM3ur2wfkZIq1OBi0l0BPqMkJmTb7TmFyejxwjJ
Hyl+RBsT7E/DZIujidf4vvfoMUwSQ72XXulNR49hsmA41XxqQQXm9zCxN15Z
l59HMJ+HidssDzXZ6gDsJ8MkfihgoCmyFD2GiE6YWKTwhUD0GCJ6dp5Lvh0p
RY8h8lBP0mjNk1eYf0Nkd+vCqzFmNdiPh4i++JKux/uz0WOItLpbmwYkZRK+
xyCxun3h9m1RE+B7DJLDyzbZil2g0WOQ6N8vuWgRF4geg6RGR/rz26NvsD4H
ycu20TN9y1KxHgdJ5PQfGmdMacL3GCD/7lD+ShskoscAWfb3dtMlGzOA7zFA
QFc+ybYoAz0GyH4Fye1rN1eixwBx3HO1zvt7HXoMkJb3qqoL7jIeA4RaAyEV
09OxPvrJ7T1KR0s+l+L60E9W6WlVr7jxAz36ydfzz1i6K5PQo5/Y7dcUjbSL
x/roJ480XqwdLChAj34S0Jr7yC8sFvtHH9m7/oNyYGgIevSR6ZNi7Bpv3yN8
jz5yKffQaxfJH1gffcQpfLHE1tAirI8+4tEgIJqr8x3rvY88Fm/JOe/wDeuj
l6yS/hyurVeFHr0k9mnM42CNUPToJSFHNP7qmeWH/bOXaD91EV9u8BTro5ek
/TNv1ckdsejRS3zkj13dtYnZL/SQOJNdoclzYtCjh2T7df9gH/+I9dFDTsjJ
nxIuTcX+1kPCRGS1XhyIx37WQxYWrl4luCgC1/cess03XHr5kTT06CFv/vAx
rfBKQ49ucsB3p5EWpwo9ukmf/3ldXa8Y9Ogm2TWjdg6LafToJqmLPdesW/gL
PbrJx2WqKnXHo7BfdZN66VMfdt+KwfroIiU15nOmVPqjRxdhXV274eqXCPTo
Iu1isp9UpJh+1UWaJGYJLY/PRI8uUpr5z15xh2r06CI67c7G+RcK0KOT/LQx
+ri9LB89OomUyw5DB04xenSS5/fvRF47Ew18j05S/pNjPJtTg/XRSdo/TNY8
VJ+CHp3EeMuzOz4pzH6aSywPx9kdOFqL+zUu6fK4M5kl9R3rg0tYG90uff2X
2R9zSfVInqv1uxSsDy7x3timVno3C+uDS27qv3pplvAdPbjEYWDUSpNUQQAv
/h0kuLOv10i6GuPdQVr0PBY+CaiCSbz4dpCBnKEDQd+Z/Xs76ZEoO7T0aTWc
5cWvnbg2jByIEyvAeLWTExtk7D++qIdkXnzayKOL9YoLTpZgPNrIu4PpmhlT
f4EMb/5thCoUOp0Z1Am86Wa3kkSzYuLo0AzmvAFbyRhnv5qsWzHwwrOqldSw
k9qSx5qghJdPLcRi2pj08Hgx3OMDkfTnPuc30YUgx8uXFhIkd2V17Z0yqOLl
RzOZvPpk+nB5JTjyAJuJyQ0bpU1nikCB599MwkIjd5Tl1+B+p4n47Fyr72Fe
B2483yYi/+P6pfxnlejZRDL1zEuX25ZAD+8CG0nmA+3rhk8r0auRBFavmXf4
XjWo8wLYSD5sX3Nwl0g1ejSSLWslJG49bESPBtLnc3TL59dt6NFAJK8EjV6S
b0CPBhKTI9tyo7McPerJ4ZPNWZKLG8CQ51FPppULbM8Tq0ePerJt0liF05xG
9Kgj6gW6cpOnV6FHHfkWk2alWlGCHnWkMdHtcOuJX+hRS6SPVWisi2tCj1py
qeE7LKyoQY9akrPSLWSbUyt6/CKzgy4UmtjVoscv0iDjeM90Sxt6/CK2jfJ1
rzyr0aOGHL0anXJ4ej161JCzu+Us/1xehx41RO5YYAA7sR49qonXMT24ZluL
HtXkRMiWR9EtvehRTc4NT319V6URPaqIbdfxg8oKFehRRYZjtc5VqTWjRxXR
Teybt06b8agi60ROnDnrWAbavPj/JIemSQjL9dRjvCvJkeeJOuNuNTCdF99K
wvlHSiFCmYvxrCDfdgzKtDzuhHRe/MqJw8ulrJQjHRivcrJtcXCd1ysu2PPi
84O0B9C6UYWdGI8yIrVlzRt96zqgePMvI28VVHqO/cXF+ZaSrqnRDkOsLhjg
DVhCun4pmogs6cL5lJBox43rny5ohBBePn0nxlNCqu0PtmD+fCdy3CDnIvMq
rN9iYiLQptgzES+alx9F5OOK/Q1TJLiYD0UkVaLPVK+gDW7x/AuJ1YqXSs6K
tehdQAJCjv4pJ9EMG3m+E/eRsx5JHnLgomc+Se1aN+Pp9npo5PnlkYGun0d6
pdrRK4+MvihLP7KgBbx4AfxGCrdmlngncdHjG3mkKOnW3d0JIbz45xJKxzX3
ixgT7xwy+pZyXstpBxlefLPJnMXKizbZdWM8M4lKpeUUkaNN4MiLXwZRfSdd
ZyfKxXilk7n5g+Jjb7gwnRefNKK21NKhP7ET45FCDgV6jZss44IVb/7JpHFv
33obi3qcbxIxroFF16s6gcubXwKpKDc4JRDVifOhyTlj5yvrD3KB5l3/F1J+
UzVplUIzXm8ceVD//JbpmVbw4l3fJ3I9rW1limcnsHjXE02Gf3zRN97SiX8/
gmQt1q+5aNgOVby/F0rWhG8P3ZLdieMHkcMm8tsHLTrAijeeH5HU1lJyjWN+
/x1Z+e/OufOje8GK9+89SUSJgYtzWRd+70LebzS1OvSzG1i8n++RRzVi3i5F
rcz9B6vKbkRrX0UPsGbzvoc0qeVmP8damN+H5CiP2ctCJ66ft8B5Av1pfecO
a2b8d6C6cahevqULaP71gaYuUVJe2s1cP/zpoe6fMjLx93kLWigE6Vy8aqze
xMwfxnU9lQ88+S8+0HdhbVXg3DYmflCfqhxaY8Zl4gtlahZbbzsy438BaZC9
UirXxfjA9+/zBCZPxBP9oOiFUHLlzQ7GFwRzpRZeUOhm/EHXROffrGNdTH7A
SsmZAp1F7Uz+QFRji/zilUx/SQc/SzfrL5eZ68uAo+mHfFvkuEx+QlfUnjxR
Vh1s5Ocv+AorZFRu7mDyG36l2QQ/iKzF68+F4+//FvOdz3h8A52YXxq5T1rB
l18/INJxQDZboYOpL1B9Kv7KPL8Z55cHJkZn/2TpNTD1CYpnO/TbxuphG79+
YfCPwoG+B1ymviH3xf2Fc/OZ/C8EOntdqE1JF9Mf4PWtocANz9uZ/gHGsvkt
Vg+amP4COttUVyYt4jL9B+Iv7FFMEG5n+hO4vJZ4wT7A1GMJZGtodijXcZn+
BloB7mO2mY1M/4OX8iNzB0VamP4IMyvTZRuXMPEsgwzvGOnag//1V9BoemH4
9Usr039hz/rnan32LfCN359Bjq51v3SmmenfcKvDSUVstBnm8vs7yAcNPFt2
qYnp/3AlvqZVyb8DTvPXB7gvGF+025PxqIJrHdv/7nvVDEf46wu4Ti1dxZVo
YtYfuLWhwG9EtxLnVwVldsu1ztvUM+sXPDlj+eLuuQZ4yV/fwHSOg5f1r1/M
+gftKp4KTfHM+lADeSdvXJl8s5FZP8HATHTf35ebmfUVrHLMfiyo/W/9hQ2f
T7/NOf7f+gwSSVsffY1uZNZviC1Yqju/vJlZ36FdJ3POXbkGZv0Hrv1+C3f1
FmZ/ACODs63gTS2zf4B+yYo/rf2rmf0FKDiek8op/8XsP6BI31rI4L/9dT0M
zbzPWq3bgPlSD2l6c/y91vxi9jcQv+PN0fIPVSDO3/+A//oGtTjdemZ/BBbf
OHcTlYswnxpAMet/W0vo//ZX4LqgbNPR43Xo0QjnbdcbrfIpYfZncGNhSz+R
rUGPRvC6veHu4wkn3N+BQXJYW2xANXo0gV/ju/iXQj+Z/SF89hEoOqtVjR7N
4PY/a4XwhzXM/hLkT7sVcyyY/U4zDD7Vi/xpXc3sT2FbQKZn06kKZv8KWrHX
1KfuLGf2t3BGdk5B/r4qZv8LQvaGUqLyP5n9MXTZXi4dyqli9s/Acpf94Hix
jtlfT/T5zebX71Yy+2+wV0+sUen8yezPwabw4WyvNOb+sx3+erav78n1LGZ/
D86Ku+4rexUx+3+wdN9978racvTogHVV9hEr9hYz9w/wysbMPE29Aj06oGa+
/zV7m3Lm/gPyrNec2z5cgPPhQuS6XEXRt6Xow4V57jc/HmgvxPlxQfXHrJ6F
42XM/Q8YBFuF2DoU4Xy5MPNHrJ3HiiL040LqpGkW793LcP6dsMUhv1VtSyZz
/wW5JxMcMu7lMvdnIHwFqiQCU7C/dML5hYYNgVczMD6dYCS6dbN2aBp6d4Jh
jHeNSVkac38I7BPLVYo2FuJ+tQtEO/Pr99QUYfy6oLRzwZZh1W+YD12Q9VlE
xSIwF+M58e8nZSqLvPqG+dEF2hUG1/stijG+3eC0+UgKLMnHfOmG2u1vFLaY
ZjH3x2BYGBTwISgL86cbTrxrnLvT7jvGvxueSa8d67tSiPnUDf5xpoekUrKZ
+3NodNJKcJNJRY8eqA3LlzEuj0SPHlDpPOIaOTMDPXrA4vA8lx75HPTogVWT
/aZE5qejRw+kHhvpmfElFT16QDvi3v7Xbd/Qoxc0W2PU7V8FoUcvPAx78D2v
MQk9esHZUmxbeAjBepv4voEW9bwRgR69MKB5vikpJwM9ekFHbd5Vky+JzPMT
OA1t9h2KKejRB/Kauw0brsShRx98XrTz4syVSejRBw660vndwuno0Tfhk/k2
1iIBPfrA90FmoM/DdPToh5XP7mYsUPqCHv3gVnDq3NMVzHlOPxw68cCoKyYR
PfohrHxB0SLHBPSY+Fnrca6tYzR69MOrokcHphbHMs+voF/r3uOrw7HoMQCD
nnezClpj0WMAlDZdrzk/NQI9BuDQVeFbwoJxzPMzmC147OFgezh6DMD6QyIP
2ZCAHgNQwLH4MdwdgR6DILpu3q40eV/m+R04L32uYLw5DD0G4fTlkjVqGl/Q
YxDUp53ocO5LQo9BMD6R7PR0RjR6DIL3ikHb/NAg9BgCn3NKNjtSQ9FjCMxl
ttxdxnqFHkOg9NH1f8WK/ugxBPH18V/U3ELQYwgMhze/Yf+IRI8hmP7q9evb
BjaE7zEMFtuv/ZK7F4Yew2Dg3y+14ZMXPu8ehouTOuLOTsyf7zEMm4Ztax6M
haDHMJTfObij4eRD9BgG8QD5Xk+ZJ8zzXUie8TIu+UE8eoxAtqHLBq7oPfQY
gcMx0e+z57iixwgc0rxU+rMqEj1GwIR9858NppHoMfH7w/qzw7aGoscIGBhs
3fPtkg96jMKKgkWWMZEJ6DEKutWOi5/PtEaPUXCb4iGgrxKGHqNwKvDRaiMf
L8L3GIXpzR4dw4aP8fxsFKo3P/FsUAhinr/D5YGI9o6oVPQYA3+pGRoL/H3R
YwweV23fo2b0CT3GoHH6Ta+EZ97M83+YNBg4Zbn/B/QYg+IXueItnj7oMQ7a
2y3zL7cmo8c4VHVvuL4sQRXrYxzGbeYWPz71AT3GYdO3tcN7dT+ixzh4DBRu
H3j1CT3G4cHSq1ZP6gOZ+w/q7R2l40XhzHkuizKT6U5eZ0/DGv75CeXRdjnl
uu8HPO9iUYNm1n+Nn3Nkzl+oLLtF7CV+Mcz5DDXo6maSfdSF8P1Y1Dzz11my
Gg8If/4synpl0F9Rf3qhJ4sqexY+Gi99F/OTRV2suVH+h78X5PLPj6horX2c
P6xzoYZ/vkTFTmEnHtoZjs+/WZRCYktn9HM75nyK+mOSldrmmzQs5J9fUWma
Da3R8+5j/AQoq/OJbvVv3JjzL0pocv8baigO81uA0jx5mNVO3mB+CFCePh5T
lC8Ggy3/fI26yf5X/K5hKnP+Rsmrs4KPVT3C568ClMTfl6sFLtjj80wBSuqY
onu47zuM/8T3QZpSMV7M+woC1PLj+4uDjCMJng9SBb1l5uu74tBDkPr1bbrH
S6dUwvcQpELvrDowcjWKOX+kYK/5wcuCYeghSD3Un62fvScBn8cKUoe9h8VD
VF5jPQlS+v55wbmR2ZiPgpTpuRcjNkdo9BCkbl67zJlV+d/5KaXynnrzPjoO
PQSppXOV5hsuTEYPQUo8MBN+hscz57PUDtHspzYHopjzW2pLhfLJ4Pwv6CFE
3dXyWqy3JBs9hKi6d5KC1S4JzPkw5XjeRGqaQSbmtxC1UmknixXlgx5C1NXj
180HpdLQQ4jKSt1cG5CZwpxPU7MvBJS6aPvheZEQJXVaXU/9YhR6CFFz5QZc
hld9QA8hyrPFe+MyryT0EKI68iqyxX28mPNz6nlbfnxRaSZzvk6tW6L6Ns/i
NtYHmypdfXtTlqgferAp1eEcM9WgYPRgUwuk2DUCzh+Z833KJKYuwNQ5Bj3Y
1KojIgrD3jnowabm7FO6P88jhXl/gJq+fabG20Kmf7MprtreFwV699CDTbGS
X7Zmy6QSvgebum2r5/Djr1Dm/QVKTLIjpG+rC3pwqDht7SdGhv6E78GhNvfG
e+n6uKAHh0o3T5T4kpHBvD9Bcc3fDXuSIOb9CkpdTX2hv7g3no9wKM3W3jv7
p/gRvgeHcs+8MNtvXhh6cKiMhvzdQZpeWB8c6s9LRRefaPqhB4f6w2aWQeXO
YPTgUN9z9TyOGedgv+VQwizTD6EzIpj3S6gQ54bkKNkU5v0TSnJvqf5j2Q9Y
H8KU77UjOgUlQXgeLEz9MtO6lDvFg3m/hZLWWB9lJRnNvP8ykZ8Vczmhn7Ff
CVN7Mx6HqTnlYr8SpoQ2u4alzGDeH5j4frPU6UgXP+b9Gyoje5ZZy2IfwvcQ
pmQt1S+af83E+hCmxMSiHzv/CGHe76Gm10XvSj31GfuVCGUxObvh7yME60OE
2pYS0B4V4Uj4HiLUBrmTMjZHM5j3iyi77tHrbUbBzPtH1JFLfvc75lqghwjl
pV/hsXPDHfQQoercO+zylAh6iFCac8RWVzo/Z95/ovwsi5yDvbLwvFiEMq/M
qnVMykUPEWrRWanaY3XhzPtVVNnaIk0Ha1vsV5Oojs0qx49X5cP/AX94/w0=

      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Medium,
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3., 3.}, {-0.6392108353170729, 1.3700480953221108`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.780128782887931*^9, 3.780129060312483*^9, 
  3.780130333585332*^9, 3.780130556819893*^9, 3.7801306868920603`*^9, 
  3.780138377506577*^9, 3.7803306527367477`*^9, 3.7803341214992533`*^9, 
  3.7803367743717003`*^9, 3.78246418008539*^9, 3.7824644516535177`*^9},
 CellLabel->"Out[12]=",
 CellID->1286315960]
}, Open  ]],

Cell["Find quantile regression fits:", "Text",
 CellChangeTimes->{{3.780129317039103*^9, 3.780129331138172*^9}, 
   3.780336851753043*^9},
 CellID->1919664181],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probs", "=", 
   RowBox[{"{", 
    RowBox[{"0.1", ",", "0.25", ",", "0.5", ",", "0.75", ",", "0.9"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData", ",", "4", ",", "probs"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.780128719864993*^9, 3.7801287236506243`*^9}, {
  3.780128785583146*^9, 3.780128823294286*^9}, {3.780128862844314*^9, 
  3.780128869116891*^9}, {3.780129080153743*^9, 3.78012908695848*^9}, {
  3.780130327156806*^9, 3.780130327390568*^9}},
 CellLabel->"In[13]:=",
 CellID->1285359108],

Cell["Plot the data and the regression quantiles:", "Text",
 CellChangeTimes->{{3.780129338685601*^9, 3.7801293598812313`*^9}},
 CellID->2145133676],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"distData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"#1", "/@", 
            RowBox[{"distData", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
         "]"}], "&"}], ")"}], "/@", "qFuncs"}], ",", "distData"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"True", ",", 
        RowBox[{"Length", "[", "probs", "]"}]}], "]"}], ",", "False"}], 
     "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{"probs", ",", "\"\<data\>\""}], "]"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780128844683023*^9, 3.7801288519728394`*^9}, {
  3.780128893072253*^9, 3.78012895909826*^9}, {3.780129001247841*^9, 
  3.780129043511228*^9}},
 CellLabel->"In[15]:=",
 CellID->205308562],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Een3fZ6PV9rQfK0ac/Wz6h1fIwH5P0sdHVQ=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/1Da2GD35PgAi9QspcBfO5jxA7l5qqmhizqY8QXjXorZZ8WZ9mXBgVnWtb0t
k+MTFq6RjtTJbwdVwfiFuM/pH0+/mhzfYMy9mmvg2o7tzwMHM4nTC60n7w+w
3PaXSsrBdggT3D9w4fiS9O0a7cz9BfVR/+RGyLZj/wpAbv547XDb5P0JBl5J
YZpZbaApuH+BNfveB9PgyfsbTG4qpzy90Yb9/walya774w60MfkB4jJ9ZxYp
tzH5A7QeKYaMCrUx+QW+tQ8HqpRM5h/IbpRkm0dO5iew+J+SafKtViZ/wexd
v1mu3NvK5DeY7zbDJGpJK5P/IFvZrWlvz2R+BOtRX6/5HyfzJ1zrl5gr+7yF
ya+gOCVWVMOohcm/kLrIeuyRSgvkC/IzvFHWCJ4zPJm/QU8h07UmvRnkBfkd
8sqkL7c6NTP5H4IMOdWbjzaDkWB+AGm7VVdLljUz8wdY7oqvoNua4IBgfgG5
AFP2WHwTM//AzrOLHj+/2YT9q4YLvm9m2Go3MfMXlC6byi2WagIfwfwG+R1D
L57mc5n5D2JaT/TEuXKx/7WQKalg9scRLjN/gsUGsai/FnKZ+RUG/x43zK5p
ZOZfiLOqlckIaWTmZxg+/uTi9jONzPwNCjOrFHVXNzLzO5jfjk0oam5g5n/Y
/LS2vCeygVkfQLvanpWh5g3M+gFSD37b0rWmgVlfgHzT7uSyVg6z/gCq3FvP
OIrDrE/gyRyPG65nOTheGuDgU8VhKyUOs76B1nVyJ8e59TBNsP4B38Yde+FF
PbM+guyQELPfTtfjeGqExIMTO7uW1DPrK8jgbvQ4W12HHlzQ3rmqNcq3jlmf
wQOLGO473vpL4MGFH1uiVNzn1DHrO/AKGzyy41stejSBgu8FmSKnWmZ9CFGS
A21au2rRoxkCfvzP+bFkLbO+hL2izgEkvYZZf8K088bxVXdrmPUprJj62qpz
Sw2zfoX+jOOX+4eqmfUt5DptNeqPr2bWvyB86LevvVbVzPoYqiWWnu1XqWbW
z2C/9K3rRGEVs76G4fTbS5R3VjHrb8goPJxkk1bJrM/h9uqJoK7Nlcz6HZqD
V8/2j69g1vfgusj5oMPaCmb9D6pX+wKSXvxAjw44/a+UJiz+wTw/QIWm45F5
3t/RowPWG2roHZn1nXn+gCWZSZSYUzn2pxN0T1fdXz61HH06YfM0g71pD8qw
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
CmTOV1EJ9MemYJ9g3K+dQolmFpH7KqHk/2fezqA=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
MUzMNn2L0YcJnr9iXsfcamsquUb+D8qk14E=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
hcO7xpzzslbQ/g3zW1iH7LG0/plgPWC80e3+v8YHcB6nrctsl0NI9/iB6We5
Jw+p5g8cX+ATMlPr2ic5ti8bvOqz1o/hy+n4hPTl09qnPZaDZff4BYMnrHPM
BTkd39D5Ob/6g5sc2/8Vfk9vGmu/Wk7nBxjvvufUytlyOn9A5MsHbkUmcjq/
wJYtjdvbVPMtzj8gPiaRPKiU0fkJ3pWGzvuYKaPzFwSd+TzgcoSMzm9gbR2R
9P0Gne8lYNr8T/qHwzI6P4LWoyl35qyn64kUvA3vPHecI6PzK4xessxF01hG
518IHfF2pSNHBlnd8zM4c3fEnomvo/M3PA5yag05UweG3fM7bFbqLhlsV0fn
f1Akzb8v0ayDzd3rA/iWC3Nq42vp+gEHzM4XbTxVC6u61xeodx72ZjzU0vUH
ltjvHLOxvQbblw+JiWZTm/g1dP2Cx/ctYjoP1MD97vUNRj1e+s/hKTV0/YOb
D6F5d1U1tr8QrHZ9PSl6Vk3XT3BKyzFP/rOarq9gdr13u9Xgarr+QufN+YlW
n6vo+gyGQQu80i9V0fUbok/96KqdV0XXdzDTzV4Y1lpJ138I0ay21ouopPsD
OG/bnKy3u5LuH6D1Jsn+17iS7i/A8WPPhXrCCrr/gMy3zwf8drmC7k/gnbHz
yC82FdhfSuEPad365U3ldH8DWZFTX19+XQ69uvc/4He8osN/SzndH0EWr2D2
JoNy7E9lkGlUuKI9vYzur0Do/26s+4ky9CiHMZNNQ2PMy+j+DHTTOcmlZaXo
UQ7Rk/W2Ndwrpfs78J3cx7V6eSl6VEDkbWFmlmYp3R/CWauJ+1/8V4IelTCj
+Jvdwb0ldH8JRjteTwLjErr/BPfLLkP1vhTT/SkcGidtkJ4vpvtXONJTEPLO
qpjub+EdV9v4SW0R3f/CsW8Otk+eFNH9Mei6HOXEOhXR/TM8ObTYpl6viO6v
4bLwb9lyUkj336C/htfyZX8h3Z/D7pSz88+ZFtL9O5Q3ZrEuPwro/h4SIyNX
nwksoPt/WJHVUitR9dNujzpINtzj9VdHPn1+AI+NnyTL/s1Hjzq44qrkeO3O
p88f4G74WFRrnI/tkcF957kBh8Ly0EcGwsYDx+KH5mH7ZDDhqZe94FIuff6B
cVxp+t3WH9heGSx9PVlktfcH+smgr10vu7ffv2P75TBol2bZb8u/0+cvqP43
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
9OG6
         "]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw92nk8VdsXAPCLeyk0K6WU5uk1KPVKtE5FpOGhgZ9KGfIaVXoNJFOFp4ko
QyUaROZZon3MszKGEDKP1zzz073rvPvHex+fm+3s9V1r7X3OPov1L2ueEWSx
WP+b+M/v//M/k2hjiXUq4ZGfoFUjZuH9FhF6a+biUrj4Gr6/vaIo+l2E/pFQ
M2jvS5Ok3lUnniSK0CqcKj/JzRUQpFJtJhE08bPGvVcvckqJh/vvjwj9UW/B
8cThNHK/5feAIvS1Sc8arP1TydWJ0d5eEaFvqYw1boqkycRgEyOK0FEdDxPi
/vgAqr+HUxGhH7TeyB++kEQ28z4idITlLZ2nZwvIIt6AIrSWtECU/oksEOVd
oAgdOHpIi92WA32/L69XmL4bvcGo8t0v4A1XLUy7bbKUdi+shpzs3x9hOjF5
jmbTwzL4PVuNGGHaxMA+7FZGIHn3e7pvhelLe3Ir/hcTDrzLeyJMX8z78F6h
oBRu/x7OTJi2j/ismRlWTIx4H2FaXlv1i7NBBmjyBhSmuSdYGU6jNcCbrqIw
7blrj0zSx2BYzZuwMJ1dMlLmaB1GeMNJCNOF9k7KWbezgO8hTL/eEjK+420e
enDoCsnd/o+u5qEHh56fxHlhVx9LeJeXyKElDWQPmm98S/geHNpAI0vOxu4t
enBowU5p1fP/1KIHh35128zr3eB39ODQLs0a7SLmCcD34NAbD9T1yu+JInwP
Di0Rte96WjLjwaEVZVWj6k+UAd+DQx+bIje2fDyP8D04tOH73I59b5LQg00f
fBIS1aEdR/gebHqq6z69c77f0INNO0yiw91rigjfg037LjtZOCeyAD3Y9CbF
dusxzxfowaYXz9XcpCCUiB5s+kX/45IrzrnowaYnX/OVjHctQA82baKiPfXQ
qizC92DTL9fMWNG4Oo3wPdi0/usCiwufS9GDTT/37CiRjslDDzYtI6fiX16U
TfgeQvTTeU3E9Hkh4XsI0RracqMjp1PRQ4jua6gUW6xehPUhRN9cJDZH3vkJ
8D2E6LG0XB25Fa7A9xCin6laLJAxTSW86V4Rone3KO75p+Qz1ocQPV95V3fg
EYIeQnTkw6WXPgW9Bb6HEK2roVS7clsS1ocQze52sXsRXIj1IUSfr89J2m1R
iB6C9CZb906f96XoIUh37zrRa8dxInwPQfqrWrDPJ9f36CFI500RF7O1SkIP
QVrtRpLMSZ169BCkqTH56UXXiwnfQ5DeXWt6v9OsED0E6WhjSVuJtb7oIUjv
Ter3qLAoh528CxSk5xu5Su1Oi8X6EKQ98i96zzD7CnwPQVpK6dL4rFWO6CFI
T6u6/veN1ASsDwGane4fJ+scjvUhQMuP5x/94VKAHgL0/ldeR3W4NNaHAL3a
bfn4LJEi9Jj4/XAnw8CpVeghQBcqbxe3vWqLHgK0h/2eWDf/EqwPAbrVcmGk
6l9l2K8E6INPl4XsnhqN9SFAd1x/fS7VKRvrQ4Cez3rz59fsXKwPAfrlj7J1
SWXF6MGivWndM82dX9GDRV+sU0lKNS1FDxa99O3qxjkCGejBov8Rf6p2/CjT
r1j0qkQn0dvvg9CDRR9M/BmxOcsW64NFp+xS+Hf9hgz0YNHja14+sO6IJnwP
Fm2X477AKaqE8D1YtNVpNY9A8Vz0YNHpOnOmlnS7ogeLfiC8T3bxtGj0mPj9
0G/eQ8dLMf7jpNjMaO2ntjyM9zgJ7g5dcq0mH+M7TqY7qN8I8s7D/B4n275k
0PKXszCfx4knCExVKQrGeI2Ty+0JpXq2adjPx4jXFls2qCVjPMaIa9+TvbSE
L85/jBycvLr/yh4a+PMdIz4JyhBsmYb9eIzY+BsOpdmmY72PEWtNvYJpxsnA
u7yWUeIpbOSywT0G82eUeM9LarBZFwK8dHEfJVfWlhtZuhHg989REqbxc8OJ
okysz1Hi0bvGxa/OCetxlJQdLKuPe1+G3iNEpu3zx7N+Geg7QiblfJi3LvYT
eo4QVRc7a88Bpp5GSNfPTYM3ur2wfkZIq1OBi0l0BPqMkJmTb7TmFyejxwjJ
Hyl+RBsT7E/DZIujidf4vvfoMUwSQ72XXulNR49hsmA41XxqQQXm9zCxN15Z
l59HMJ+HidssDzXZ6gDsJ8MkfihgoCmyFD2GiE6YWKTwhUD0GCJ6dp5Lvh0p
RY8h8lBP0mjNk1eYf0Nkd+vCqzFmNdiPh4i++JKux/uz0WOItLpbmwYkZRK+
xyCxun3h9m1RE+B7DJLDyzbZil2g0WOQ6N8vuWgRF4geg6RGR/rz26NvsD4H
ycu20TN9y1KxHgdJ5PQfGmdMacL3GCD/7lD+ShskoscAWfb3dtMlGzOA7zFA
QFc+ybYoAz0GyH4Fye1rN1eixwBx3HO1zvt7HXoMkJb3qqoL7jIeA4RaAyEV
09OxPvrJ7T1KR0s+l+L60E9W6WlVr7jxAz36ydfzz1i6K5PQo5/Y7dcUjbSL
x/roJ480XqwdLChAj34S0Jr7yC8sFvtHH9m7/oNyYGgIevSR6ZNi7Bpv3yN8
jz5yKffQaxfJH1gffcQpfLHE1tAirI8+4tEgIJqr8x3rvY88Fm/JOe/wDeuj
l6yS/hyurVeFHr0k9mnM42CNUPToJSFHNP7qmeWH/bOXaD91EV9u8BTro5ek
/TNv1ckdsejRS3zkj13dtYnZL/SQOJNdoclzYtCjh2T7df9gH/+I9dFDTsjJ
nxIuTcX+1kPCRGS1XhyIx37WQxYWrl4luCgC1/cess03XHr5kTT06CFv/vAx
rfBKQ49ucsB3p5EWpwo9ukmf/3ldXa8Y9Ogm2TWjdg6LafToJqmLPdesW/gL
PbrJx2WqKnXHo7BfdZN66VMfdt+KwfroIiU15nOmVPqjRxdhXV274eqXCPTo
Iu1isp9UpJh+1UWaJGYJLY/PRI8uUpr5z15xh2r06CI67c7G+RcK0KOT/LQx
+ri9LB89OomUyw5DB04xenSS5/fvRF47Ew18j05S/pNjPJtTg/XRSdo/TNY8
VJ+CHp3EeMuzOz4pzH6aSywPx9kdOFqL+zUu6fK4M5kl9R3rg0tYG90uff2X
2R9zSfVInqv1uxSsDy7x3timVno3C+uDS27qv3pplvAdPbjEYWDUSpNUQQAv
/h0kuLOv10i6GuPdQVr0PBY+CaiCSbz4dpCBnKEDQd+Z/Xs76ZEoO7T0aTWc
5cWvnbg2jByIEyvAeLWTExtk7D++qIdkXnzayKOL9YoLTpZgPNrIu4PpmhlT
f4EMb/5thCoUOp0Z1Am86Wa3kkSzYuLo0AzmvAFbyRhnv5qsWzHwwrOqldSw
k9qSx5qghJdPLcRi2pj08Hgx3OMDkfTnPuc30YUgx8uXFhIkd2V17Z0yqOLl
RzOZvPpk+nB5JTjyAJuJyQ0bpU1nikCB599MwkIjd5Tl1+B+p4n47Fyr72Fe
B2483yYi/+P6pfxnlejZRDL1zEuX25ZAD+8CG0nmA+3rhk8r0auRBFavmXf4
XjWo8wLYSD5sX3Nwl0g1ejSSLWslJG49bESPBtLnc3TL59dt6NFAJK8EjV6S
b0CPBhKTI9tyo7McPerJ4ZPNWZKLG8CQ51FPppULbM8Tq0ePerJt0liF05xG
9Kgj6gW6cpOnV6FHHfkWk2alWlGCHnWkMdHtcOuJX+hRS6SPVWisi2tCj1py
qeE7LKyoQY9akrPSLWSbUyt6/CKzgy4UmtjVoscv0iDjeM90Sxt6/CK2jfJ1
rzyr0aOGHL0anXJ4ej161JCzu+Us/1xehx41RO5YYAA7sR49qonXMT24ZluL
HtXkRMiWR9EtvehRTc4NT319V6URPaqIbdfxg8oKFehRRYZjtc5VqTWjRxXR
Teybt06b8agi60ROnDnrWAbavPj/JIemSQjL9dRjvCvJkeeJOuNuNTCdF99K
wvlHSiFCmYvxrCDfdgzKtDzuhHRe/MqJw8ulrJQjHRivcrJtcXCd1ysu2PPi
84O0B9C6UYWdGI8yIrVlzRt96zqgePMvI28VVHqO/cXF+ZaSrqnRDkOsLhjg
DVhCun4pmogs6cL5lJBox43rny5ohBBePn0nxlNCqu0PtmD+fCdy3CDnIvMq
rN9iYiLQptgzES+alx9F5OOK/Q1TJLiYD0UkVaLPVK+gDW7x/AuJ1YqXSs6K
tehdQAJCjv4pJ9EMG3m+E/eRsx5JHnLgomc+Se1aN+Pp9npo5PnlkYGun0d6
pdrRK4+MvihLP7KgBbx4AfxGCrdmlngncdHjG3mkKOnW3d0JIbz45xJKxzX3
ixgT7xwy+pZyXstpBxlefLPJnMXKizbZdWM8M4lKpeUUkaNN4MiLXwZRfSdd
ZyfKxXilk7n5g+Jjb7gwnRefNKK21NKhP7ET45FCDgV6jZss44IVb/7JpHFv
33obi3qcbxIxroFF16s6gcubXwKpKDc4JRDVifOhyTlj5yvrD3KB5l3/F1J+
UzVplUIzXm8ceVD//JbpmVbw4l3fJ3I9rW1limcnsHjXE02Gf3zRN97SiX8/
gmQt1q+5aNgOVby/F0rWhG8P3ZLdieMHkcMm8tsHLTrAijeeH5HU1lJyjWN+
/x1Z+e/OufOje8GK9+89SUSJgYtzWRd+70LebzS1OvSzG1i8n++RRzVi3i5F
rcz9B6vKbkRrX0UPsGbzvoc0qeVmP8damN+H5CiP2ctCJ66ft8B5Av1pfecO
a2b8d6C6cahevqULaP71gaYuUVJe2s1cP/zpoe6fMjLx93kLWigE6Vy8aqze
xMwfxnU9lQ88+S8+0HdhbVXg3DYmflCfqhxaY8Zl4gtlahZbbzsy438BaZC9
UirXxfjA9+/zBCZPxBP9oOiFUHLlzQ7GFwRzpRZeUOhm/EHXROffrGNdTH7A
SsmZAp1F7Uz+QFRji/zilUx/SQc/SzfrL5eZ68uAo+mHfFvkuEx+QlfUnjxR
Vh1s5Ocv+AorZFRu7mDyG36l2QQ/iKzF68+F4+//FvOdz3h8A52YXxq5T1rB
l18/INJxQDZboYOpL1B9Kv7KPL8Z55cHJkZn/2TpNTD1CYpnO/TbxuphG79+
YfCPwoG+B1ymviH3xf2Fc/OZ/C8EOntdqE1JF9Mf4PWtocANz9uZ/gHGsvkt
Vg+amP4COttUVyYt4jL9B+Iv7FFMEG5n+hO4vJZ4wT7A1GMJZGtodijXcZn+
BloB7mO2mY1M/4OX8iNzB0VamP4IMyvTZRuXMPEsgwzvGOnag//1V9BoemH4
9Usr039hz/rnan32LfCN359Bjq51v3SmmenfcKvDSUVstBnm8vs7yAcNPFt2
qYnp/3AlvqZVyb8DTvPXB7gvGF+025PxqIJrHdv/7nvVDEf46wu4Ti1dxZVo
YtYfuLWhwG9EtxLnVwVldsu1ztvUM+sXPDlj+eLuuQZ4yV/fwHSOg5f1r1/M
+gftKp4KTfHM+lADeSdvXJl8s5FZP8HATHTf35ebmfUVrHLMfiyo/W/9hQ2f
T7/NOf7f+gwSSVsffY1uZNZviC1Yqju/vJlZ36FdJ3POXbkGZv0Hrv1+C3f1
FmZ/ACODs63gTS2zf4B+yYo/rf2rmf0FKDiek8op/8XsP6BI31rI4L/9dT0M
zbzPWq3bgPlSD2l6c/y91vxi9jcQv+PN0fIPVSDO3/+A//oGtTjdemZ/BBbf
OHcTlYswnxpAMet/W0vo//ZX4LqgbNPR43Xo0QjnbdcbrfIpYfZncGNhSz+R
rUGPRvC6veHu4wkn3N+BQXJYW2xANXo0gV/ju/iXQj+Z/SF89hEoOqtVjR7N
4PY/a4XwhzXM/hLkT7sVcyyY/U4zDD7Vi/xpXc3sT2FbQKZn06kKZv8KWrHX
1KfuLGf2t3BGdk5B/r4qZv8LQvaGUqLyP5n9MXTZXi4dyqli9s/Acpf94Hix
jtlfT/T5zebX71Yy+2+wV0+sUen8yezPwabw4WyvNOb+sx3+erav78n1LGZ/
D86Ku+4rexUx+3+wdN9978racvTogHVV9hEr9hYz9w/wysbMPE29Aj06oGa+
/zV7m3Lm/gPyrNec2z5cgPPhQuS6XEXRt6Xow4V57jc/HmgvxPlxQfXHrJ6F
42XM/Q8YBFuF2DoU4Xy5MPNHrJ3HiiL040LqpGkW793LcP6dsMUhv1VtSyZz
/wW5JxMcMu7lMvdnIHwFqiQCU7C/dML5hYYNgVczMD6dYCS6dbN2aBp6d4Jh
jHeNSVkac38I7BPLVYo2FuJ+tQtEO/Pr99QUYfy6oLRzwZZh1W+YD12Q9VlE
xSIwF+M58e8nZSqLvPqG+dEF2hUG1/stijG+3eC0+UgKLMnHfOmG2u1vFLaY
ZjH3x2BYGBTwISgL86cbTrxrnLvT7jvGvxueSa8d67tSiPnUDf5xpoekUrKZ
+3NodNJKcJNJRY8eqA3LlzEuj0SPHlDpPOIaOTMDPXrA4vA8lx75HPTogVWT
/aZE5qejRw+kHhvpmfElFT16QDvi3v7Xbd/Qoxc0W2PU7V8FoUcvPAx78D2v
MQk9esHZUmxbeAjBepv4voEW9bwRgR69MKB5vikpJwM9ekFHbd5Vky+JzPMT
OA1t9h2KKejRB/Kauw0brsShRx98XrTz4syVSejRBw660vndwuno0Tfhk/k2
1iIBPfrA90FmoM/DdPToh5XP7mYsUPqCHv3gVnDq3NMVzHlOPxw68cCoKyYR
PfohrHxB0SLHBPSY+Fnrca6tYzR69MOrokcHphbHMs+voF/r3uOrw7HoMQCD
nnezClpj0WMAlDZdrzk/NQI9BuDQVeFbwoJxzPMzmC147OFgezh6DMD6QyIP
2ZCAHgNQwLH4MdwdgR6DILpu3q40eV/m+R04L32uYLw5DD0G4fTlkjVqGl/Q
YxDUp53ocO5LQo9BMD6R7PR0RjR6DIL3ikHb/NAg9BgCn3NKNjtSQ9FjCMxl
ttxdxnqFHkOg9NH1f8WK/ugxBPH18V/U3ELQYwgMhze/Yf+IRI8hmP7q9evb
BjaE7zEMFtuv/ZK7F4Yew2Dg3y+14ZMXPu8ehouTOuLOTsyf7zEMm4Ztax6M
haDHMJTfObij4eRD9BgG8QD5Xk+ZJ8zzXUie8TIu+UE8eoxAtqHLBq7oPfQY
gcMx0e+z57iixwgc0rxU+rMqEj1GwIR9858NppHoMfH7w/qzw7aGoscIGBhs
3fPtkg96jMKKgkWWMZEJ6DEKutWOi5/PtEaPUXCb4iGgrxKGHqNwKvDRaiMf
L8L3GIXpzR4dw4aP8fxsFKo3P/FsUAhinr/D5YGI9o6oVPQYA3+pGRoL/H3R
YwweV23fo2b0CT3GoHH6Ta+EZ97M83+YNBg4Zbn/B/QYg+IXueItnj7oMQ7a
2y3zL7cmo8c4VHVvuL4sQRXrYxzGbeYWPz71AT3GYdO3tcN7dT+ixzh4DBRu
H3j1CT3G4cHSq1ZP6gOZ+w/q7R2l40XhzHkuizKT6U5eZ0/DGv75CeXRdjnl
uu8HPO9iUYNm1n+Nn3Nkzl+oLLtF7CV+Mcz5DDXo6maSfdSF8P1Y1Dzz11my
Gg8If/4synpl0F9Rf3qhJ4sqexY+Gi99F/OTRV2suVH+h78X5PLPj6horX2c
P6xzoYZ/vkTFTmEnHtoZjs+/WZRCYktn9HM75nyK+mOSldrmmzQs5J9fUWma
Da3R8+5j/AQoq/OJbvVv3JjzL0pocv8baigO81uA0jx5mNVO3mB+CFCePh5T
lC8Ggy3/fI26yf5X/K5hKnP+Rsmrs4KPVT3C568ClMTfl6sFLtjj80wBSuqY
onu47zuM/8T3QZpSMV7M+woC1PLj+4uDjCMJng9SBb1l5uu74tBDkPr1bbrH
S6dUwvcQpELvrDowcjWKOX+kYK/5wcuCYeghSD3Un62fvScBn8cKUoe9h8VD
VF5jPQlS+v55wbmR2ZiPgpTpuRcjNkdo9BCkbl67zJlV+d/5KaXynnrzPjoO
PQSppXOV5hsuTEYPQUo8MBN+hscz57PUDtHspzYHopjzW2pLhfLJ4Pwv6CFE
3dXyWqy3JBs9hKi6d5KC1S4JzPkw5XjeRGqaQSbmtxC1UmknixXlgx5C1NXj
180HpdLQQ4jKSt1cG5CZwpxPU7MvBJS6aPvheZEQJXVaXU/9YhR6CFFz5QZc
hld9QA8hyrPFe+MyryT0EKI68iqyxX28mPNz6nlbfnxRaSZzvk6tW6L6Ns/i
NtYHmypdfXtTlqgferAp1eEcM9WgYPRgUwuk2DUCzh+Z833KJKYuwNQ5Bj3Y
1KojIgrD3jnowabm7FO6P88jhXl/gJq+fabG20Kmf7MprtreFwV699CDTbGS
X7Zmy6QSvgebum2r5/Djr1Dm/QVKTLIjpG+rC3pwqDht7SdGhv6E78GhNvfG
e+n6uKAHh0o3T5T4kpHBvD9Bcc3fDXuSIOb9CkpdTX2hv7g3no9wKM3W3jv7
p/gRvgeHcs+8MNtvXhh6cKiMhvzdQZpeWB8c6s9LRRefaPqhB4f6w2aWQeXO
YPTgUN9z9TyOGedgv+VQwizTD6EzIpj3S6gQ54bkKNkU5v0TSnJvqf5j2Q9Y
H8KU77UjOgUlQXgeLEz9MtO6lDvFg3m/hZLWWB9lJRnNvP8ykZ8Vczmhn7Ff
CVN7Mx6HqTnlYr8SpoQ2u4alzGDeH5j4frPU6UgXP+b9Gyoje5ZZy2IfwvcQ
pmQt1S+af83E+hCmxMSiHzv/CGHe76Gm10XvSj31GfuVCGUxObvh7yME60OE
2pYS0B4V4Uj4HiLUBrmTMjZHM5j3iyi77tHrbUbBzPtH1JFLfvc75lqghwjl
pV/hsXPDHfQQoercO+zylAh6iFCac8RWVzo/Z95/ovwsi5yDvbLwvFiEMq/M
qnVMykUPEWrRWanaY3XhzPtVVNnaIk0Ha1vsV5Oojs0qx49X5cP/AX94/w0=

         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Temperature\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3., 3.}, {-0.6392108353170729, 1.3700480953221108`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "0.1`", "0.25`", "0.5`", "0.75`", "0.9`"}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.780128853642371*^9, 3.780128873770629*^9}, 
   3.780128919096334*^9, {3.7801290204977093`*^9, 3.780129088544067*^9}, 
   3.780130329618779*^9, 3.780130557381246*^9, 3.7801306896122723`*^9, 
   3.780138377875176*^9, 3.7803306532078753`*^9, 3.780334122155136*^9, 
   3.7803367751195602`*^9, 3.7824641805818787`*^9, 3.782464456515139*^9},
 CellLabel->"Out[15]=",
 CellID->962893800]
}, Open  ]],

Cell["\<\
Note that the regression quantiles clearly outline the heteroscedastic nature \
of the data.\
\>", "Text",
 CellChangeTimes->{{3.7801293992129908`*^9, 3.780129418674838*^9}, {
  3.78012945522956*^9, 3.780129468043413*^9}, {3.7801294984628563`*^9, 
  3.780129509199831*^9}, {3.780336569228826*^9, 3.7803365698581333`*^9}},
 CellID->2084879848]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find variance anomalies", "Subsubsection",
 CellChangeTimes->{{3.7824641538709393`*^9, 3.782464168237093*^9}},
 CellLabel->"In[8]:=",
 CellID->1312985546],

Cell[TextData[{
 "A certain contextual type of anomaly is a subset of points that have \
variance very different than other subsets. Using Quantile regression (1) we \
can evaluate the regressor dependent variance for each point using the \
regression quantiles ",
 Cell[BoxData[
  FormBox["0.25", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["0.75", TraditionalForm]]],
 ", and (2) find the points that have outlier variances.  "
}], "Text",
 CellChangeTimes->{{3.782464176529139*^9, 3.782464421127736*^9}},
 CellID->469855503],

Cell["\<\
Here we compute and plot the variance estimates for a signal:\
\>", "Text",
 CellChangeTimes->{{3.782464586811838*^9, 3.782464609165736*^9}},
 CellID->23717981],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData", ",", "4", ",", 
     RowBox[{"{", 
      RowBox[{"0.25", ",", "0.75"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"variances", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "@*", "Subtract"}], "@@", 
       RowBox[{"Through", "[", 
        RowBox[{"qFuncs", "[", "#", "]"}], "]"}]}], "&"}], ",", 
     RowBox[{"distData", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"variances", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.782464437873867*^9, 3.7824645785003*^9}},
 CellLabel->"In[32]:=",
 CellID->841051804],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw913lczHv7BvARWqgkspdxkGQbS52QXJYIlZEolZr2qVRTTcu0zowi6RBC
9hGRtbFXwliirCFky/Qg1bHMyZYj+c3z+t2fxx+83u655/pezfRdhgREuwXr
cDicZdq//vvv///RTP8ddMnZSe/xdPoPvDdd+370AmZ9XM+K3hH4F7MJ4h1O
GmvuMPdG8YWCn48Mn5D7ISFT2Lf/fOZBONcrtO+FLGYuzN8/VVZeYv4Dhet0
t9m2MQ/D+NQJWb3G1ZEtsdNmn7UgiNkKG6fuduAWMFvDoUdYgsdN5tGYO37e
aoOfzGNx6I9MyynWT8k8zA/yM/jgwTwe1xO4b4dnMk+A23PD6KbjzBORZhru
Y1fHPAlOu9IC+nOekW2gbM+1XW/JbAuXEy//2rWA+U9Msz9j7hTNbIdJFst2
bNzAPBkGdcYV0pPMU3C1ZaBNnwfMUzH+SeX5pRpmewy3cOs6x+g5eRpWQPfG
OytmB3S7NOLs9FnM03F/QPvqRT7MQEZt1T9cMVkKGEc+LD6Rw+Yz4B/sH6Cn
YPMZWORQ+nD4aTafidIk85MmN9h8JuZufnzyVh2bz8JQs5FrvZrZfBa6Sbw0
qjY2nw31DOVWHb0XNJ+NKE207dDeZI4jjnV9JbPksrkj3HVmjTMZxeZzEBHa
8Pn1JDafg5ozvzOLprH5XNhEvd7q6cjmc5Hf80EDx5nNnXCX27Nf4SI2d8KF
QY2fpi9l83kYu2qLRf0yNp8HTn3oMqkPm8/H4KI9S6x92Xw+UnxWVr1i5ixA
ZaZn6P7/zRdg8J6gdynL2dwZf4/68CvMm82dUXD0T0GsJ5u7YN3eNVcL3Nnc
BZ/XWr1UL2RzVyS+XxbgOp/NXTF0dqD+21lsvhCFvXIyi+3ZfCEMX/TK3cl+
Xhw+/jGfU3uN/TzBR5xXiOnwP9jr+VhhWv5T1Zes4mP99VWOOw3Z/iK8/t6z
qJzD9hdh4Ii99wZ/YZ/3Ikx6JEm+10hWLULXlQ1ed/73/XBD0AlzS/ObZLhh
SkPchivlbN8NrptGul0+zPbdUOiUaW6+ne0vxjdZdfHTbLa/GMNVDof+TWD7
izEic2TtyiC2vxhXXO/VJy1i++54rohPfzmN7btj4U9/4ZmRbN8dv+ufLupi
xvbdUX77D82d3+z3bwkCHOVtZi1kLMHH6mlc9UOydAkGPN8+iHeBrFqC6z/q
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
YuRQsigRX/bGFv36pKL+iagI7LHjZwU5T3s8UiHPMoes0L5f+6e/pB5kZSI4
T/u+MBpOViXCzmb/qsK3l6h/ImpWD6nbISOrtfvKtb+MLMga7etPX5/7u/wi
9U/C0e1n9RI8ySZJmB02fV3StwvUPwliS8fRRpvJvCSI6o5MmDKJjCQIsjxa
u9ZWUP8kpE4cXZEgJguSoGkyathoRhYlYdJR9QnBufPUPwlWK7MzGpeR85IA
cfN261/l1D8JBVnv3CfuJSu1eRdCOnTnkFVJeDNkQdORv8uofxLcy5ICrTaS
1dr5mocq+WSyJgnXtk1fdLmhlPpLYP9JEdySQzaRQJz33LWLDZkrwdGVD5eb
qc9Rfwn07614PTSXDAmaktbybCeT+RKIVvfa4vbuLPWX4BqnOShjC1kkQe+/
P324MocsleC2s6F8aNsZ6i+BZtQfsQcPkxUS1K4z67HEl6zUHk/KzUMTepFV
EuS3Dds0p/o09ZegprvBoK1SslqC0vNem60nkzUSBBl3LNT7fIr6J4PT7cnO
icfJJsmoPV19+0w4mZuM0WblvHwrMi8ZFuNz+z96d5L6J6POeFhdejGZnwzV
6eALW8PJgmQ0WdkMsBxLFiWjICZhOu/zCeqfjJZ8o/SKMnJeMuy21Vvel5EV
yajKvJMjXkBWJiN/+cV/j/Yhq5LRNnLzDelrJfVPhrXGZua3E2R1MkRnM8/3
kpM1yXghD858tZjMScEV74oPfiPIJinIXPcsz/ZHCfVPQdDW0pvjDpJ5KRDW
P7Mu9SQjBV+iDRa/MCLzU7TPA4Zvi68fp/4pqNh/RG69kixKwVFByZ3IWWRp
CrpsexWaoUfOS0HHsi6fI+4do/4psFK+NcEOsjIFhsULAvUjyKoUNLp0rL3v
QK5JwczjlaOL+5DVKdj5KOxdQetR6q/drzm5XPmAzElF1GHh+J9nySap6BKz
uMuqPWRuKni8qUnLc8m8VCR/eTd2XRoZqXgwcdxUbhyZnwpVt0Fig0iyIBUf
f18fMjWCLEqF7jan3ANsLk1FsU/ZT3sxOS8VOvfHl35KJytSYZ1600D5F1mZ
ioA3O+yiFWRVKv6z/mKuxTlyTSpsuy5wLblPVqdizs1llaYa1j8VscGdp0wx
pZ8PJw21PoIvfezIJmnYaLvGfrs/mZsGuWSL15l1ZF4auEcUW5ZdIiMNOm4q
u6TPZH4aln4xWqMzin3+aSjuV3ivOZh9/mlInb3ZffB+9vmngfP7t1/+W/b5
p8Hpzr+Tp1jT90mRBqXtbmudWLIyDWqVTvLLCrJKmy/hlvp2Zd//NHgVlx6u
HsO+/2kQjn9sV+zBvv9pEHtk6X5mvw+cdAiXPzhXWMK+/+nYsqpaU/KSzE3H
v2aJS3oZ0e8bLx21ru/WVE4jIx3dxJYTLkWT+emoq0JrWyFZkI7MvJlREU/I
onToGtvN72FE5wNpOoIyx1i/nEXOSwfnz3En76SQFenYKZy36ulpsjIdBT7Z
8398JKu0+UvbCodb0/mpJh2GBUUTPULI6nScDt6pWLWPrEnHIJ3mv442sPNf
BoTKrXsuc+n8aJKB8lOnJRcFZG4G5i50Vu3YS+ZloK0yvK/bazIyMMB70NBn
w+l8zM/AqUWRq0eHkQUZePM+rGnGMbIoAw+iLVpMW8nSDKw338or+JOuB3kZ
cJ6s9ruZRlZkwFxXd1DhNbIyA71v9DboZ0jXG1UG+Jf63RrmTq7JgMEEC93L
O8nqDDgEjPd9+5as0R7vJt/EnHHs+ifFDb2TX4slZH0pvDvbpU2+xq6HUtyv
aj8xqQddP/tJIdphaLfJi8yVQnIx7pTLAbKVFOfFDlU+rWSeFBs6SQaUOdD1
2k6KxoPjXL3XkiFF2+EoPfs6spMUT11mtiweTvcDfG3+w7Pbd8SSPaU4kVFX
0V1FFkhRlX/qy04jur8QSsFd6t4415vdb0jRrnvDpushcpIUgpa+q+98I0ul
cJu1OH3bbLqfydbuL8m65L+RnCdFWUD5Rws1uUCKwJKOkuoxdL+kkGJBuu9B
rxRysRSzTRuTblaRlVJsP763qmcfuv8qlWLZll1TRgaSVVLUGjbGGijJVVK8
cV9tdqSd3c9J0VI3J3DlMLrfq5Mi+pTO5pz5ZLUUYd6/YkJF5CYpolrtnfts
IWuksN5+I37TeXKbFL3F+/BcTebIUL73cUdzV7o/1dd6dqhOhTXZRIZd6d67
XBaS+8nwRVQ2ZEccmSuD9bTVDYqtZCsZhnS9Ndb7PLtflqF7S4739XqynQzX
jO6U1Xei+2vIoNiwdYdiGNlJhiVbNW76c8l8GfioH28aRvaUaa9vITnlOWSB
DGd08o7/OkIWavP9BJont8kird++3Ov4gZwkg9NZY7NZRvS8IJWhz5e2HbdH
k7NlcFAVZtcvYM8jMoyxNx0TH04ukCF1jcvz3Gz2fCJDWbXX2yEHyMUyRFpg
F+8qe16RYdahzkvOvCKXavuuPeJ79Cd7fpFh8rtphqZ96XmoSobcl6qS/4wn
18gwLG/KjgHO5DoZNnJPcM8Gk9UyuCmtN55IJzfJMNr/2AyDrWSNDHHu02Vl
x8ltMqiPNBZerCRz5HiTfait9wuyvhxco3W1pf+QTeRw8NqefUCXnv/6ySHb
UBvybAB7PpTjcO3My/yxZCs5nB3/bu46gz0vytHYpXbCNzeynRw9bTp/NA8i
Qw7H7+mREjHZSY5pkS6du2aS+XK4loo7XdhI9pTD/d9/y3YpyAI5Nro3pu87
RhbKcaLJvvBmGVkkh7CuS0KPSnKSHN9mz3aOukeWao+X3ynxdR05W47igTOd
IhrIeXIcrDI01WkmF8hhKgm13P+JrJBjkKvnE5ev5GI5CsLeJvz8QVbKof+h
t8ehX+RSOdp/vK9ezGHP73I0nIgb8r0TuUqOFNuSkvU616f/H2Nf8QI=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 601.}, {0, 0.443290658773044}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.78246453172337*^9, 3.7824645790429277`*^9}, 
   3.782464611565222*^9},
 CellLabel->"Out[34]=",
 CellID->2022877639]
}, Open  ]],

Cell["\<\
Here we find the lower and upper thresholds for the variance outliers:\
\>", "Text",
 CellChangeTimes->{{3.7824646151397142`*^9, 3.782464639765012*^9}, {
  3.782465025114202*^9, 3.7824650400885773`*^9}},
 CellID->1690863016],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"medianDistances", "=", 
   RowBox[{"variances", "-", 
    RowBox[{"Median", "[", "variances", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"lowerThreshold", ",", "upperThreshold"}], "}"}], "=", 
  RowBox[{"Quantile", "[", 
   RowBox[{"medianDistances", ",", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", "0.8"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.78246473984169*^9, 3.782464853129703*^9}},
 CellLabel->"In[41]:=",
 CellID->1047275153],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.13455957544187175`"}], ",", "0.11656781788043913`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.782464719154147*^9, 3.782464786679309*^9}, {
  3.782464847109441*^9, 3.7824648540197783`*^9}},
 CellLabel->"Out[42]=",
 CellID->1682536684]
}, Open  ]],

Cell["Here we find the outlier positions:", "Text",
 CellChangeTimes->{{3.782465043609888*^9, 3.782465054264*^9}},
 CellID->937555125],

Cell[BoxData[
 RowBox[{
  RowBox[{"varianceOutlierPositions", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Position", "[", 
     RowBox[{"medianDistances", ",", 
      RowBox[{
       RowBox[{"x_", "?", "NumberQ"}], "/;", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "<", "lowerThreshold"}], "||", 
         RowBox[{"upperThreshold", "<", "x"}]}], ")"}]}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.782464632482564*^9, 3.782464707638836*^9}, {
  3.782464793526536*^9, 3.78246479576828*^9}, {3.782464841059819*^9, 
  3.782464938092605*^9}},
 CellLabel->"In[47]:=",
 CellID->124337916],

Cell["Here we plot the data and the found outliers:", "Text",
 CellChangeTimes->{{3.782465061430038*^9, 3.7824650810736523`*^9}},
 CellID->1116479181],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"distData", ",", 
     RowBox[{
     "distData", "\[LeftDoubleBracket]", "varianceOutlierPositions", 
      "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "\"\<variance outliers\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.782464941835741*^9, 3.782464998383091*^9}},
 CellLabel->"In[50]:=",
 CellID->1532965732],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw92nk8VdsXAPCLeyk0K6WU5uk1KPVKtE5FpOGhgZ9KGfIaVXoNJFOFp4ko
QyUaROZZon3MszKGEDKP1zzz073rvPvHex+fm+3s9V1r7X3OPov1L2ueEWSx
WP+b+M/v//M/k2hjiXUq4ZGfoFUjZuH9FhF6a+biUrj4Gr6/vaIo+l2E/pFQ
M2jvS5Ok3lUnniSK0CqcKj/JzRUQpFJtJhE08bPGvVcvckqJh/vvjwj9UW/B
8cThNHK/5feAIvS1Sc8arP1TydWJ0d5eEaFvqYw1boqkycRgEyOK0FEdDxPi
/vgAqr+HUxGhH7TeyB++kEQ28z4idITlLZ2nZwvIIt6AIrSWtECU/oksEOVd
oAgdOHpIi92WA32/L69XmL4bvcGo8t0v4A1XLUy7bbKUdi+shpzs3x9hOjF5
jmbTwzL4PVuNGGHaxMA+7FZGIHn3e7pvhelLe3Ir/hcTDrzLeyJMX8z78F6h
oBRu/x7OTJi2j/ismRlWTIx4H2FaXlv1i7NBBmjyBhSmuSdYGU6jNcCbrqIw
7blrj0zSx2BYzZuwMJ1dMlLmaB1GeMNJCNOF9k7KWbezgO8hTL/eEjK+420e
enDoCsnd/o+u5qEHh56fxHlhVx9LeJeXyKElDWQPmm98S/geHNpAI0vOxu4t
enBowU5p1fP/1KIHh35128zr3eB39ODQLs0a7SLmCcD34NAbD9T1yu+JInwP
Di0Rte96WjLjwaEVZVWj6k+UAd+DQx+bIje2fDyP8D04tOH73I59b5LQg00f
fBIS1aEdR/gebHqq6z69c77f0INNO0yiw91rigjfg037LjtZOCeyAD3Y9CbF
dusxzxfowaYXz9XcpCCUiB5s+kX/45IrzrnowaYnX/OVjHctQA82baKiPfXQ
qizC92DTL9fMWNG4Oo3wPdi0/usCiwufS9GDTT/37CiRjslDDzYtI6fiX16U
TfgeQvTTeU3E9Hkh4XsI0RracqMjp1PRQ4jua6gUW6xehPUhRN9cJDZH3vkJ
8D2E6LG0XB25Fa7A9xCin6laLJAxTSW86V4Rone3KO75p+Qz1ocQPV95V3fg
EYIeQnTkw6WXPgW9Bb6HEK2roVS7clsS1ocQze52sXsRXIj1IUSfr89J2m1R
iB6C9CZb906f96XoIUh37zrRa8dxInwPQfqrWrDPJ9f36CFI500RF7O1SkIP
QVrtRpLMSZ169BCkqTH56UXXiwnfQ5DeXWt6v9OsED0E6WhjSVuJtb7oIUjv
Ter3qLAoh528CxSk5xu5Su1Oi8X6EKQ98i96zzD7CnwPQVpK6dL4rFWO6CFI
T6u6/veN1ASsDwGane4fJ+scjvUhQMuP5x/94VKAHgL0/ldeR3W4NNaHAL3a
bfn4LJEi9Jj4/XAnw8CpVeghQBcqbxe3vWqLHgK0h/2eWDf/EqwPAbrVcmGk
6l9l2K8E6INPl4XsnhqN9SFAd1x/fS7VKRvrQ4Cez3rz59fsXKwPAfrlj7J1
SWXF6MGivWndM82dX9GDRV+sU0lKNS1FDxa99O3qxjkCGejBov8Rf6p2/CjT
r1j0qkQn0dvvg9CDRR9M/BmxOcsW64NFp+xS+Hf9hgz0YNHja14+sO6IJnwP
Fm2X477AKaqE8D1YtNVpNY9A8Vz0YNHpOnOmlnS7ogeLfiC8T3bxtGj0mPj9
0G/eQ8dLMf7jpNjMaO2ntjyM9zgJ7g5dcq0mH+M7TqY7qN8I8s7D/B4n275k
0PKXszCfx4knCExVKQrGeI2Ty+0JpXq2adjPx4jXFls2qCVjPMaIa9+TvbSE
L85/jBycvLr/yh4a+PMdIz4JyhBsmYb9eIzY+BsOpdmmY72PEWtNvYJpxsnA
u7yWUeIpbOSywT0G82eUeM9LarBZFwK8dHEfJVfWlhtZuhHg989REqbxc8OJ
okysz1Hi0bvGxa/OCetxlJQdLKuPe1+G3iNEpu3zx7N+Geg7QiblfJi3LvYT
eo4QVRc7a88Bpp5GSNfPTYM3ur2wfkZIq1OBi0l0BPqMkJmTb7TmFyejxwjJ
Hyl+RBsT7E/DZIujidf4vvfoMUwSQ72XXulNR49hsmA41XxqQQXm9zCxN15Z
l59HMJ+HidssDzXZ6gDsJ8MkfihgoCmyFD2GiE6YWKTwhUD0GCJ6dp5Lvh0p
RY8h8lBP0mjNk1eYf0Nkd+vCqzFmNdiPh4i++JKux/uz0WOItLpbmwYkZRK+
xyCxun3h9m1RE+B7DJLDyzbZil2g0WOQ6N8vuWgRF4geg6RGR/rz26NvsD4H
ycu20TN9y1KxHgdJ5PQfGmdMacL3GCD/7lD+ShskoscAWfb3dtMlGzOA7zFA
QFc+ybYoAz0GyH4Fye1rN1eixwBx3HO1zvt7HXoMkJb3qqoL7jIeA4RaAyEV
09OxPvrJ7T1KR0s+l+L60E9W6WlVr7jxAz36ydfzz1i6K5PQo5/Y7dcUjbSL
x/roJ480XqwdLChAj34S0Jr7yC8sFvtHH9m7/oNyYGgIevSR6ZNi7Bpv3yN8
jz5yKffQaxfJH1gffcQpfLHE1tAirI8+4tEgIJqr8x3rvY88Fm/JOe/wDeuj
l6yS/hyurVeFHr0k9mnM42CNUPToJSFHNP7qmeWH/bOXaD91EV9u8BTro5ek
/TNv1ckdsejRS3zkj13dtYnZL/SQOJNdoclzYtCjh2T7df9gH/+I9dFDTsjJ
nxIuTcX+1kPCRGS1XhyIx37WQxYWrl4luCgC1/cess03XHr5kTT06CFv/vAx
rfBKQ49ucsB3p5EWpwo9ukmf/3ldXa8Y9Ogm2TWjdg6LafToJqmLPdesW/gL
PbrJx2WqKnXHo7BfdZN66VMfdt+KwfroIiU15nOmVPqjRxdhXV274eqXCPTo
Iu1isp9UpJh+1UWaJGYJLY/PRI8uUpr5z15xh2r06CI67c7G+RcK0KOT/LQx
+ri9LB89OomUyw5DB04xenSS5/fvRF47Ew18j05S/pNjPJtTg/XRSdo/TNY8
VJ+CHp3EeMuzOz4pzH6aSywPx9kdOFqL+zUu6fK4M5kl9R3rg0tYG90uff2X
2R9zSfVInqv1uxSsDy7x3timVno3C+uDS27qv3pplvAdPbjEYWDUSpNUQQAv
/h0kuLOv10i6GuPdQVr0PBY+CaiCSbz4dpCBnKEDQd+Z/Xs76ZEoO7T0aTWc
5cWvnbg2jByIEyvAeLWTExtk7D++qIdkXnzayKOL9YoLTpZgPNrIu4PpmhlT
f4EMb/5thCoUOp0Z1Am86Wa3kkSzYuLo0AzmvAFbyRhnv5qsWzHwwrOqldSw
k9qSx5qghJdPLcRi2pj08Hgx3OMDkfTnPuc30YUgx8uXFhIkd2V17Z0yqOLl
RzOZvPpk+nB5JTjyAJuJyQ0bpU1nikCB599MwkIjd5Tl1+B+p4n47Fyr72Fe
B2483yYi/+P6pfxnlejZRDL1zEuX25ZAD+8CG0nmA+3rhk8r0auRBFavmXf4
XjWo8wLYSD5sX3Nwl0g1ejSSLWslJG49bESPBtLnc3TL59dt6NFAJK8EjV6S
b0CPBhKTI9tyo7McPerJ4ZPNWZKLG8CQ51FPppULbM8Tq0ePerJt0liF05xG
9Kgj6gW6cpOnV6FHHfkWk2alWlGCHnWkMdHtcOuJX+hRS6SPVWisi2tCj1py
qeE7LKyoQY9akrPSLWSbUyt6/CKzgy4UmtjVoscv0iDjeM90Sxt6/CK2jfJ1
rzyr0aOGHL0anXJ4ej161JCzu+Us/1xehx41RO5YYAA7sR49qonXMT24ZluL
HtXkRMiWR9EtvehRTc4NT319V6URPaqIbdfxg8oKFehRRYZjtc5VqTWjRxXR
Teybt06b8agi60ROnDnrWAbavPj/JIemSQjL9dRjvCvJkeeJOuNuNTCdF99K
wvlHSiFCmYvxrCDfdgzKtDzuhHRe/MqJw8ulrJQjHRivcrJtcXCd1ysu2PPi
84O0B9C6UYWdGI8yIrVlzRt96zqgePMvI28VVHqO/cXF+ZaSrqnRDkOsLhjg
DVhCun4pmogs6cL5lJBox43rny5ohBBePn0nxlNCqu0PtmD+fCdy3CDnIvMq
rN9iYiLQptgzES+alx9F5OOK/Q1TJLiYD0UkVaLPVK+gDW7x/AuJ1YqXSs6K
tehdQAJCjv4pJ9EMG3m+E/eRsx5JHnLgomc+Se1aN+Pp9npo5PnlkYGun0d6
pdrRK4+MvihLP7KgBbx4AfxGCrdmlngncdHjG3mkKOnW3d0JIbz45xJKxzX3
ixgT7xwy+pZyXstpBxlefLPJnMXKizbZdWM8M4lKpeUUkaNN4MiLXwZRfSdd
ZyfKxXilk7n5g+Jjb7gwnRefNKK21NKhP7ET45FCDgV6jZss44IVb/7JpHFv
33obi3qcbxIxroFF16s6gcubXwKpKDc4JRDVifOhyTlj5yvrD3KB5l3/F1J+
UzVplUIzXm8ceVD//JbpmVbw4l3fJ3I9rW1limcnsHjXE02Gf3zRN97SiX8/
gmQt1q+5aNgOVby/F0rWhG8P3ZLdieMHkcMm8tsHLTrAijeeH5HU1lJyjWN+
/x1Z+e/OufOje8GK9+89SUSJgYtzWRd+70LebzS1OvSzG1i8n++RRzVi3i5F
rcz9B6vKbkRrX0UPsGbzvoc0qeVmP8damN+H5CiP2ctCJ66ft8B5Av1pfecO
a2b8d6C6cahevqULaP71gaYuUVJe2s1cP/zpoe6fMjLx93kLWigE6Vy8aqze
xMwfxnU9lQ88+S8+0HdhbVXg3DYmflCfqhxaY8Zl4gtlahZbbzsy438BaZC9
UirXxfjA9+/zBCZPxBP9oOiFUHLlzQ7GFwRzpRZeUOhm/EHXROffrGNdTH7A
SsmZAp1F7Uz+QFRji/zilUx/SQc/SzfrL5eZ68uAo+mHfFvkuEx+QlfUnjxR
Vh1s5Ocv+AorZFRu7mDyG36l2QQ/iKzF68+F4+//FvOdz3h8A52YXxq5T1rB
l18/INJxQDZboYOpL1B9Kv7KPL8Z55cHJkZn/2TpNTD1CYpnO/TbxuphG79+
YfCPwoG+B1ymviH3xf2Fc/OZ/C8EOntdqE1JF9Mf4PWtocANz9uZ/gHGsvkt
Vg+amP4COttUVyYt4jL9B+Iv7FFMEG5n+hO4vJZ4wT7A1GMJZGtodijXcZn+
BloB7mO2mY1M/4OX8iNzB0VamP4IMyvTZRuXMPEsgwzvGOnag//1V9BoemH4
9Usr039hz/rnan32LfCN359Bjq51v3SmmenfcKvDSUVstBnm8vs7yAcNPFt2
qYnp/3AlvqZVyb8DTvPXB7gvGF+025PxqIJrHdv/7nvVDEf46wu4Ti1dxZVo
YtYfuLWhwG9EtxLnVwVldsu1ztvUM+sXPDlj+eLuuQZ4yV/fwHSOg5f1r1/M
+gftKp4KTfHM+lADeSdvXJl8s5FZP8HATHTf35ebmfUVrHLMfiyo/W/9hQ2f
T7/NOf7f+gwSSVsffY1uZNZviC1Yqju/vJlZ36FdJ3POXbkGZv0Hrv1+C3f1
FmZ/ACODs63gTS2zf4B+yYo/rf2rmf0FKDiek8op/8XsP6BI31rI4L/9dT0M
zbzPWq3bgPlSD2l6c/y91vxi9jcQv+PN0fIPVSDO3/+A//oGtTjdemZ/BBbf
OHcTlYswnxpAMet/W0vo//ZX4LqgbNPR43Xo0QjnbdcbrfIpYfZncGNhSz+R
rUGPRvC6veHu4wkn3N+BQXJYW2xANXo0gV/ju/iXQj+Z/SF89hEoOqtVjR7N
4PY/a4XwhzXM/hLkT7sVcyyY/U4zDD7Vi/xpXc3sT2FbQKZn06kKZv8KWrHX
1KfuLGf2t3BGdk5B/r4qZv8LQvaGUqLyP5n9MXTZXi4dyqli9s/Acpf94Hix
jtlfT/T5zebX71Yy+2+wV0+sUen8yezPwabw4WyvNOb+sx3+erav78n1LGZ/
D86Ku+4rexUx+3+wdN9978racvTogHVV9hEr9hYz9w/wysbMPE29Aj06oGa+
/zV7m3Lm/gPyrNec2z5cgPPhQuS6XEXRt6Xow4V57jc/HmgvxPlxQfXHrJ6F
42XM/Q8YBFuF2DoU4Xy5MPNHrJ3HiiL040LqpGkW793LcP6dsMUhv1VtSyZz
/wW5JxMcMu7lMvdnIHwFqiQCU7C/dML5hYYNgVczMD6dYCS6dbN2aBp6d4Jh
jHeNSVkac38I7BPLVYo2FuJ+tQtEO/Pr99QUYfy6oLRzwZZh1W+YD12Q9VlE
xSIwF+M58e8nZSqLvPqG+dEF2hUG1/stijG+3eC0+UgKLMnHfOmG2u1vFLaY
ZjH3x2BYGBTwISgL86cbTrxrnLvT7jvGvxueSa8d67tSiPnUDf5xpoekUrKZ
+3NodNJKcJNJRY8eqA3LlzEuj0SPHlDpPOIaOTMDPXrA4vA8lx75HPTogVWT
/aZE5qejRw+kHhvpmfElFT16QDvi3v7Xbd/Qoxc0W2PU7V8FoUcvPAx78D2v
MQk9esHZUmxbeAjBepv4voEW9bwRgR69MKB5vikpJwM9ekFHbd5Vky+JzPMT
OA1t9h2KKejRB/Kauw0brsShRx98XrTz4syVSejRBw660vndwuno0Tfhk/k2
1iIBPfrA90FmoM/DdPToh5XP7mYsUPqCHv3gVnDq3NMVzHlOPxw68cCoKyYR
PfohrHxB0SLHBPSY+Fnrca6tYzR69MOrokcHphbHMs+voF/r3uOrw7HoMQCD
nnezClpj0WMAlDZdrzk/NQI9BuDQVeFbwoJxzPMzmC147OFgezh6DMD6QyIP
2ZCAHgNQwLH4MdwdgR6DILpu3q40eV/m+R04L32uYLw5DD0G4fTlkjVqGl/Q
YxDUp53ocO5LQo9BMD6R7PR0RjR6DIL3ikHb/NAg9BgCn3NKNjtSQ9FjCMxl
ttxdxnqFHkOg9NH1f8WK/ugxBPH18V/U3ELQYwgMhze/Yf+IRI8hmP7q9evb
BjaE7zEMFtuv/ZK7F4Yew2Dg3y+14ZMXPu8ehouTOuLOTsyf7zEMm4Ztax6M
haDHMJTfObij4eRD9BgG8QD5Xk+ZJ8zzXUie8TIu+UE8eoxAtqHLBq7oPfQY
gcMx0e+z57iixwgc0rxU+rMqEj1GwIR9858NppHoMfH7w/qzw7aGoscIGBhs
3fPtkg96jMKKgkWWMZEJ6DEKutWOi5/PtEaPUXCb4iGgrxKGHqNwKvDRaiMf
L8L3GIXpzR4dw4aP8fxsFKo3P/FsUAhinr/D5YGI9o6oVPQYA3+pGRoL/H3R
YwweV23fo2b0CT3GoHH6Ta+EZ97M83+YNBg4Zbn/B/QYg+IXueItnj7oMQ7a
2y3zL7cmo8c4VHVvuL4sQRXrYxzGbeYWPz71AT3GYdO3tcN7dT+ixzh4DBRu
H3j1CT3G4cHSq1ZP6gOZ+w/q7R2l40XhzHkuizKT6U5eZ0/DGv75CeXRdjnl
uu8HPO9iUYNm1n+Nn3Nkzl+oLLtF7CV+Mcz5DDXo6maSfdSF8P1Y1Dzz11my
Gg8If/4synpl0F9Rf3qhJ4sqexY+Gi99F/OTRV2suVH+h78X5PLPj6horX2c
P6xzoYZ/vkTFTmEnHtoZjs+/WZRCYktn9HM75nyK+mOSldrmmzQs5J9fUWma
Da3R8+5j/AQoq/OJbvVv3JjzL0pocv8baigO81uA0jx5mNVO3mB+CFCePh5T
lC8Ggy3/fI26yf5X/K5hKnP+Rsmrs4KPVT3C568ClMTfl6sFLtjj80wBSuqY
onu47zuM/8T3QZpSMV7M+woC1PLj+4uDjCMJng9SBb1l5uu74tBDkPr1bbrH
S6dUwvcQpELvrDowcjWKOX+kYK/5wcuCYeghSD3Un62fvScBn8cKUoe9h8VD
VF5jPQlS+v55wbmR2ZiPgpTpuRcjNkdo9BCkbl67zJlV+d/5KaXynnrzPjoO
PQSppXOV5hsuTEYPQUo8MBN+hscz57PUDtHspzYHopjzW2pLhfLJ4Pwv6CFE
3dXyWqy3JBs9hKi6d5KC1S4JzPkw5XjeRGqaQSbmtxC1UmknixXlgx5C1NXj
180HpdLQQ4jKSt1cG5CZwpxPU7MvBJS6aPvheZEQJXVaXU/9YhR6CFFz5QZc
hld9QA8hyrPFe+MyryT0EKI68iqyxX28mPNz6nlbfnxRaSZzvk6tW6L6Ns/i
NtYHmypdfXtTlqgferAp1eEcM9WgYPRgUwuk2DUCzh+Z833KJKYuwNQ5Bj3Y
1KojIgrD3jnowabm7FO6P88jhXl/gJq+fabG20Kmf7MprtreFwV699CDTbGS
X7Zmy6QSvgebum2r5/Djr1Dm/QVKTLIjpG+rC3pwqDht7SdGhv6E78GhNvfG
e+n6uKAHh0o3T5T4kpHBvD9Bcc3fDXuSIOb9CkpdTX2hv7g3no9wKM3W3jv7
p/gRvgeHcs+8MNtvXhh6cKiMhvzdQZpeWB8c6s9LRRefaPqhB4f6w2aWQeXO
YPTgUN9z9TyOGedgv+VQwizTD6EzIpj3S6gQ54bkKNkU5v0TSnJvqf5j2Q9Y
H8KU77UjOgUlQXgeLEz9MtO6lDvFg3m/hZLWWB9lJRnNvP8ykZ8Vczmhn7Ff
CVN7Mx6HqTnlYr8SpoQ2u4alzGDeH5j4frPU6UgXP+b9Gyoje5ZZy2IfwvcQ
pmQt1S+af83E+hCmxMSiHzv/CGHe76Gm10XvSj31GfuVCGUxObvh7yME60OE
2pYS0B4V4Uj4HiLUBrmTMjZHM5j3iyi77tHrbUbBzPtH1JFLfvc75lqghwjl
pV/hsXPDHfQQoercO+zylAh6iFCac8RWVzo/Z95/ovwsi5yDvbLwvFiEMq/M
qnVMykUPEWrRWanaY3XhzPtVVNnaIk0Ha1vsV5Oojs0qx49X5cP/AX94/w0=

         "]]}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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
bjj8ByEKjjo=
         "]]}}, {{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3., 3.}, {-0.6392108353170729, 1.3700480953221108`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "\"variance outliers\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.782464976978434*^9, 3.7824649990492353`*^9}},
 CellLabel->"Out[50]=",
 CellID->631082734]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fit and anomalies for financial time series", "Subsubsection",
 CellChangeTimes->{{3.780126333812057*^9, 3.780126334509893*^9}, {
  3.7801273961175203`*^9, 3.7801274041835203`*^9}, {3.780128129539324*^9, 
  3.780128139654792*^9}, {3.780337000967484*^9, 3.780337001341024*^9}},
 CellLabel->"In[6]:=",
 CellID->240605516],

Cell["Here is a financial time series:", "Text",
 CellChangeTimes->{{3.7801274248271217`*^9, 3.780127433557856*^9}},
 CellID->1318421321],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finData", "=", 
  RowBox[{"FinancialData", "[", 
   RowBox[{"\"\<GE\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2016", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "10", ",", "15"}], "}"}], ",", "\"\<Day\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.780126372841868*^9, 3.780126407839984*^9}, 
   3.7801303725160313`*^9},
 CellLabel->"In[1]:=",
 CellID->2081815143],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"04 Jan 2016\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"15 Oct 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["952", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"04 Jan 2016\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"15 Oct 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["952", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
              
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{
     StructuredArray[QuantityArray, {952}, 
      StructuredArray`StructuredData[QuantityArray, CompressedData["
1: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
       "], 
       HoldForm["USDollars"], {{1}}]]}, {
     TemporalData`UniformTimeSpecification[CompressedData["
1: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
wPh/X5S5zw==
      "]]}, 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     TemporalRegularity -> True}}, True, 11.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.780126414011757*^9, {3.7801268398989143`*^9, 3.7801268531123533`*^9}, 
   3.78013056183153*^9, 3.780130693245742*^9, 3.780138380855134*^9, 
   3.780330660873315*^9, 3.7803341267374783`*^9, 3.780336775917788*^9, 
   3.7824641824240932`*^9},
 CellLabel->"Out[1]=",
 CellID->331628042]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finData", "//", "Head"}]], "Input",
 CellChangeTimes->{{3.780330760799551*^9, 3.780330763678617*^9}, {
  3.780330808063354*^9, 3.7803308089945*^9}},
 CellLabel->"In[2]:=",
 CellID->1201518347],

Cell[BoxData["TemporalData"], "Output",
 CellChangeTimes->{3.780330764294065*^9, 3.780330809463578*^9, 
  3.780334127034278*^9, 3.780336776062158*^9, 3.7824641825730743`*^9},
 CellLabel->"Out[2]=",
 CellID->952437929]
}, Open  ]],

Cell["Do a quantile regression fit and plot it:", "Text",
 CellChangeTimes->{{3.780127412047906*^9, 3.780127421530528*^9}, {
   3.780128357135824*^9, 3.7801283611073437`*^9}, 3.78033685597151*^9},
 CellID->1360825045],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFunc", "=", 
   RowBox[{"First", "@", 
    RowBox[{"QuantileRegression", "[", 
     RowBox[{"finData", ",", "50", ",", "0.5"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"finData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"qFunc", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"finData", "[", "\"\<Times\>\"", "]"}]}]}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "4"]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "\"\<fit\>\""}], "}"}]}]}], "]"}]}], "Input",\

 CellChangeTimes->{{3.780126425649865*^9, 3.780126445911306*^9}, {
   3.780126483006109*^9, 3.780126492544467*^9}, {3.780126555423974*^9, 
   3.780126557266053*^9}, {3.780126648566571*^9, 3.7801266556506443`*^9}, {
   3.780128354778406*^9, 3.7801283667325153`*^9}, {3.7801303725220346`*^9, 
   3.780130372525136*^9}, 3.780330502761024*^9},
 CellLabel->"In[3]:=",
 CellID->257040343],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
sH7XwfP0nU96FGH9xOBJkxdxj2A9RL3gJV87XiQKMa+2iKZG1e42yrmBee3A
FQeiRwsTsV5/wLP/3rjy3BvXW7MY8nUNXU3YiHmtwaI847BRqzDvQbCh6S3L
MUZYry5w5PO0x/6dbFIv9RLohx7ljuIaYu5qcMSKgHHsMmL+PrDTw1tfP90i
FiWCy3ckGv/HJ7ZXKYXnUS+lTAMOMc8CPCVB37VQm1joB1ZxiBVy5Igll8Br
OO6tSV/mkPxPwCGGbaPGpxELlpf9+3tw2vDcEcTiXf+85tb9t5WzSf6L4LoY
Nd0dycTsEnBkxYeePH9ibgvYgHOjirGCWLrzCdwX7/zukj6bRep5HryzzXet
ZxqxfRFYtlOL7okg5v0Ex8mVGTfvIBZOLKcpXhwjwN6W2O8ROOi2sb77SGJB
E1h3DINT1zuT5GU+hf5cs9s6sp2YsQRc9SLbZmIzMf8hODzSamRXDbGoAaxX
eLey6TOxdNwzmvKY8ClW8ImYZQw2qftp+qOa2H4r+F7MpE/haInk3+tr/z3P
ETPln8P6Kbvzs98Tc4zAZ+PKXh5/R+znBt7Ncm7fLCYWxICnaaxh0C+J2aNf
wPlyXDfx6T1i7jzwsbFbV4+5ifm3gO/VNHz+cQnzR/1zbuGLWccxvxA8ZWr3
iaaDxLw5L2lKffWrqRvYxMKN4FUFUfr+Spg//J+NM7au7jEk+TPBHjWiaZo1
xJxq8OfSVTeWFhKL17+CeaP/OClvKzEjDBxhvKTq4Api9m1wpnJxTKkuMfc9
uLSxclKdHDEr9DXcR/gNFpkpBqSe6WC567sZpaeJeZXgSY5J/IUhxMJ+8Gdh
t7WVL7FE9w1NXfvad3y5G7FfGjhiC3Vd2ZpY8BZcK9E0X2hDLO4BHy1eKR/u
SMzQfgv98+/zlC3EbFtw9faOYqk3segVWE4uvqgrnVjaDb5x91vSjDJiloaY
pvpu3ChqqcP8VmBJtKNv1zDy+/EOgI16NrS1a2E9O8FbZGV2hMVhPdUq4PlD
ocWQ/ZDYbxXY9cOuJSskxIK94LVDPbW7RmE/XwHnGcpuc5mN/TC9kqYWaB5T
yknCflgJHsgbHLpcjP2wBxwexjZ7XI/9kAC+oRY7rXwY7r8ysNn8U7Xb1XB/
mb+D/Xip8HjBVmKJL/jgz3ufk/YSM+PBuyo2ME6FEnOKwQZdh//4ReF+pMFK
e2TH844TM3ZW0VSC8bthf8KI2efAre6fgnsCibmF4BcnOWFrdhHzf4A56ddc
tN2IRRPewzxNSXAuxv1ufwZ8TH/og/8EnA8FYMVea82tfdjPjeBEp7l/jBuw
nxU/wPliaJHEfoH70QSstFOHGy7EetaD980+o05b4nwY9xGeFw97p+/B+rIX
gYPe3hjKwP3BdQf7T2ra9d8AWR9pLXhMc4qyF+4H1phqWD/7xrzbGcT2C8C6
LTG+g1ewH1zB04/JsLbEEgujwfHstRrp4dgPoz7RlJeL0ZdhPtgPc8ELp5V3
N3liP2wG61QmORjgfhNHglunyalkueH+E4JXH7eNcnYl5s/+DPszQWMHk0ss
cgbXHLo7fyZ+v/QouMmff6ZmG+a/A65kymQP98L8H8FurQ4lxzCPxOkL/LyP
6yMmBGA/88B6MUPL6oIx/y3wJc/ur8GhmL8KPCQTeaYkDPMPghX+dB67HIHz
4XAN3I/u+TbuisH5cAPcoZH/2Qct6gO7XDy0MjYK8+r8R1OTvfUVirFevFTw
oXUGLvMPYj3fgJeopLEn+GHev2B3Nf9zc7wxr9ZXqGfHfOqsO+a1AffNO9u2
YiPW8yX46PZ3JodMsZ7d4JQVKro5czEvqxbqeWxppsv/59kacOOTmhOR07De
+8GnEq4GzFXAenaAy8KNyi814XxQldAUK3GQlVqN880SHLdiho7zC5xv/mCX
CU4nCgtwvl0GlybNGlubgfNtWh3kz5zj2RyK820F2FmHOs/Zg/NtN7gtSX9n
IM5DRgI4NiNd/bIdzrdScL39ra7sZTjfqHqaeiXpfijPxPnmA77ea3LGjoHz
7QL4ZF7is/tSfZJfBJ6jKi+wrCPmNYONDfdsUKgkZno3wH3S67Jpfxox5yy4
cOGEjt/xxH6PwZUF059bHycWfAc79aYMTjhMLB7/De73nRfe2foRc/ngnh16
p1k2xPx8cOquQbdYc2LRN3CJ6RfmNWNiqUIjzL+PtyTuc4hZi8Ey5hsVq3WJ
hbngQ/ver/1vPLGkDnypZFNw1FjMP7YJ9u9q9myZ0Zh/Ifiv55Qky+GYnwu+
cLDir80wYrbcdziPrkxYxOnXI3nng1d1L2uMQvNdwOLAZxc2DhCLjoGvHd0V
nDVIbD/yB01lBJ3X8R2B9WSDD9mapB3Eny/cBD4cVsKplse8EeB6vzbdaEXM
mwX+GHw06vBErOesn/B83jjL4ToL67kB3D/qu/dGHWLGUfDR6a8bdQwwfwY4
KzS5Qwbrxf0AfhCrU/J9PtZzXTOch1JjY1+sN+sIOKjhjpm8JfbDTbDz5ISt
rlaY/x3YSzs+jmOH+QfAl9NXPD7piPUMoeH5ZVT0nuANWM/r4N/+4z/2rcf8
YvDcjRvrZzlh/l6wnXP/EdoB8+u00JT5mPgkxf/3Qwr4sutaRz/MK3oN9v7Z
XF6A6y39A66YFeN5bwrm1/xFU8/LX6gYjcT81uDldtZflH+T9ZC8ANud3X0u
JZWY2QV2/z6uRBBBzFFvpanHc/uvWroT+61u/ff3yw8q+0yIBfvA2krGMwYV
idm/wX+P9G/bFzSD1FelDeZfgiTEdxkx3wIsY+vz6t0wYpEfmPuccusQ6ZL8
l8CPjOQopcPEvKlSmlr3InDBrms6pL7LwWapAeUhTsSSXeCO5cl1jFHEzItg
2apLZ5bnapP8JeDBULn609uJxZx2OL9eHhsT469F6usDtj5h5vBFnZh9Hmyx
JHVv+htNkr8IfGKEa7BJKDH/Jzh90vj9X2YTs7x+01RO9IGw/tUapL5x4Ip1
YbmPhxHzHoHjTURTGY9YJH8T+Ny2j3fHBRFLmB1QzwGfM+zFxH6xHf8+vzx1
qERVndT3IfiHybS4TQVqJH8DeM0jzaD1XGK2cSdNjX9+bWdxkSqp5wPwGNUf
0W+GEUsl4OnRnIcb36qQvPJd8DyjfmruyBRieyPwjJfWX9NCiHlu4CUHBm+P
2ULM/Ao2P3pvivx0Ys7obng+X6Z1PVeRWLAFfHz5k1+ho4jFUeDNLt1Hlo4h
5o74A/utq3/EI0Ni/hxw/NVXC/PMiEUbwZoLwpLsnYil4WDXKwn6G/Zg3kzw
huJzZYkniYUz/8L6/zk3xrCbWLIe/C1YhpunRn5fZhjYvXRf+v3VxJzb4JNR
3dyBg8R+78FLgi+O3HmdmLGuh6aK40q8JnNIPbnp4DzpAU5cJjG/Ejzt9+8H
z74Ti/rBX1XaIlU1yfrYH+qFeZi148emD8TCt+CmxPiW+3q4vj3gR9opodmW
xEztPpq6a5r0O287seAaOCbQX35zKbH4FXju1j2BH+qIGX/AcVpD8I+YrdFP
Uxfjb0jKVEl/ca3AMxPanCcsIZY+B49eFeZ7JpaY1Qk+yueePH0L+1NtAO4v
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
         "]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.6608544*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        (Charting`convertGridLines[
         ((Transpose[{#, 
           Table[
            Directive[
             GrayLevel[0.4, 0.5], 
             AbsoluteThickness[1], 
             AbsoluteDashing[{1, 2}]], {
             Length[#]}]}]& )[
          Part[
           Select[
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}][
             SlotSequence[1]], And[
             FreeQ[#, 
              Alternatives["", 
               Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
           1]]& )[
          SlotSequence[1]], {{3.6583704000000005`*^9, 
         3.7825704000000005`*^9}}, Automatic]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6608544*^9, 3.7800864*^9}, {0, 32.93000030517578}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "\"fit\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.780127294263694*^9, 3.780127324949198*^9}, 
   3.780127360113598*^9, 3.780128370335313*^9, 3.780130563477234*^9, 
   3.7801306962443037`*^9, 3.780138382108287*^9, 3.780330662354171*^9, 
   3.780334128432701*^9, 3.7803367773014402`*^9, 3.782464184466745*^9},
 CellLabel->"Out[4]=",
 CellID->11237927]
}, Open  ]],

Cell["Here are the errors of the found fit:", "Text",
 CellChangeTimes->{{3.780128329481084*^9, 3.780128346133111*^9}, {
  3.780337011598827*^9, 3.780337015310278*^9}},
 CellID->1204486972],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"qFunc", "[", 
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "]"}], "-", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          ")"}], "/", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       "}"}], "&"}], ",", 
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{"finData", "[", "\"\<Path\>\"", "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "4"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780126339636664*^9, 3.780126364123542*^9}, {
   3.7801264968561907`*^9, 3.780126544576048*^9}, {3.7801266640462103`*^9, 
   3.780126697109646*^9}, {3.780126999263867*^9, 3.780127061170319*^9}, {
   3.7801272148103952`*^9, 3.780127223659688*^9}, 3.7801273344711103`*^9, 
   3.780130372529397*^9},
 CellLabel->"In[5]:=",
 CellID->1888678157],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt3fVXFG3cBvAVCxu7dUVFBWMtDAwGE0RdxUBERAzERAUMDBAJxVgLCWPF
Qsq1C3VF7HjWLtS1Y1HXLtD3u9e857zf+294eX55zucQXszcc889M3udaeA3
ffB4K4VC0bSMQmH5P/2nieptkkIkmw6K7JgTZL2OvKx257FNHkSdIpsfkJ2K
JR/KrTrLYmXxPibp69pxRU5+3NydrG5F/rbjU0L389stNmaQU4otPeX2e6XF
NvfIFUMqnP94YqHFzlZ9TZKtXeZWzx6rLQ5sTm55Tbvh6ziN5fdrh5EbuPzZ
Pv/gMkse339kn62K6xNiIyxf1zRzNUmuiV3uJe+aZ/l5vQf5U7+uH878W4m8
C8g1DllfajF8isVh+eSvmcnBo9dMt3y/zs7NJN0M8Vn8slmw5etGNdnVJ2GI
qlgo8oaSP2Wvjl56vVdXS94d5K3vm/XZPGCz5fsNDfuZpBsHq8bYZ0VarBhA
3n7XXzfnwkzLz6vmkGu+aParSEXk9U0m/3i5xOdp5UTkv0Iuu2qVz9f/xmJ7
9nM3SYPNg3fYL1qB7RlMnnit0tCrxWMsDttCPuuT87qJ41Lkv0gOHpH+5mLZ
XdjeX8iZGZtGtTBoLNZu7G+S+r5e2MzFYYDFhnPk/fuc7DpvXo68n8j1v61+
XCVlqsWq2gNMUsd2ScVKD8jvZtmeCeTz06O0hx6FYXueIVt77Cr3cKLOsj+U
H8g2r3+q3NtGIW+NgSYp/bXDsYfvJyOvC3lqvi6uu38Xy8/bnCbPrXSm+qpR
GA/OJnKZbokx2zfi9wdWVZuk38U9fG7Wk/d/d/LXhpVcqkjYn4YA8qLVmXmd
jq3D9nxDfpo3qH32pEXYnpUGmaRDFRUF9UuMxXjoQh4VfdDN+UCQxeYJ5Ebr
J09zuYm8ytXk6QW207RDGmN7Vhhskk46thkys3EEtmcn8vrpxYIG/sT324wj
bz02f1WrEIxX55XkojlPTdEN5yP/EXJ+TIXc/gewPRUdPExSeNbWI+6Z07B9
x5DPXks6//WwB/LHkkMPl/fPPFge+Q+SE94e++/Fy6WW8ab2GWKSxvuUmDxv
HbZPWAw5xrTZJbbHAot1+8g3JZvR0QWrMX5zyWn9EudO9sL2syk51CQd7TBx
0NFobC9tJDlt/Y2vidNHYzzsIV+t6DhuQ8klFisekGuZDLVLHcJ4UxUbZpJ+
Vk+asr3seot9W5K3WG2dHWuP/WdOJ7ecWkyT3X8VtuddskNzu/y91+XxUGQ4
5ftUIqtty1kYDw7kjyN6VK92AftHN5Q8o3+vgLYTBmF73iLXahLqcv7tJGzP
v+S/lXOv+bVaiPxNPU3ShMePvt3bEo7xMJisNVzK+mA/E9t7Afl2lY/T3NKH
WX6f5g+57uB3X19PXmPZnvrGI0zSLZvq2Vo1ft48kPz8wom1jYthflPOI0/9
nlLi4jlYvZ1snL7h25DuGF9GWy+TVGzC25PbJsrbtz/ZOXNyVNNBiy12nk2u
o1k/fdHTMMxnW8mdtszWD89ehuPxMvl4aPezES8CsX3dRpqkEt8qfH+Ythjb
N4gcMCfg+/WLMRgPm8krr52yUgQjr/4CObhIhxftvmH8mD+TveNOxeWexO8P
m+FN81Xm9ZUpr2Mtx6cuiTxLWXGcy69FGM9nyWM+7OxR4XEkxrOZ3DKmTI5N
37XY/rVGmaSBfnVfftoXjfERT+7Sfe39SotiMT7OkO3WN/KyPuOB/O/J563W
b34/LhTjubqPSdpor/Fa6TAD+SXyQudXqSW2YLyq35FHTWhY/bw7tldYldEm
qV2TTxevJeH7dd3I6okZL5TSCGzvieT9425VLRYwEdvzNdm2dtU9jqPnW/an
tqKvSXKbPlNzR+WMvE7ks8VG29Z+Oh3jYQL5/vSE/+JXtMHxpyG3DbpR2uMc
toe+/BiTlFr2bKWTH/H3mzuSv1+b/bTjgt4Yz2PJc6z39TmTMA75V5AHPG5n
MgZivg47TJ5432Ppm6au2J6OfiZp0vc/zYOnuWM8+JKTrF/YHtDg+wOXkf9O
LNn43VccD9oD5DXfasSFps7FeH5Mfue34czGvjswHkaNpfnxjrWb3wsdxnM0
ef7LTV4f1mK+1+8lP868PW/IsyTkf0guqz5Qe96twRjPJcaZpGEl/96wSuuK
/Z9JHqLTSY6fwpH3Pnlw27Z3vI7Jx1/R8TTf3StSdK4u3LJ9A1uQ//Ufe/la
qHx+SydnjTLPjamO40F1hywd3jhkig3Gp69iAp0POxw9ck0+njT25OHeCS+m
v1yD8TuEfMDDMfi1I85/6pvk2Of7diibJ2F7FpBrzZyTPbHWRoyHJv7089aq
qmut4jEeBpGrZZ3OVJ3D77OZT85xG1Alv4Q/5off5D7/lE33LML+NTSaSH+P
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
9occZ+4yeUFFXI8ZG+81Sb0GT7Sb5CXfH1aTH1/v5XfuhHy8XSMfrvNn779g
/L2Gn+Rcxa2CGkoc74qG++h8cSO006D2uD5V9SfbPV8bZ++TivyzyZ2U5ft3
lPZifHwj/9kVLfXqIc8Xyv00v50otajeI/n+uxt5a6s3ZX7bb7aMt7Agcpu4
KZMjE72QfzPZ4eXsEpMysH+d6x6gr0ePGKnYIY+PPuT0oFkPdgdj/tPOIB8u
XqPiwIOwIYlcY8TNTbteYP5UnCP/bG88Y0jA9bem50H6+4Ovp3nErMD2nUbW
9Rjkr7HF32+OJyd/TXra5yP2j/IMuVRet9dJm+T7m+/Jmu3j3jcMSMf4mHyI
5sOx3arcanMc96viyG+m/a33onwG8uvJLUZtbmi2w/2kwHfk+zeMLXupE5G/
ymE6Pqed6WWctAHz3Vry392xcyeExGF8nyAXs6pWZf83fL/mNXlRp+sr6hmx
vjQ7HaH1Yevez/sG4noi7Bh5wZBNNi/u4Ppf94I8ZGR8cJvd2H/G8kfp/FD1
3vaZR7QYz53IY1sf+m77CfvLeazFc7oNjaiC+3OGp2TdFudV413l9U/ZY3T9
8P383vLnB2E8OJLj5j1+M1+F86GvL3n19kXrvif1Qt5lZPtBXd5lX3HE/Fbq
OJ0vlf4VfTynYn5rS/buMPlTmgN+f9gocsuAyHavHbBe1UUft1zPDnWYUhXH
v3Ev+XanD32GPcLfG6jKovXF7f6l9iR/xP1KL3KB/1rtezPWH4YlZPP85l3q
e+P6TbGH/K/GE9/SpzGeVPfJo39t/pS6DOcbc/gJkzSl4v4ayzKxP5Tp5BbF
C35vLY3zmfoOudOgiLphSzbi+FOcpPXn1YPr3rrg+513k49/6bM3s4b8/PMm
+eW6bs9GKTB/aAvIE+qWXfomEesTQ5NTNB8Nv5I7o+t2HE87yQFFVyv235DX
OwZyebvm07s02YXx+pvcraJT+4LTOozXRnraflZRbyqP3ofxOpDcck9pde1O
e7C/f5BPbVpT5OeEndjftqdp/X9y5cYS68datpezO7lc+q2BYZ3k8RlCTtja
VOl2E+NX8Y08tmabOn/up2B71c82SfvLXape/o4X8rqS86vd3fjRA8erZha5
4NMUXfg93D/TbyLXav/swd00efvVOWOSpkUs6xm0dBT2d2/y6F6Xes+5j/sz
ukBysP2prbW+YvsZE8nDT6/afLsPzqc2Z8nV764a4P4M87u2R45Jig5+2/Hk
dtyfM0wlN/ft1nSDFc4/iniyu12rbvcjcbyossk1n/u/2zYyDeM1j/yf+sqy
uGlYn5onnTVJic1/H6tVEuNNuZ5c/FTm74BRmD/Vp8hXE56ZK/TFeirsLblj
VIZ6bB+cT3SVz9H1evz+izlFcbwFZpGzL+9q4bsJ9+e0r8jR0U/Gzw0YZpn/
DDbnTdLCKo1CQ87K93+dyP0rrJ/gvFK+XjtK7tO2q7R0Kc5P+ucW3ys1+sZs
3I8zl7tgkmKe1xjq/AjzhbIj+djafdmDQ3F/XO1H7hBfal29H5gPjUZyv4lH
yiz9vgHzVZmLJskmVkq51Qj5nNuTO6dX27J1KNYrgaPJ2xYpZnx6jusP7VKy
/vKQfzs18nrd+hLt78i3vpM9dmM8tCFPeDf5Q5/huJ+h8SZnfF3hs1/nh/EQ
RT5e7lOX5Qew/jbryId000o9dJHXZ60uU56VrnbKad4YDyPIAd/2ntrogPFk
jCCnXfGr8nGZfP8nk2xsr6j2r+tOHH/3yLc7PAoMnrAH42HYFTqfR6p0k5/D
inDya7sl+a+X4H6PKo3c/WH+oDud8Pf53iZ7+z+xn/XUH9tz4VWTpC41cutZ
B9wPUqeQp9Q9/+idI8Zf2A1ys6LbIhbK601dPnlHeJm+WSk4nxvtrtF66rff
+b05GI+BO8j5o28/bj0N6x/tf2SPObf+27dNfr71i6yvf9etbiucvxWN/qPx
4d34zQ3/dXgeMIC8bOThgFIL5PXBFbJ98PVmAxZVsNyfN38nm/2G6c464vMs
ygYGk/SpdPDsnP+93uhHzh9yfdPXS1uxvYPJxedNCW9cGedvm6/k8auCnKOM
2J/O9a7TevVyaM7gZTjfBfYlKzPz/2wajONTO5P85GrozsslcH40bCRfOjqq
1cKN8vVb7Rs0fz1qn5IiP5/T9CJvilU1nvsO86V+OjlBXzan1x/Mx+YE8vOO
o73eVcbzUmUOObh9ibcemVqMB5ebtB443DvLIRX72ziF3H9diUZ3++LrNhvI
5x6+nTTNgPWR82lyXpGzsx90wfEcaCJvCDm74fs77D/FpFu0Pld+qHhWfh6t
Wkeu7dQs5HpPXK/7niQn/V3o9UaD7a15Qx7baoPLy5kbsP0r3abtYX4WeFKL
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
zzxu+40ujv2r6UP2P/D69Pu98vNhM3nNwDeBASdxfRtWq1yedKBDh9P3v8rX
wz3JrR5drXJlCOY34zTyrllxjUKv4d+3SSBXfPTneGN/zCfa6uXzpCl7G12Y
/+oQ7j9JZJ88a92kCfj7FVPIITnTqqX2kNePceRy004cW3IN49tXT44qft+9
2jj5fn+3CjR+SpWO0d/A9lYGkBeV97SfWUZ+HrSWbMpf0TPnA46HsBNkQ9MJ
S/xqy583e03evqr6m39K3C9znmCTJ+1s3dKxw0c8XwvUkO8vster2yCf9hj5
8YEBwwcXIJ/hBflY4tPNbXZhPlRUqJgntc3o06hhSdz/1qwg73d/tetIPVz/
6w+TP2z/2avOYVwvm5+Sh0WVv/LpHj6vqSxbKU+afmzUoM5RWJ+oHcnRo+2W
dviF84XNE3KW9mKq82rsT+dSlfOkpN7PwypMgAPbkn+pHFtXdcPxph1FVpb+
UKuUhOtZVS45L2FFTqMvWM/4lqiSJ129Qv9NOYnnVypy83W5uVvkfpDei9xp
zu3IydUxP5iXkKsdHr7eqS3ut4cVrZonzd3Vq2TyMXw+VteCHDPXvHr6Yfnz
O8PJ+e2m9tgQjPWfzWLyx5Csy6FdcP/COZ18e3tH+58eOH8Z7KvR/BhvPalm
DtY7iqHkYeG27x034v6OahH5+u5ZLsnVsH7x3U3Wd2/TveEw+fi7SS7wGpJ6
Y638/GRw9Tzpyc2/QfGnVmI+m08eM7a6qlqo/PxqJ/ncce9XD8bj8z06Azl1
9rNZn8qhL2L8TW5Uasq4/ttwvzVwbo08aYtz3HNTKK7/tNvIlRosrt4lFOsv
w1XyM8O66fet8fkZlW1N+vea9nJ4cR7Pi/VasnWP1vHhT7A/zZfIWa+aaLzW
4/hTfiPb7tmfeHcq9pe6fq08aX31Xh9HpexFXldyp4XxLodDsB6yuUD+XqrB
dXNN+XnPZ3K5oouGKPzk+aBO7Tzpj25NmWH9DmE89CYHHW57rb0B1yuGQPKR
F9uPt/0E+34kv72z1nVEF+TT1KyTJy2IS86LaYD1ib4H+VZIjWcXPXH9bJ5K
Vi8NDlj0A9cDynhycPC6VkVmROH+TbW6eZJry/c10+XP7xudyUsf9h8p7ZGf
/0wmL1h0zCOkNNYjzuvJ5b1X5yUck7f3KbLixj/dCA/5+Xa3ennSPquStbW3
8XXVRLLN0Bnlvwbg8yi+a8hdzreo2XOb3BfIIpeZbVgYcBjzu/4V2XSsslP7
kFT0ocbXp+Pnd/bpkgW4fg1bRU40dy1fS43nF7qjZH/dQePih8hnfE6u6z7m
3pM4+f5OeWWe5FhMs/qhh/z52eXkWk6Oy+/r5PsNh8g7H49ZOz4E53vFU/KT
cusW7J4hP28r0yBP8j71c2hQc9x/9G1Pfn/mQY9y8v4z7ydH7ExasLC5fD/y
MTlr5Z2PGb1wP1ltbUvz/9eY31cX4/gPa0P2Wvnl2+IhOL513uSf3lYVXBzl
+wvFG+ZJ40v6lZv4CftX24q8qdXLit/eT8J4GEH+PcPzdGYM1heKJeSednFt
CxzxvElj1Yjm99iRT1P6IK++ObmYx/Ab+9yxPjIPI99oYXTa7IP7Rcpw8lQH
v77nu6swH6eRP84oVSlhB67XjM0a50kZ28rtN9TDfGgzhFx8fLUxn3edw/l5
IbnAHKXIb437j4EpZN+uE1eGT8f6S3uDbHhcv+0XT/nzDoPs8qRtD7Q+X8bh
/p9vKPmGeVeir7x+0uwgj3+3fd/T6fh+/X/kJ6n9Vn+8iPFt/kV+vWeFttp/
6H+FzWmSJy2baN1s7CP581zJ5Kr1ui5PtcHzJuMVcv37Q7rd9cLzUZsf5CIv
zvy9VyEA47lBUzp+F+ueVRiF+cawhVxp5TPPwFV78HmHS+Suca47r27G+VT1
lbzMsCrN1AbnX996zWh+La//Mfs2rl80fck2+s/rGjzHeFaeJ69M8Pg1ufci
zG+fyG3fd05oM1r+fI2lf6v4v//Qv2VG/5YZ/Vtm9G+Z0b9lRv+WGf1bZvRv
mdG/ZUb/lhn9W57XQzT6t8zo3zKjf8vzqkWjf8vz7hCN/i0z+reM6N/y/Mmi
0b9lRv+WGf1bnn+LaPRvef4votG/5XnPiUb/lue19G+Z0b9lRv+W5/0gGv1b
ntdFNPq3zOjfMqN/y/N3F43+LTP6t8zo3/L8XUSjf8vzrxaN/i0z+rc8/zjR
6N/y/EdEo3/LiP4tzx8rGv1bZvRvmdG/5Xn3iUb/lue19G+Z0b9lRv+W530g
Gv1bnrelaPRvmdG/5fkt/Vue30E0+rfM6N8yo3/L81v6tzz/YNHo3zKif8uM
/i3PP1A0+rc8/3bR6N8yo3/L888Wjf4tz39ZNPq3zOjf8vybRaN/y/N/Fo3+
LTP6tzz/WdHo3/L8lv4tM/q3zOjf8vzvRaN/y/NLotG/5Xkt/Vuet5to9G+Z
0b9lRv+W53USjf4tz6sRjf4tM/q3zOjf8vwrRKN/y4z+LTP6tzz/MtHo3/L8
j0Wjf8uM/i3Pv1c0+rc8v6V/y4z+Lc97XzT6tzxvC9Ho3zKif8vzWvq3PK+9
aPRvmdG/ZUb/lhn9W55/kGj0b5nRv2VG/5bnHyga/Vuef5to9G+Z0b/l+UNE
o3/L818Sjf4tM/q3PP8m0ejf8vyfRaN/y4z+Lc+fIxr9W57f0r9lRv+WGf1b
nj9PNPq3PL+zaPRvmdG/5fkt/Vuev6to9G+Z0b/leTuLRv+W510lGv1bZvRv
eV4/0ejf8ryHRKN/y4z+LTP6tzz/ftHo3zKjf8uM/i3PrxON/i3Pb+nfMqN/
y4z+Lc9/TzT6tzx/c9Ho3zKjf8vz/xON/i3P7yEa/Vtm9G95fkv/ludXi0b/
lhn9W2b0b3n+AaLRv+X5k0Wjf8uI/i3PHywa/Vue/6Jo9G+Z0b/l+TeKRv+W
5/8kGv1bZvRvef4c0ejf8vyW/i2z3L/9v//Qv+X5TaLRv2VG/5YZ/Vue19K/
5Xm7iEb/lhH9W2b0b3neTqLRv+V5V4pG/5YZ/Vuef4xo9G95/oOi0b9lRv+W
548Rjf4tz58rGv1bnnePaPRveV70b9l/GaLRv+X5LP1bns9BNPq3zOjfMqN/
y/Na+rc872DR6N8yo3/L86pFo3/LjP4tM/q3PG9/0ejf8rxbRaN/y4z+LTP6
tzz/ZtHo3zKjf8uM/i3PnyQa/Vue3ywa/VtmuX/L8p8Rjf4tz2/p3zKjf8vz
vhON/i3P2000+rfM6N/yvJb+Lc/rJBr9W2b0b5nRv2VG/5bnHysa/Vtm9G+Z
0b/l+X1Fo3/L8x8Qjf4tM/q3PH+0aPRvef5c0ejfMqN/y/Nnikb/lue39G+Z
0b9lRv+W578jGv1bnt9eNPq3zOjf8vwFotG/ZUb/lhn9W57X0r/leQeKRv+W
Gf1bZvRveV530ejf8rxa0ejfMqN/y/PPEo3+Lc9/XjT6t8zo3/L8iaLRv+X5
P4pG/5YZ/VueP1s0+rc8v6V/y4z+LTP6tzz/W9Ho3/L8XUWjf8vzWvq3PG9n
0ejfMqN/y4z+Lc/bUTT6tzzvctHo3zKif8uM/i3Pv1Q0+rfM6N8yo3/L80eJ
Rv+W538oGv1bZvRvef5M0ejf8vyW/i0z+rc8723R6N/yvJb+LTP6t8zo3/K8
+aLRv+V5B4lG/5YZ/Vue19K/ZUb/luefIxr9W2b0b3n+fqLRv+X5t4hG/5YZ
/Vuef6Zo9G95/nOi0b9lRv+W508Qjf4tz/9BNPq3zOjf8vynRaN/y/Nb+rfM
6N8yo3/L878Rjf4tz99FNPq3zOjf8vyW/i3P31k0+rfM6N/yvB1Eo3/L88aK
Rv+WGf1bntdHNPq3PO8+0ejfMqN/y4z+Lc+/RzT6t8zo3zKjf8vzZ4hG/5bn
t/RvmdG/ZUT/lue/JRr9W57f0r9lRv+W//rrotG/5fkt/VueXy0a/Vtm9G95
fkv/lufvLxr9W2b0b5nRv+X53USjf8vzbxaN/i0z+rc8/wzR6N/y/OdEo3/L
jP4tzx8vGv1bnv+9aPRvmdG/5fn1otG/5fkt/Vtm9G+Z0b/l+V+LRv+WGf1b
ZvRveV5L/5bn7SQa/Vtm9G+Z0b/leR1Fo3/L8y4Tjf4tM/q3PP8o0ejf8vx7
RaN/y4z+Lc+/RDT6tzz/fdHo3/K86aLRv+V5Lf1bZvRveb6botG/5fks/Vtm
9G+Z0b9lRv+W57X0b3negaLRv2VG/5bndReN/i0z+reM6N/yvK6i0b/leTeJ
Rv+WGf1bZvRvef5E0ejfMqN/y4z+Lc8fLxr9W54/TzT6t8zo3/L8p0Sjf8vz
W/q3zOjf8ryvRKN/y/M6iUb/lhn9W57X0r/leTuKRv+WGf1bZvRvmdG/5flH
i0b/lhn9W2b0b3l+b9Ho3/L8OtHo3zKjf8vzR4hG/5bnvyca/Vtm9G95/jTR
6N8yo3/LjP4tz3tDNPq3PK+lf8uM/i0z+rc87y/R6N/yvANEo3/LjP4tz2/p
3/L8/USjf8uM/i0z+rc8f1/R6N/y/BtFo3/LjP4tzz9dNPq3PH+OaPRvmdG/
5fk3iEb/luc3iUb/lhH9W57/pGj0b3l+S/+WGf1bZvRvef6XotG/5fk7i0b/
lue19G953g6i0b9lRv+WGf1bnredaPRved4Y0ejfMqN/y4z+Lc8fKRr9W0b0
b5nRv+X5F4tG/5bnvysa/Vtm9G95/lTR6N/y/H9Fo3/LjP4tz/tHNPq3zOjf
MqN/y/P+FI3+Lc/bXzT6t8zo3/K8lv4tz+smGv1bZvRvmdG/5fn7iEb/ludP
Eo3+LTP6tzz/NNHo3/L8Z0Sjf8uM/i3PHyca/Vue/51o9G+Z0b/l+U+IRv+W
57f0b5nRv2VG/5bnfyEa/Vuev5No9G+Z0b/l+S39W57fUTT6t8zo3/K8bUWj
f8vzRotG/5YZ/Vue10s0+rc87x7R6N8yo3/LjP4tz58uGv1bZvRvmdG/5fl3
i0b/lucvEI3+LTP6tzy/QTT6tzy/pX/LiP4tM/q3PP8P0ejf8vzuotG/ZUb/
lue39G95flfR6N8yo3/LjP4tz99bNPq3PH+iaPRvmdG/5fmnikb/lufPFo3+
LTP6tzz/etHo3/L8b0Wjf8uM/i3PnyUa/Vue39K/ZUb/lhn9W57/uWj0b5nR
v2VG/5bntfRved72otG/ZUb/lhn9W57PWzT6t8zo3zKjf8vzjhCN/i3Pmyka
/Vtm9G953nDR6N8yo3/LjP4tz5siGv1bnjdfNPq3PN9/otG/5fks/Vtm9G+Z
0b/l+X6IRv+W5+0nGv1bZvRveV5L/5YZ/Vuef6Zo9G953l6i0b/leRNFo3/L
jP4tzztFNPq3PO9p0ejfMqN/y4z+Lc9/UjT6t8zo3zKjf8vzHxeN/i3Pb+nf
MqN/y/M+E43+Lc/bQTT6t8zo3/K8lv4tz9tONPq3zOjfMqN/y4z+Lc8/UjT6
t8zo3/K8nqLRv+V5M0Sjf8uM/i3PGyYa/Vue95Zo9G+Z0b/l+XeJRv+W5/8j
Gv1bZvRvef5rotG/5fkt/Vtm9G+Z0b/l+b+LRv+W53cTjf4tI/q3PL+lf8vz
9xGN/i0z+rc8b0/R6N/yvAmi0b9lRv+W550iGv1bnlcvGv1bZvRvef61otG/
5flfi0b/lhn9W57/mGj0b3l+S/+WEf1bZvRvef6notG/5fkdRaN/y/Na+rc8
b1vR6N8yo3/LjP4tz6sSjf4tz7tENPq3zOjfMqN/y/MvFo3+LTP6t8zo3/L8
i0Sjf8vz3xSN/i0z+rc8/07R6N/y/L9Fo3/LjP4tz39VNPq3zOjfMqN/y/N+
E43+Lc/rKhr9W2b0b3leS/+W5+0tGv1bZvRvmdG/5fl7iEb/luePF43+LTP6
tzz/ZNHo3/L8p0Sjf8uI/i3Pv0Y0+rc8/yvR6N8yo3/L8x8Vjf4tz2/p3zKj
f8uM/i3P/1Q0+rc8f3vR6N8yo3/L81v6tzx/G9Ho3zKjf8vzthKN/i3Pu0Q0
+rfM6N/yvMNEo3/L86aJRv+WGf1bZvRvef4U0ejfMqN/y4z+Lc+/QzT6tzz/
L9Ho3zKjf8vzXxGN/i3Pb+nfMqN/y4z+Lc//VTT6tzx/X9Ho3zKjf8u/v/D9
t4Xvvy18/23h+28L339b+P5bReH7bwvff1v4/tvC998Wvv+28P23he+/xfgo
fP9t4ftvC99/W/j+28L33xa+/1ZR+P7bwvffFr7/tvD9t4Xvvy18/23h+2+R
v/D9t4Xvvy18/23h+28L339b+P5bReH7bwvff1v4/tvC998Wvv+28P23he+/
Rd7C998Wvv+28P23he+/LXz/beH7bxWF778tfP9t4ftvC99/W/j+28L33xa+
/xbjofD9t4Xvvy18/23h+28L339b+P5bxf+z99/+D+pTm3I=
    "], {{{}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{953, 1}], LineBox[{954, 2}], LineBox[{955, 3}], 
       LineBox[{961, 9}], LineBox[{962, 10}], LineBox[{963, 11}], 
       LineBox[{965, 13}], LineBox[{966, 14}], LineBox[{968, 16}], 
       LineBox[{971, 19}], LineBox[{972, 20}], LineBox[{974, 22}], 
       LineBox[{975, 23}], LineBox[{976, 24}], LineBox[{983, 31}], 
       LineBox[{984, 32}], LineBox[{986, 34}], LineBox[{987, 35}], 
       LineBox[{990, 38}], LineBox[{992, 40}], LineBox[{993, 41}], 
       LineBox[{994, 42}], LineBox[{995, 43}], LineBox[{996, 44}], 
       LineBox[{1004, 52}], LineBox[{1005, 53}], LineBox[{1006, 54}], 
       LineBox[{1007, 55}], LineBox[{1008, 56}], LineBox[{1010, 58}], 
       LineBox[{1011, 59}], LineBox[{1012, 60}], LineBox[{1013, 61}], 
       LineBox[{1014, 62}], LineBox[{1025, 73}], LineBox[{1026, 74}], 
       LineBox[{1027, 75}], LineBox[{1028, 76}], LineBox[{1031, 79}], 
       LineBox[{1032, 80}], LineBox[{1033, 81}], LineBox[{1034, 82}], 
       LineBox[{1035, 83}], LineBox[{1036, 84}], LineBox[{1041, 89}], 
       LineBox[{1042, 90}], LineBox[{1043, 91}], LineBox[{1045, 93}], 
       LineBox[{1052, 100}], LineBox[{1053, 101}], LineBox[{1054, 102}], 
       LineBox[{1055, 103}], LineBox[{1056, 104}], LineBox[{1057, 105}], 
       LineBox[{1061, 109}], LineBox[{1062, 110}], LineBox[{1066, 114}], 
       LineBox[{1067, 115}], LineBox[{1069, 117}], LineBox[{1070, 118}], 
       LineBox[{1072, 120}], LineBox[{1077, 125}], LineBox[{1082, 130}], 
       LineBox[{1083, 131}], LineBox[{1084, 132}], LineBox[{1085, 133}], 
       LineBox[{1086, 134}], LineBox[{1087, 135}], LineBox[{1088, 136}], 
       LineBox[{1089, 137}], LineBox[{1090, 138}], LineBox[{1091, 139}], 
       LineBox[{1092, 140}], LineBox[{1106, 154}], LineBox[{1108, 156}], 
       LineBox[{1110, 158}], LineBox[{1111, 159}], LineBox[{1112, 160}], 
       LineBox[{1113, 161}], LineBox[{1114, 162}], LineBox[{1115, 163}], 
       LineBox[{1116, 164}], LineBox[{1117, 165}], LineBox[{1118, 166}], 
       LineBox[{1119, 167}], LineBox[{1120, 168}], LineBox[{1121, 169}], 
       LineBox[{1122, 170}], LineBox[{1124, 172}], LineBox[{1125, 173}], 
       LineBox[{1138, 186}], LineBox[{1139, 187}], LineBox[{1141, 189}], 
       LineBox[{1142, 190}], LineBox[{1143, 191}], LineBox[{1144, 192}], 
       LineBox[{1145, 193}], LineBox[{1146, 194}], LineBox[{1148, 196}], 
       LineBox[{1149, 197}], LineBox[{1151, 199}], LineBox[{1153, 201}], 
       LineBox[{1154, 202}], LineBox[{1155, 203}], LineBox[{1156, 204}], 
       LineBox[{1161, 209}], LineBox[{1170, 218}], LineBox[{1171, 219}], 
       LineBox[{1172, 220}], LineBox[{1173, 221}], LineBox[{1174, 222}], 
       LineBox[{1175, 223}], LineBox[{1176, 224}], LineBox[{1177, 225}], 
       LineBox[{1178, 226}], LineBox[{1179, 227}], LineBox[{1180, 228}], 
       LineBox[{1181, 229}], LineBox[{1184, 232}], LineBox[{1185, 233}], 
       LineBox[{1190, 238}], LineBox[{1191, 239}], LineBox[{1197, 245}], 
       LineBox[{1198, 246}], LineBox[{1201, 249}], LineBox[{1205, 253}], 
       LineBox[{1206, 254}], LineBox[{1207, 255}], LineBox[{1208, 256}], 
       LineBox[{1209, 257}], LineBox[{1210, 258}], LineBox[{1211, 259}], 
       LineBox[{1212, 260}], LineBox[{1213, 261}], LineBox[{1214, 262}], 
       LineBox[{1215, 263}], LineBox[{1216, 264}], LineBox[{1217, 265}], 
       LineBox[{1220, 268}], LineBox[{1221, 269}], LineBox[{1234, 282}], 
       LineBox[{1235, 283}], LineBox[{1236, 284}], LineBox[{1237, 285}], 
       LineBox[{1238, 286}], LineBox[{1239, 287}], LineBox[{1241, 289}], 
       LineBox[{1244, 292}], LineBox[{1245, 293}], LineBox[{1246, 294}], 
       LineBox[{1247, 295}], LineBox[{1251, 299}], LineBox[{1252, 300}], 
       LineBox[{1254, 302}], LineBox[{1255, 303}], LineBox[{1256, 304}], 
       LineBox[{1257, 305}], LineBox[{1261, 309}], LineBox[{1265, 313}], 
       LineBox[{1268, 316}], LineBox[{1269, 317}], LineBox[{1271, 319}], 
       LineBox[{1272, 320}], LineBox[{1273, 321}], LineBox[{1277, 325}], 
       LineBox[{1278, 326}], LineBox[{1279, 327}], LineBox[{1281, 329}], 
       LineBox[{1287, 335}], LineBox[{1288, 336}], LineBox[{1289, 337}], 
       LineBox[{1290, 338}], LineBox[{1291, 339}], LineBox[{1292, 340}], 
       LineBox[{1293, 341}], LineBox[{1294, 342}], LineBox[{1296, 344}], 
       LineBox[{1300, 348}], LineBox[{1301, 349}], LineBox[{1302, 350}], 
       LineBox[{1310, 358}], LineBox[{1315, 363}], LineBox[{1316, 364}], 
       LineBox[{1317, 365}], LineBox[{1318, 366}], LineBox[{1319, 367}], 
       LineBox[{1320, 368}], LineBox[{1321, 369}], LineBox[{1322, 370}], 
       LineBox[{1324, 372}], LineBox[{1325, 373}], LineBox[{1330, 378}], 
       LineBox[{1331, 379}], LineBox[{1336, 384}], LineBox[{1337, 385}], 
       LineBox[{1338, 386}], LineBox[{1339, 387}], LineBox[{1340, 388}], 
       LineBox[{1341, 389}], LineBox[{1342, 390}], LineBox[{1352, 400}], 
       LineBox[{1353, 401}], LineBox[{1354, 402}], LineBox[{1355, 403}], 
       LineBox[{1356, 404}], LineBox[{1359, 407}], LineBox[{1360, 408}], 
       LineBox[{1361, 409}], LineBox[{1365, 413}], LineBox[{1368, 416}], 
       LineBox[{1369, 417}], LineBox[{1370, 418}], LineBox[{1372, 420}], 
       LineBox[{1373, 421}], LineBox[{1374, 422}], LineBox[{1375, 423}], 
       LineBox[{1383, 431}], LineBox[{1386, 434}], LineBox[{1387, 435}], 
       LineBox[{1388, 436}], LineBox[{1389, 437}], LineBox[{1393, 441}], 
       LineBox[{1394, 442}], LineBox[{1395, 443}], LineBox[{1396, 444}], 
       LineBox[{1397, 445}], LineBox[{1403, 451}], LineBox[{1404, 452}], 
       LineBox[{1405, 453}], LineBox[{1406, 454}], LineBox[{1407, 455}], 
       LineBox[{1408, 456}], LineBox[{1409, 457}], LineBox[{1418, 466}], 
       LineBox[{1419, 467}], LineBox[{1420, 468}], LineBox[{1421, 469}], 
       LineBox[{1422, 470}], LineBox[{1423, 471}], LineBox[{1431, 479}], 
       LineBox[{1432, 480}], LineBox[{1433, 481}], LineBox[{1434, 482}], 
       LineBox[{1435, 483}], LineBox[{1436, 484}], LineBox[{1437, 485}], 
       LineBox[{1438, 486}], LineBox[{1443, 491}], LineBox[{1444, 492}], 
       LineBox[{1446, 494}], LineBox[{1447, 495}], LineBox[{1456, 504}], 
       LineBox[{1457, 505}], LineBox[{1458, 506}], LineBox[{1459, 507}], 
       LineBox[{1460, 508}], LineBox[{1461, 509}], LineBox[{1462, 510}], 
       LineBox[{1463, 511}], LineBox[{1464, 512}], LineBox[{1465, 513}], 
       LineBox[{1466, 514}], LineBox[{1470, 518}], LineBox[{1474, 522}], 
       LineBox[{1476, 524}], LineBox[{1477, 525}], LineBox[{1486, 534}], 
       LineBox[{1487, 535}], LineBox[{1488, 536}], LineBox[{1489, 537}], 
       LineBox[{1491, 539}], LineBox[{1492, 540}], LineBox[{1493, 541}], 
       LineBox[{1494, 542}], LineBox[{1498, 546}], LineBox[{1499, 547}], 
       LineBox[{1500, 548}], LineBox[{1501, 549}], LineBox[{1502, 550}], 
       LineBox[{1503, 551}], LineBox[{1504, 552}], LineBox[{1506, 554}], 
       LineBox[{1507, 555}], LineBox[{1515, 563}], LineBox[{1519, 567}], 
       LineBox[{1520, 568}], LineBox[{1526, 574}], LineBox[{1527, 575}], 
       LineBox[{1528, 576}], LineBox[{1529, 577}], LineBox[{1530, 578}], 
       LineBox[{1531, 579}], LineBox[{1532, 580}], LineBox[{1533, 581}], 
       LineBox[{1534, 582}], LineBox[{1535, 583}], LineBox[{1536, 584}], 
       LineBox[{1549, 597}], LineBox[{1550, 598}], LineBox[{1551, 599}], 
       LineBox[{1552, 600}], LineBox[{1553, 601}], LineBox[{1555, 603}], 
       LineBox[{1556, 604}], LineBox[{1557, 605}], LineBox[{1558, 606}], 
       LineBox[{1559, 607}], LineBox[{1560, 608}], LineBox[{1565, 613}], 
       LineBox[{1566, 614}], LineBox[{1567, 615}], LineBox[{1568, 616}], 
       LineBox[{1577, 625}], LineBox[{1578, 626}], LineBox[{1579, 627}], 
       LineBox[{1584, 632}], LineBox[{1585, 633}], LineBox[{1586, 634}], 
       LineBox[{1587, 635}], LineBox[{1588, 636}], LineBox[{1589, 637}], 
       LineBox[{1590, 638}], LineBox[{1591, 639}], LineBox[{1592, 640}], 
       LineBox[{1593, 641}], LineBox[{1601, 649}], LineBox[{1602, 650}], 
       LineBox[{1603, 651}], LineBox[{1604, 652}], LineBox[{1605, 653}], 
       LineBox[{1606, 654}], LineBox[{1607, 655}], LineBox[{1616, 664}], 
       LineBox[{1620, 668}], LineBox[{1621, 669}], LineBox[{1622, 670}], 
       LineBox[{1623, 671}], LineBox[{1624, 672}], LineBox[{1625, 673}], 
       LineBox[{1626, 674}], LineBox[{1627, 675}], LineBox[{1631, 679}], 
       LineBox[{1632, 680}], LineBox[{1633, 681}], LineBox[{1634, 682}], 
       LineBox[{1635, 683}], LineBox[{1636, 684}], LineBox[{1647, 695}], 
       LineBox[{1648, 696}], LineBox[{1649, 697}], LineBox[{1650, 698}], 
       LineBox[{1651, 699}], LineBox[{1652, 700}], LineBox[{1656, 704}], 
       LineBox[{1657, 705}], LineBox[{1658, 706}], LineBox[{1659, 707}], 
       LineBox[{1660, 708}], LineBox[{1661, 709}], LineBox[{1662, 710}], 
       LineBox[{1663, 711}], LineBox[{1664, 712}], LineBox[{1675, 723}], 
       LineBox[{1679, 727}], LineBox[{1681, 729}], LineBox[{1682, 730}], 
       LineBox[{1683, 731}], LineBox[{1684, 732}], LineBox[{1685, 733}], 
       LineBox[{1686, 734}], LineBox[{1687, 735}], LineBox[{1688, 736}], 
       LineBox[{1689, 737}], LineBox[{1690, 738}], LineBox[{1691, 739}], 
       LineBox[{1695, 743}], LineBox[{1699, 747}], LineBox[{1700, 748}], 
       LineBox[{1709, 757}], LineBox[{1710, 758}], LineBox[{1711, 759}], 
       LineBox[{1712, 760}], LineBox[{1713, 761}], LineBox[{1714, 762}], 
       LineBox[{1715, 763}], LineBox[{1717, 765}], LineBox[{1718, 766}], 
       LineBox[{1719, 767}], LineBox[{1727, 775}], LineBox[{1728, 776}], 
       LineBox[{1729, 777}], LineBox[{1730, 778}], LineBox[{1731, 779}], 
       LineBox[{1732, 780}], LineBox[{1734, 782}], LineBox[{1736, 784}], 
       LineBox[{1738, 786}], LineBox[{1743, 791}], LineBox[{1744, 792}], 
       LineBox[{1745, 793}], LineBox[{1746, 794}], LineBox[{1748, 796}], 
       LineBox[{1755, 803}], LineBox[{1757, 805}], LineBox[{1758, 806}], 
       LineBox[{1759, 807}], LineBox[{1760, 808}], LineBox[{1762, 810}], 
       LineBox[{1763, 811}], LineBox[{1764, 812}], LineBox[{1765, 813}], 
       LineBox[{1766, 814}], LineBox[{1767, 815}], LineBox[{1768, 816}], 
       LineBox[{1769, 817}], LineBox[{1770, 818}], LineBox[{1771, 819}], 
       LineBox[{1787, 835}], LineBox[{1788, 836}], LineBox[{1789, 837}], 
       LineBox[{1790, 838}], LineBox[{1791, 839}], LineBox[{1792, 840}], 
       LineBox[{1793, 841}], LineBox[{1794, 842}], LineBox[{1795, 843}], 
       LineBox[{1797, 845}], LineBox[{1798, 846}], LineBox[{1799, 847}], 
       LineBox[{1800, 848}], LineBox[{1802, 850}], LineBox[{1811, 859}], 
       LineBox[{1815, 863}], LineBox[{1816, 864}], LineBox[{1817, 865}], 
       LineBox[{1818, 866}], LineBox[{1819, 867}], LineBox[{1821, 869}], 
       LineBox[{1822, 870}], LineBox[{1823, 871}], LineBox[{1824, 872}], 
       LineBox[{1825, 873}], LineBox[{1828, 876}], LineBox[{1829, 877}], 
       LineBox[{1830, 878}], LineBox[{1831, 879}], LineBox[{1832, 880}], 
       LineBox[{1846, 894}], LineBox[{1849, 897}], LineBox[{1850, 898}], 
       LineBox[{1851, 899}], LineBox[{1852, 900}], LineBox[{1853, 901}], 
       LineBox[{1854, 902}], LineBox[{1855, 903}], LineBox[{1856, 904}], 
       LineBox[{1857, 905}], LineBox[{1859, 907}], LineBox[{1860, 908}], 
       LineBox[{1861, 909}], LineBox[{1863, 911}], LineBox[{1864, 912}], 
       LineBox[{1865, 913}], LineBox[{1880, 928}], LineBox[{1881, 929}], 
       LineBox[{1882, 930}], LineBox[{1883, 931}], LineBox[{1884, 932}], 
       LineBox[{1885, 933}], LineBox[{1886, 934}], LineBox[{1887, 935}], 
       LineBox[{1888, 936}], LineBox[{1890, 938}], LineBox[{1892, 940}], 
       LineBox[{1893, 941}], LineBox[{1896, 944}], LineBox[{1902, 950}], 
       LineBox[{1903, 951}], LineBox[{1904, 952}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], 
       LineBox[{956, 4}], LineBox[{957, 5}], LineBox[{958, 6}], 
       LineBox[{959, 7}], LineBox[{960, 8}], LineBox[{964, 12}], 
       LineBox[{967, 15}], LineBox[{969, 17}], LineBox[{970, 18}], 
       LineBox[{973, 21}], LineBox[{977, 25}], LineBox[{978, 26}], 
       LineBox[{979, 27}], LineBox[{980, 28}], LineBox[{981, 29}], 
       LineBox[{982, 30}], LineBox[{985, 33}], LineBox[{988, 36}], 
       LineBox[{989, 37}], LineBox[{991, 39}], LineBox[{997, 45}], 
       LineBox[{998, 46}], LineBox[{999, 47}], LineBox[{1000, 48}], 
       LineBox[{1001, 49}], LineBox[{1002, 50}], LineBox[{1003, 51}], 
       LineBox[{1009, 57}], LineBox[{1015, 63}], LineBox[{1016, 64}], 
       LineBox[{1017, 65}], LineBox[{1018, 66}], LineBox[{1019, 67}], 
       LineBox[{1020, 68}], LineBox[{1021, 69}], LineBox[{1022, 70}], 
       LineBox[{1023, 71}], LineBox[{1024, 72}], LineBox[{1029, 77}], 
       LineBox[{1030, 78}], LineBox[{1037, 85}], LineBox[{1038, 86}], 
       LineBox[{1039, 87}], LineBox[{1040, 88}], LineBox[{1044, 92}], 
       LineBox[{1046, 94}], LineBox[{1047, 95}], LineBox[{1048, 96}], 
       LineBox[{1049, 97}], LineBox[{1050, 98}], LineBox[{1051, 99}], 
       LineBox[{1058, 106}], LineBox[{1059, 107}], LineBox[{1060, 108}], 
       LineBox[{1063, 111}], LineBox[{1064, 112}], LineBox[{1065, 113}], 
       LineBox[{1068, 116}], LineBox[{1071, 119}], LineBox[{1073, 121}], 
       LineBox[{1074, 122}], LineBox[{1075, 123}], LineBox[{1076, 124}], 
       LineBox[{1078, 126}], LineBox[{1079, 127}], LineBox[{1080, 128}], 
       LineBox[{1081, 129}], LineBox[{1093, 141}], LineBox[{1094, 142}], 
       LineBox[{1095, 143}], LineBox[{1096, 144}], LineBox[{1097, 145}], 
       LineBox[{1098, 146}], LineBox[{1099, 147}], LineBox[{1100, 148}], 
       LineBox[{1101, 149}], LineBox[{1102, 150}], LineBox[{1103, 151}], 
       LineBox[{1104, 152}], LineBox[{1105, 153}], LineBox[{1107, 155}], 
       LineBox[{1109, 157}], LineBox[{1123, 171}], LineBox[{1126, 174}], 
       LineBox[{1127, 175}], LineBox[{1128, 176}], LineBox[{1129, 177}], 
       LineBox[{1130, 178}], LineBox[{1131, 179}], LineBox[{1132, 180}], 
       LineBox[{1133, 181}], LineBox[{1134, 182}], LineBox[{1135, 183}], 
       LineBox[{1136, 184}], LineBox[{1137, 185}], LineBox[{1140, 188}], 
       LineBox[{1147, 195}], LineBox[{1150, 198}], LineBox[{1152, 200}], 
       LineBox[{1157, 205}], LineBox[{1158, 206}], LineBox[{1159, 207}], 
       LineBox[{1160, 208}], LineBox[{1162, 210}], LineBox[{1163, 211}], 
       LineBox[{1164, 212}], LineBox[{1165, 213}], LineBox[{1166, 214}], 
       LineBox[{1167, 215}], LineBox[{1168, 216}], LineBox[{1169, 217}], 
       LineBox[{1182, 230}], LineBox[{1183, 231}], LineBox[{1186, 234}], 
       LineBox[{1187, 235}], LineBox[{1188, 236}], LineBox[{1189, 237}], 
       LineBox[{1192, 240}], LineBox[{1193, 241}], LineBox[{1194, 242}], 
       LineBox[{1195, 243}], LineBox[{1196, 244}], LineBox[{1199, 247}], 
       LineBox[{1200, 248}], LineBox[{1202, 250}], LineBox[{1203, 251}], 
       LineBox[{1204, 252}], LineBox[{1218, 266}], LineBox[{1219, 267}], 
       LineBox[{1222, 270}], LineBox[{1223, 271}], LineBox[{1224, 272}], 
       LineBox[{1225, 273}], LineBox[{1226, 274}], LineBox[{1227, 275}], 
       LineBox[{1228, 276}], LineBox[{1229, 277}], LineBox[{1230, 278}], 
       LineBox[{1231, 279}], LineBox[{1232, 280}], LineBox[{1233, 281}], 
       LineBox[{1240, 288}], LineBox[{1242, 290}], LineBox[{1243, 291}], 
       LineBox[{1248, 296}], LineBox[{1249, 297}], LineBox[{1250, 298}], 
       LineBox[{1253, 301}], LineBox[{1258, 306}], LineBox[{1259, 307}], 
       LineBox[{1260, 308}], LineBox[{1262, 310}], LineBox[{1263, 311}], 
       LineBox[{1264, 312}], LineBox[{1266, 314}], LineBox[{1267, 315}], 
       LineBox[{1270, 318}], LineBox[{1274, 322}], LineBox[{1275, 323}], 
       LineBox[{1276, 324}], LineBox[{1280, 328}], LineBox[{1282, 330}], 
       LineBox[{1283, 331}], LineBox[{1284, 332}], LineBox[{1285, 333}], 
       LineBox[{1286, 334}], LineBox[{1295, 343}], LineBox[{1297, 345}], 
       LineBox[{1298, 346}], LineBox[{1299, 347}], LineBox[{1303, 351}], 
       LineBox[{1304, 352}], LineBox[{1305, 353}], LineBox[{1306, 354}], 
       LineBox[{1307, 355}], LineBox[{1308, 356}], LineBox[{1309, 357}], 
       LineBox[{1311, 359}], LineBox[{1312, 360}], LineBox[{1313, 361}], 
       LineBox[{1314, 362}], LineBox[{1323, 371}], LineBox[{1326, 374}], 
       LineBox[{1327, 375}], LineBox[{1328, 376}], LineBox[{1329, 377}], 
       LineBox[{1332, 380}], LineBox[{1333, 381}], LineBox[{1334, 382}], 
       LineBox[{1335, 383}], LineBox[{1343, 391}], LineBox[{1344, 392}], 
       LineBox[{1345, 393}], LineBox[{1346, 394}], LineBox[{1347, 395}], 
       LineBox[{1348, 396}], LineBox[{1349, 397}], LineBox[{1350, 398}], 
       LineBox[{1351, 399}], LineBox[{1357, 405}], LineBox[{1358, 406}], 
       LineBox[{1362, 410}], LineBox[{1363, 411}], LineBox[{1364, 412}], 
       LineBox[{1366, 414}], LineBox[{1367, 415}], LineBox[{1371, 419}], 
       LineBox[{1376, 424}], LineBox[{1377, 425}], LineBox[{1378, 426}], 
       LineBox[{1379, 427}], LineBox[{1380, 428}], LineBox[{1381, 429}], 
       LineBox[{1382, 430}], LineBox[{1384, 432}], LineBox[{1385, 433}], 
       LineBox[{1390, 438}], LineBox[{1391, 439}], LineBox[{1392, 440}], 
       LineBox[{1398, 446}], LineBox[{1399, 447}], LineBox[{1400, 448}], 
       LineBox[{1401, 449}], LineBox[{1402, 450}], LineBox[{1410, 458}], 
       LineBox[{1411, 459}], LineBox[{1412, 460}], LineBox[{1413, 461}], 
       LineBox[{1414, 462}], LineBox[{1415, 463}], LineBox[{1416, 464}], 
       LineBox[{1417, 465}], LineBox[{1424, 472}], LineBox[{1425, 473}], 
       LineBox[{1426, 474}], LineBox[{1427, 475}], LineBox[{1428, 476}], 
       LineBox[{1429, 477}], LineBox[{1430, 478}], LineBox[{1439, 487}], 
       LineBox[{1440, 488}], LineBox[{1441, 489}], LineBox[{1442, 490}], 
       LineBox[{1445, 493}], LineBox[{1448, 496}], LineBox[{1449, 497}], 
       LineBox[{1450, 498}], LineBox[{1451, 499}], LineBox[{1452, 500}], 
       LineBox[{1453, 501}], LineBox[{1454, 502}], LineBox[{1455, 503}], 
       LineBox[{1467, 515}], LineBox[{1468, 516}], LineBox[{1469, 517}], 
       LineBox[{1471, 519}], LineBox[{1472, 520}], LineBox[{1473, 521}], 
       LineBox[{1475, 523}], LineBox[{1478, 526}], LineBox[{1479, 527}], 
       LineBox[{1480, 528}], LineBox[{1481, 529}], LineBox[{1482, 530}], 
       LineBox[{1483, 531}], LineBox[{1484, 532}], LineBox[{1485, 533}], 
       LineBox[{1490, 538}], LineBox[{1495, 543}], LineBox[{1496, 544}], 
       LineBox[{1497, 545}], LineBox[{1505, 553}], LineBox[{1508, 556}], 
       LineBox[{1509, 557}], LineBox[{1510, 558}], LineBox[{1511, 559}], 
       LineBox[{1512, 560}], LineBox[{1513, 561}], LineBox[{1514, 562}], 
       LineBox[{1516, 564}], LineBox[{1517, 565}], LineBox[{1518, 566}], 
       LineBox[{1521, 569}], LineBox[{1522, 570}], LineBox[{1523, 571}], 
       LineBox[{1524, 572}], LineBox[{1525, 573}], LineBox[{1537, 585}], 
       LineBox[{1538, 586}], LineBox[{1539, 587}], LineBox[{1540, 588}], 
       LineBox[{1541, 589}], LineBox[{1542, 590}], LineBox[{1543, 591}], 
       LineBox[{1544, 592}], LineBox[{1545, 593}], LineBox[{1546, 594}], 
       LineBox[{1547, 595}], LineBox[{1548, 596}], LineBox[{1554, 602}], 
       LineBox[{1561, 609}], LineBox[{1562, 610}], LineBox[{1563, 611}], 
       LineBox[{1564, 612}], LineBox[{1569, 617}], LineBox[{1570, 618}], 
       LineBox[{1571, 619}], LineBox[{1572, 620}], LineBox[{1573, 621}], 
       LineBox[{1574, 622}], LineBox[{1575, 623}], LineBox[{1576, 624}], 
       LineBox[{1580, 628}], LineBox[{1581, 629}], LineBox[{1582, 630}], 
       LineBox[{1583, 631}], LineBox[{1594, 642}], LineBox[{1595, 643}], 
       LineBox[{1596, 644}], LineBox[{1597, 645}], LineBox[{1598, 646}], 
       LineBox[{1599, 647}], LineBox[{1600, 648}], LineBox[{1608, 656}], 
       LineBox[{1609, 657}], LineBox[{1610, 658}], LineBox[{1611, 659}], 
       LineBox[{1612, 660}], LineBox[{1613, 661}], LineBox[{1614, 662}], 
       LineBox[{1615, 663}], LineBox[{1617, 665}], LineBox[{1618, 666}], 
       LineBox[{1619, 667}], LineBox[{1628, 676}], LineBox[{1629, 677}], 
       LineBox[{1630, 678}], LineBox[{1637, 685}], LineBox[{1638, 686}], 
       LineBox[{1639, 687}], LineBox[{1640, 688}], LineBox[{1641, 689}], 
       LineBox[{1642, 690}], LineBox[{1643, 691}], LineBox[{1644, 692}], 
       LineBox[{1645, 693}], LineBox[{1646, 694}], LineBox[{1653, 701}], 
       LineBox[{1654, 702}], LineBox[{1655, 703}], LineBox[{1665, 713}], 
       LineBox[{1666, 714}], LineBox[{1667, 715}], LineBox[{1668, 716}], 
       LineBox[{1669, 717}], LineBox[{1670, 718}], LineBox[{1671, 719}], 
       LineBox[{1672, 720}], LineBox[{1673, 721}], LineBox[{1674, 722}], 
       LineBox[{1676, 724}], LineBox[{1677, 725}], LineBox[{1678, 726}], 
       LineBox[{1680, 728}], LineBox[{1692, 740}], LineBox[{1693, 741}], 
       LineBox[{1694, 742}], LineBox[{1696, 744}], LineBox[{1697, 745}], 
       LineBox[{1698, 746}], LineBox[{1701, 749}], LineBox[{1702, 750}], 
       LineBox[{1703, 751}], LineBox[{1704, 752}], LineBox[{1705, 753}], 
       LineBox[{1706, 754}], LineBox[{1707, 755}], LineBox[{1708, 756}], 
       LineBox[{1716, 764}], LineBox[{1720, 768}], LineBox[{1721, 769}], 
       LineBox[{1722, 770}], LineBox[{1723, 771}], LineBox[{1724, 772}], 
       LineBox[{1725, 773}], LineBox[{1726, 774}], LineBox[{1733, 781}], 
       LineBox[{1735, 783}], LineBox[{1737, 785}], LineBox[{1739, 787}], 
       LineBox[{1740, 788}], LineBox[{1741, 789}], LineBox[{1742, 790}], 
       LineBox[{1747, 795}], LineBox[{1749, 797}], LineBox[{1750, 798}], 
       LineBox[{1751, 799}], LineBox[{1752, 800}], LineBox[{1753, 801}], 
       LineBox[{1754, 802}], LineBox[{1756, 804}], LineBox[{1761, 809}], 
       LineBox[{1772, 820}], LineBox[{1773, 821}], LineBox[{1774, 822}], 
       LineBox[{1775, 823}], LineBox[{1776, 824}], LineBox[{1777, 825}], 
       LineBox[{1778, 826}], LineBox[{1779, 827}], LineBox[{1780, 828}], 
       LineBox[{1781, 829}], LineBox[{1782, 830}], LineBox[{1783, 831}], 
       LineBox[{1784, 832}], LineBox[{1785, 833}], LineBox[{1786, 834}], 
       LineBox[{1796, 844}], LineBox[{1801, 849}], LineBox[{1803, 851}], 
       LineBox[{1804, 852}], LineBox[{1805, 853}], LineBox[{1806, 854}], 
       LineBox[{1807, 855}], LineBox[{1808, 856}], LineBox[{1809, 857}], 
       LineBox[{1810, 858}], LineBox[{1812, 860}], LineBox[{1813, 861}], 
       LineBox[{1814, 862}], LineBox[{1820, 868}], LineBox[{1826, 874}], 
       LineBox[{1827, 875}], LineBox[{1833, 881}], LineBox[{1834, 882}], 
       LineBox[{1835, 883}], LineBox[{1836, 884}], LineBox[{1837, 885}], 
       LineBox[{1838, 886}], LineBox[{1839, 887}], LineBox[{1840, 888}], 
       LineBox[{1841, 889}], LineBox[{1842, 890}], LineBox[{1843, 891}], 
       LineBox[{1844, 892}], LineBox[{1845, 893}], LineBox[{1847, 895}], 
       LineBox[{1848, 896}], LineBox[{1858, 906}], LineBox[{1862, 910}], 
       LineBox[{1866, 914}], LineBox[{1867, 915}], LineBox[{1868, 916}], 
       LineBox[{1869, 917}], LineBox[{1870, 918}], LineBox[{1871, 919}], 
       LineBox[{1872, 920}], LineBox[{1873, 921}], LineBox[{1874, 922}], 
       LineBox[{1875, 923}], LineBox[{1876, 924}], LineBox[{1877, 925}], 
       LineBox[{1878, 926}], LineBox[{1879, 927}], LineBox[{1889, 937}], 
       LineBox[{1891, 939}], LineBox[{1894, 942}], LineBox[{1895, 943}], 
       LineBox[{1897, 945}], LineBox[{1898, 946}], LineBox[{1899, 947}], 
       LineBox[{1900, 948}], LineBox[{1901, 949}]}}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1:eJwN02MDHQQAAMDXbNu212zbrJm1Ztu2bdu2bdu2re7D/YRL3LB15VZ/BAKB
LUEDgbYhA4F2tKcDHelEZ7rQlW50pwc96UVv+tCXfvRnAAMZxGCGMJRhDGcE
IxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUr
WcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUYxznBCc5
xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcFL3nF
a97wlne85wMf+cRnvvCVb3znBz/5xW8CoQKBPwhCUIIRnBCEJBShCUNYwhGe
CEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ4M
ZCQTmclCVv4kG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTf7ib2pRmzrUpR71aUBDGtGYJjTlH/6lGf/RnBa0pBWt
aUNb2tGeDnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZ
w1jGMZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nD
Wtaxng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZ
znGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve
8Z4PfOQTn/nCV77xnR/85Be/CYT2nyAEJRjBCUFIQhGaMIQlHOGJQEQiEZko
RCUa0YlBTGIRmzjEJR7xSUBCEpGYJCQlGclJQUpSkZo0pCUd6clARjKRmSxk
5U+ykZ0c5CQXuclDXvKRnwIUpBCFKUJRilGcEpSkFKUpQ1nKUZ4KVKQSlalC
VapRnRrU5C/+pha1qUNd6lGfBjSkEY1pQlP+4V+a8R/NaUFLWtGaNrSlHe3p
QEc60ZkudKUb3elBT3rRmz70pR/9GcBABjGYIQxlGMMZwUhGMZoxjGUc45nA
RCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZy1nBSlaxmjWsZR3r2cBG
NrGZLWxlG9vZwU52sZs97GUf+znAQQ5xmCMc5RjHOcFJTnGaM5zlHOe5wEUu
cZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzlGc95wUte8Zo3vOUd7/nARz7x
mS985Rvf+cFPfvGbQBj/CUJQghGcEIQkFKEJQ1jCEZ4IRCQSkYlCVKIRnRjE
JBaxiUNc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZyUJW/iQb2clB
TnKRmzzkJR/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpRmSpUpRrVqUFN
/uJvalGbOtSlHvVpQEMa0ZgmNOUf/qUZ/9GcFrSkFa1pQ1va0Z4OdKQTnelC
V7rRnR70pBe96UNf+tGfAQxkEIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJU
pjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZwla2
sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nCVa5x
nRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJXvvGd
H/zkF78JhPWfIAQlGMEJQUhCEZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQl
HvFJQEISkZgkJCUZyUlBSlLxP62AC7U=
       "]]}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}}], {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 4], 0.25],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6608544*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         StyleBox["\"2017\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         StyleBox["\"2019\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}, {{3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}}}}],
  GridLines->FrontEndValueCache[{Charting`ScaledTickValues[
      ((Transpose[{#, 
        Table[
         Directive[
          GrayLevel[0.4, 0.5], 
          AbsoluteThickness[1], 
          AbsoluteDashing[{1, 2}]], {
          Length[#]}]}]& )[
       Part[
        Select[
         Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}][
          SlotSequence[1]], And[
          FreeQ[#, 
           Alternatives["", 
            Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 1]]& )[
       SlotSequence[1]], {Identity, Identity}]& , Automatic}, {{{3.6605952*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.6922176*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7237536*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}, {3.7552896*^9, 
       Directive[
        GrayLevel[0.4], 
        Opacity[0.5], 
        AbsoluteThickness[1.], 
        AbsoluteDashing[{1., 2.}]]}}, Automatic}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  Method->{
   "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6608544*^9, 3.7800864*^9}, {-0.10305712389759397`, 
   0.13878595727452273`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.780126345839299*^9, 3.7801263660080223`*^9}, {
   3.780126495445746*^9, 3.780126560402795*^9}, 3.780126613910144*^9, {
   3.780126659917297*^9, 3.780126697945606*^9}, 3.780126986924862*^9, {
   3.78012705102943*^9, 3.780127063671324*^9}, 3.780127235882827*^9, 
   3.78012733661405*^9, 3.7801283734612637`*^9, 3.780130563954937*^9, 
   3.780130698458681*^9, 3.780138382595812*^9, 3.7803306629435987`*^9, 
   3.780334128969542*^9, 3.780336777801214*^9, 3.782464185305644*^9},
 CellLabel->"Out[5]=",
 CellID->691553357]
}, Open  ]],

Cell["Find anomalies positions in the list of fit errors:", "Text",
 CellChangeTimes->{{3.780127979583169*^9, 3.7801279872449207`*^9}, {
  3.780128042619671*^9, 3.780128065322414*^9}},
 CellID->1763409051],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pos", "=", 
  RowBox[{"FindAnomalies", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"qFunc", "[", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}],
           "-", 
          RowBox[{
          "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ")"}], "/", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
        "&"}], ",", 
      RowBox[{"QuantityMagnitude", "[", 
       RowBox[{"finData", "[", "\"\<Path\>\"", "]"}], "]"}]}], "]"}], ",", 
    "\"\<AnomalyPositions\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.780127460137117*^9, 3.780127577180025*^9}, 
   3.780130372533311*^9},
 CellLabel->"In[6]:=",
 CellID->1372668660],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "688", ",", "689", ",", "690", ",", "691", ",", "716", ",", "734", ",", 
   "736", ",", "750", ",", "798"}], "}"}]], "Output",
 CellChangeTimes->{
  3.780127495876781*^9, 3.78012752588968*^9, {3.780127569274057*^9, 
   3.7801275855783463`*^9}, 3.780128028164977*^9, {3.780128381257328*^9, 
   3.7801283894000607`*^9}, 3.78013056768769*^9, 3.780130704144112*^9, 
   3.780138384538169*^9, 3.7803306677610683`*^9, 3.7803341336568203`*^9, 
   3.7803367823850803`*^9, 3.782464190016901*^9},
 CellLabel->"Out[6]=",
 CellID->1303735716]
}, Open  ]],

Cell["Plot the data, fit, and anomalies:", "Text",
 CellChangeTimes->{{3.7801279901412077`*^9, 3.7801280137172623`*^9}},
 CellID->1871726874],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"finData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"qFunc", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"finData", "[", "\"\<Times\>\"", "]"}]}], ",", 
     RowBox[{
      RowBox[{"finData", "[", "\"\<Path\>\"", "]"}], "\[LeftDoubleBracket]", 
      "pos", "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "4"]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True", ",", "False"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"GrayLevel", "[", "0.5`", "]"}], ",", 
        RowBox[{"Opacity", "[", "0.5`", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Thick"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.01`", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "\"\<fit\>\"", ",", "\"\<anomalies\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7801276002216*^9, 3.780127964758116*^9}, 
   3.780128023110435*^9, {3.780130372537486*^9, 3.780130372540237*^9}, 
   3.780330520696053*^9},
 CellLabel->"In[7]:=",
 CellID->765994676],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
sH7XwfP0nU96FGH9xOBJkxdxj2A9RL3gJV87XiQKMa+2iKZG1e42yrmBee3A
FQeiRwsTsV5/wLP/3rjy3BvXW7MY8nUNXU3YiHmtwaI847BRqzDvQbCh6S3L
MUZYry5w5PO0x/6dbFIv9RLohx7ljuIaYu5qcMSKgHHsMmL+PrDTw1tfP90i
FiWCy3ckGv/HJ7ZXKYXnUS+lTAMOMc8CPCVB37VQm1joB1ZxiBVy5Igll8Br
OO6tSV/mkPxPwCGGbaPGpxELlpf9+3tw2vDcEcTiXf+85tb9t5WzSf6L4LoY
Nd0dycTsEnBkxYeePH9ibgvYgHOjirGCWLrzCdwX7/zukj6bRep5HryzzXet
ZxqxfRFYtlOL7okg5v0Ex8mVGTfvIBZOLKcpXhwjwN6W2O8ROOi2sb77SGJB
E1h3DINT1zuT5GU+hf5cs9s6sp2YsQRc9SLbZmIzMf8hODzSamRXDbGoAaxX
eLey6TOxdNwzmvKY8ClW8ImYZQw2qftp+qOa2H4r+F7MpE/haInk3+tr/z3P
ETPln8P6Kbvzs98Tc4zAZ+PKXh5/R+znBt7Ncm7fLCYWxICnaaxh0C+J2aNf
wPlyXDfx6T1i7jzwsbFbV4+5ifm3gO/VNHz+cQnzR/1zbuGLWccxvxA8ZWr3
iaaDxLw5L2lKffWrqRvYxMKN4FUFUfr+Spg//J+NM7au7jEk+TPBHjWiaZo1
xJxq8OfSVTeWFhKL17+CeaP/OClvKzEjDBxhvKTq4Api9m1wpnJxTKkuMfc9
uLSxclKdHDEr9DXcR/gNFpkpBqSe6WC567sZpaeJeZXgSY5J/IUhxMJ+8Gdh
t7WVL7FE9w1NXfvad3y5G7FfGjhiC3Vd2ZpY8BZcK9E0X2hDLO4BHy1eKR/u
SMzQfgv98+/zlC3EbFtw9faOYqk3segVWE4uvqgrnVjaDb5x91vSjDJiloaY
pvpu3ChqqcP8VmBJtKNv1zDy+/EOgI16NrS1a2E9O8FbZGV2hMVhPdUq4PlD
ocWQ/ZDYbxXY9cOuJSskxIK94LVDPbW7RmE/XwHnGcpuc5mN/TC9kqYWaB5T
yknCflgJHsgbHLpcjP2wBxwexjZ7XI/9kAC+oRY7rXwY7r8ysNn8U7Xb1XB/
mb+D/Xip8HjBVmKJL/jgz3ufk/YSM+PBuyo2ME6FEnOKwQZdh//4ReF+pMFK
e2TH844TM3ZW0VSC8bthf8KI2efAre6fgnsCibmF4BcnOWFrdhHzf4A56ddc
tN2IRRPewzxNSXAuxv1ufwZ8TH/og/8EnA8FYMVea82tfdjPjeBEp7l/jBuw
nxU/wPliaJHEfoH70QSstFOHGy7EetaD980+o05b4nwY9xGeFw97p+/B+rIX
gYPe3hjKwP3BdQf7T2ra9d8AWR9pLXhMc4qyF+4H1phqWD/7xrzbGcT2C8C6
LTG+g1ewH1zB04/JsLbEEgujwfHstRrp4dgPoz7RlJeL0ZdhPtgPc8ELp5V3
N3liP2wG61QmORjgfhNHglunyalkueH+E4JXH7eNcnYl5s/+DPszQWMHk0ss
cgbXHLo7fyZ+v/QouMmff6ZmG+a/A65kymQP98L8H8FurQ4lxzCPxOkL/LyP
6yMmBGA/88B6MUPL6oIx/y3wJc/ur8GhmL8KPCQTeaYkDPMPghX+dB67HIHz
4XAN3I/u+TbuisH5cAPcoZH/2Qct6gO7XDy0MjYK8+r8R1OTvfUVirFevFTw
oXUGLvMPYj3fgJeopLEn+GHev2B3Nf9zc7wxr9ZXqGfHfOqsO+a1AffNO9u2
YiPW8yX46PZ3JodMsZ7d4JQVKro5czEvqxbqeWxppsv/59kacOOTmhOR07De
+8GnEq4GzFXAenaAy8KNyi814XxQldAUK3GQlVqN880SHLdiho7zC5xv/mCX
CU4nCgtwvl0GlybNGlubgfNtWh3kz5zj2RyK820F2FmHOs/Zg/NtN7gtSX9n
IM5DRgI4NiNd/bIdzrdScL39ra7sZTjfqHqaeiXpfijPxPnmA77ea3LGjoHz
7QL4ZF7is/tSfZJfBJ6jKi+wrCPmNYONDfdsUKgkZno3wH3S67Jpfxox5yy4
cOGEjt/xxH6PwZUF059bHycWfAc79aYMTjhMLB7/De73nRfe2foRc/ngnh16
p1k2xPx8cOquQbdYc2LRN3CJ6RfmNWNiqUIjzL+PtyTuc4hZi8Ey5hsVq3WJ
hbngQ/ver/1vPLGkDnypZFNw1FjMP7YJ9u9q9myZ0Zh/Ifiv55Qky+GYnwu+
cLDir80wYrbcdziPrkxYxOnXI3nng1d1L2uMQvNdwOLAZxc2DhCLjoGvHd0V
nDVIbD/yB01lBJ3X8R2B9WSDD9mapB3Eny/cBD4cVsKplse8EeB6vzbdaEXM
mwX+GHw06vBErOesn/B83jjL4ToL67kB3D/qu/dGHWLGUfDR6a8bdQwwfwY4
KzS5Qwbrxf0AfhCrU/J9PtZzXTOch1JjY1+sN+sIOKjhjpm8JfbDTbDz5ISt
rlaY/x3YSzs+jmOH+QfAl9NXPD7piPUMoeH5ZVT0nuANWM/r4N/+4z/2rcf8
YvDcjRvrZzlh/l6wnXP/EdoB8+u00JT5mPgkxf/3Qwr4sutaRz/MK3oN9v7Z
XF6A6y39A66YFeN5bwrm1/xFU8/LX6gYjcT81uDldtZflH+T9ZC8ANud3X0u
JZWY2QV2/z6uRBBBzFFvpanHc/uvWroT+61u/ff3yw8q+0yIBfvA2krGMwYV
idm/wX+P9G/bFzSD1FelDeZfgiTEdxkx3wIsY+vz6t0wYpEfmPuccusQ6ZL8
l8CPjOQopcPEvKlSmlr3InDBrms6pL7LwWapAeUhTsSSXeCO5cl1jFHEzItg
2apLZ5bnapP8JeDBULn609uJxZx2OL9eHhsT469F6usDtj5h5vBFnZh9Hmyx
JHVv+htNkr8IfGKEa7BJKDH/Jzh90vj9X2YTs7x+01RO9IGw/tUapL5x4Ip1
YbmPhxHzHoHjTURTGY9YJH8T+Ny2j3fHBRFLmB1QzwGfM+zFxH6xHf8+vzx1
qERVndT3IfiHybS4TQVqJH8DeM0jzaD1XGK2cSdNjX9+bWdxkSqp5wPwGNUf
0W+GEUsl4OnRnIcb36qQvPJd8DyjfmruyBRieyPwjJfWX9NCiHlu4CUHBm+P
2ULM/Ao2P3pvivx0Ys7obng+X6Z1PVeRWLAFfHz5k1+ho4jFUeDNLt1Hlo4h
5o74A/utq3/EI0Ni/hxw/NVXC/PMiEUbwZoLwpLsnYil4WDXKwn6G/Zg3kzw
huJzZYkniYUz/8L6/zk3xrCbWLIe/C1YhpunRn5fZhjYvXRf+v3VxJzb4JNR
3dyBg8R+78FLgi+O3HmdmLGuh6aK40q8JnNIPbnp4DzpAU5cJjG/Ejzt9+8H
z74Ti/rBX1XaIlU1yfrYH+qFeZi148emD8TCt+CmxPiW+3q4vj3gR9opodmW
xEztPpq6a5r0O287seAaOCbQX35zKbH4FXju1j2BH+qIGX/AcVpD8I+YrdFP
Uxfjb0jKVEl/ca3AMxPanCcsIZY+B49eFeZ7JpaY1Qk+yueePH0L+1NtAO4v
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
         "]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         Opacity[0.5]], 
        PointBox[CompressedData["
1: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
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.01]], 
        PointBox[{{3.7468224*^9, 11.270000457763672`}, {3.7469088*^9, 
         11.390000343322754`}, {3.7469952*^9, 11.529999732971191`}, {
         3.7470816*^9, 11.289999961853027`}, {3.7501056*^9, 
         9.289999961853027}, {3.7524384*^9, 7.940000057220459}, {3.752784*^9, 
         7.809999942779541}, {3.7545984*^9, 6.920000076293945}, {3.7608192*^9,
          9.109999656677246}}]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         Opacity[0.5]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.01]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         Opacity[0.5]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Thickness[Large]]}, {
        Directive[
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         PointSize[0.01]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.6608544*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        (Charting`convertGridLines[
         ((Transpose[{#, 
           Table[
            Directive[
             GrayLevel[0.4, 0.5], 
             AbsoluteThickness[1], 
             AbsoluteDashing[{1, 2}]], {
             Length[#]}]}]& )[
          Part[
           Select[
            Charting`DateTicksFunction[
            Automatic, DateTicksFormat -> {Automatic}][
             SlotSequence[1]], And[
             FreeQ[#, 
              Alternatives["", 
               Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
           1]]& )[
          SlotSequence[1]], {{3.6583704000000005`*^9, 
         3.7825704000000005`*^9}}, Automatic]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6608544*^9, 3.7800864*^9}, {0, 32.93000030517578}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "\"fit\"", "\"anomalies\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Opacity[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    Opacity[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"PointSize", "[", "0.01`", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "True", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7801276336462317`*^9, 3.780127663038609*^9}, {
   3.78012769927334*^9, 3.780127728179194*^9}, {3.780127758247302*^9, 
   3.7801278123346148`*^9}, {3.7801278682487288`*^9, 3.780127965907154*^9}, 
   3.780128030542684*^9, {3.780128383737688*^9, 3.780128391759304*^9}, 
   3.780130568543915*^9, 3.7801307066365757`*^9, 3.780138385325199*^9, 
   3.7803306687421083`*^9, 3.78033413457276*^9, 3.7803367834657393`*^9, 
   3.782464190958826*^9},
 CellLabel->"Out[7]=",
 CellID->1207380335]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analyze temperature time series", "Subsubsection",
 CellChangeTimes->{{3.7800943716278677`*^9, 3.7800943829681253`*^9}},
 CellLabel->"In[1]:=",
 CellID->1688565735],

Cell["Get temperature data:", "Text",
 CellChangeTimes->{{3.780095003555718*^9, 3.78009501092393*^9}},
 CellID->1772551697],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempData", "=", 
  RowBox[{"WeatherData", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Orlando\>\"", ",", "\"\<Florida\>\"", ",", "\"\<USA\>\""}], 
     "}"}], ",", "\"\<Temperature\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2016", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2019", ",", "1", ",", "1"}], "}"}], ",", "\"\<Day\>\""}], 
     "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.780094390388762*^9, 3.780094527535693*^9}, {
  3.7800946945092688`*^9, 3.780094695092086*^9}, {3.7801307107494793`*^9, 
  3.7801307112093077`*^9}},
 CellLabel->"In[1]:=",
 CellID->792686013],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1097", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{}, {{}, {}, {
                GrayLevel[0.5], 
                PointSize[0.125], 
                AbsoluteThickness[1.5], 
                StyleBox[
                 LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQEf7Fl11LwinD7aQwUcXn2Jtl8b9ArK53Bw3utt
q3f4M5Qv4CC+Otg/K43RAcIXcfi+f0F40nsYX8JBX1jtBbsrL5Qv45DtoBvW
xcwP5Ss4NFwMEp60GWafksOc359Whf/9BeWrOARoR64NnnwNyldzMHERNjG5
+no/hK/hIKRdVZBY8w3K13LIMJWbeIH9L5Sv4zDLV7txKvsXKF/PoWzi1MhL
TFwHIHwDB/cgkWNzBTmgfEOHQ2p/W4VucUL5Rg7G79Iu8t1mg/KNHcrd9WVC
ixmhfBOHrX+2zedZ8B9qvqnDPJ3j61kKGKDyZg5FiwwE9lTA7DN3qN+4vmmS
siiUb+HAtbzy3bJ4ISjf0oFzYux88dMCUL6VQ5zaARf5axJQvrWDmCZL36VN
UlC+jYPfBC+BlBJxKN/WoX+K14Vt8jJQvp3DgYTiXbPeiUD59g48fy+4bYoW
g/IdHL4IXz2XEgqVb3BwONa2ilHOixsq7+jg3yuU9L5AECrv6NBaqXjidDLM
vU4OTZOznfNi2KHyTg4WG+6H/hWBhY+zQ5qveFfD7s+Q8Glwdviw+EOTxY2j
0Ph0cVj18NqRC96XIfwGF4dlb2fpWLbB0perwzqzL3Nnz/wElXd1YCgOSXoi
cRUq7+ZgkHHN7dvHG1Dz3RxO/X996GnXG2h8uDusTTv5fqPlTai8u4O3Uoqa
3YkrUP0eDlu+ZYpfimJwgMh7OPwpNvZ9PpcDwmfwdPgt/Kj+tbigAwD0Q951

                  "]], FontFamily -> "Arial", StripOnInput -> False]}}, {}}, 
             AspectRatio -> 1, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, Background -> 
             GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
             DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
               Dynamic[
               3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{0., 50.}, {-7.030970816185017, 
              4.273359296964368}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{1, 1}, {1, 1}}, 
             Ticks -> {Automatic, Automatic}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2016\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"01 Jan 2019\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1097", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
              
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"LinearInterpolation\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {{
     StructuredArray[QuantityArray, {1097}, 
      StructuredArray`StructuredData[
      QuantityArray, {
       24.56, 19.72, 15.06, 13.28, 14.89, 15.56, 16.39, 16.44, 17.39, 19.89, 
        12.83, 8.39, 12.83, 11.61, 16.83, 16.67, 18.94, 12.06, 11.22, 7.44, 
        11, 14.72, 14.28, 6.22, 6.33, 13.67, 18, 18.22, 16.78, 13.06, 15.78, 
        21.67, 20.67, 22.28, 23.22, 16.5, 10.94, 12.5, 9.61, 15.56, 11.94, 
        7.39, 12.5, 16.94, 11.67, 15.17, 19.17, 16.5, 17.22, 15, 15.72, 16.11,
         19.11, 20.89, 21.44, 16.67, 12.56, 11.5, 12.22, 15.17, 20, 20.28, 
        17.67, 23.28, 15, 16.28, 14.89, 18.5, 21.22, 22.94, 22.61, 22.67, 
        24.28, 23.67, 24.67, 24.56, 24.67, 20.83, 24.67, 21.56, 20, 12.33, 
        16.22, 19, 20.5, 20.94, 22.94, 26.28, 24.72, 20.39, 22.94, 27.11, 
        27.22, 21.61, 17.72, 20.17, 20.56, 20.28, 21.83, 21.39, 20.11, 19.11, 
        19.44, 23.5, 23.89, 22.28, 22.22, 20.56, 18.56, 19.83, 19.06, 20.83, 
        22.22, 22.72, 24.39, 22.61, 21.22, 22.83, 23.89, 23.67, 25.17, 25.89, 
        24.28, 24.67, 27, 20.78, 21.22, 19.72, 21.11, 22.89, 22.78, 24.22, 
        24.11, 25.22, 26.78, 25.89, 23.28, 25.56, 25.61, 25.78, 25.56, 26, 
        26.56, 25.28, 24.56, 22.89, 25.17, 24.22, 24.44, 25.22, 23.78, 24.56, 
        26.5, 26.5, 26.94, 27.56, 27.33, 25, 25.5, 25.11, 24.83, 22.78, 25.17,
         25.67, 25.5, 28.44, 25.94, 27.78, 26.89, 28.22, 24.06, 24.83, 24.17, 
        25.11, 27.11, 28.11, 30, 29.72, 25.78, 27.94, 27.11, 27.56, 27.06, 
        24.83, 25, 28.17, 29.22, 31, 27.22, 28.56, 27.78, 27.33, 27.72, 27.22,
         27.06, 25.89, 27.28, 26.56, 25.94, 27.33, 27.22, 25.28, 27.11, 26.67,
         25.28, 25.5, 25.39, 27.11, 28.56, 30.5, 28.78, 27.83, 26.44, 28.83, 
        26.83, 27.5, 26.06, 24.94, 26.06, 25.28, 25.83, 26.44, 25.94, 26.83, 
        25.78, 25.78, 25, 26.44, 27.22, 25.72, 26.78, 26.78, 27.78, 29.33, 
        29.78, 29.56, 28.22, 27.17, 26.67, 27.33, 26.67, 26.22, 23.94, 24.94, 
        25.5, 26.11, 26.28, 27.61, 24.5, 25.11, 25.11, 26.78, 27.56, 28.39, 
        27.94, 27.83, 25, 24.89, 25.78, 24.78, 27.94, 26.94, 27.28, 27.11, 
        27.33, 27.61, 27.5, 27.94, 27.56, 25.5, 25.89, 24, 26.06, 24.67, 
        26.11, 22.94, 25.94, 24.89, 25, 26.22, 24.56, 25.11, 26.44, 22.39, 
        21.33, 22.22, 23, 24.28, 23.78, 24, 23.33, 22.89, 22.56, 22.67, 24.33,
         22.5, 18.33, 20.28, 18.78, 21.44, 21.44, 23.78, 23.89, 22.06, 21.78, 
        23.11, 24.22, 22.11, 21.78, 22.72, 21.22, 20, 20.11, 19.89, 20.44, 
        17.17, 18.72, 17.67, 20.56, 18.33, 16.11, 16.5, 17.72, 19.83, 19.72, 
        12.39, 12.22, 16.39, 19.28, 20, 20.56, 18.89, 19.33, 19.89, 22.11, 
        23.5, 19.72, 15.39, 17.67, 19.83, 24.67, 20.94, 17.89, 14.39, 14.39, 
        14.22, 21.83, 21.44, 21.39, 21.67, 15.22, 17.5, 22.11, 23.89, 22.94, 
        17.39, 12.5, 16.28, 19.17, 19.83, 20.94, 20.83, 20.94, 20.17, 18.72, 
        10, 19.17, 22.11, 24.39, 22.83, 18.78, 18.33, 17.39, 6.61, 5.89, 11.5,
         15.44, 16, 18.61, 19.11, 18.44, 17.17, 16.11, 19.44, 20.61, 19.5, 
        21.5, 21.89, 20.94, 16.61, 14.28, 19.06, 21.5, 13.5, 10.28, 10, 10.06,
         15.72, 16.72, 19, 18.72, 14.61, 17.06, 16.61, 20.33, 22.78, 17.44, 
        13.78, 18.44, 19.67, 17.56, 21.28, 18.83, 14.61, 15.94, 20.33, 17.94, 
        18.94, 20.06, 17.78, 20.28, 19.94, 20.44, 15, 21.22, 23.72, 22.06, 
        18.17, 15.28, 17.11, 17.06, 16.78, 19.17, 22.06, 21.28, 20.56, 20.11, 
        18.39, 19.44, 12.78, 10, 10, 13.67, 18, 15.11, 16.89, 21.11, 22.22, 
        19, 19, 18.78, 19.67, 19.56, 23, 23.5, 23.22, 24.61, 22.56, 23.78, 
        26.67, 21.22, 26.11, 18.78, 17.11, 16.67, 19.22, 18.89, 20.28, 21.22, 
        20.56, 23.11, 22.44, 22.83, 23.28, 23.61, 23.33, 23.22, 24.22, 25.5, 
        24.22, 21.28, 21.56, 25.94, 26.22, 25.22, 24.33, 26, 24.22, 22.33, 23,
         26.11, 20, 18.78, 23.56, 22.33, 23.44, 26.5, 26.78, 25.78, 21.89, 
        23.61, 23.67, 24.44, 24.72, 25, 26, 25.11, 25.44, 23, 26.56, 23.5, 
        22.89, 22.89, 25.61, 27.5, 28.11, 24.11, 25.83, 24.22, 25.22, 24.22, 
        24.22, 24.83, 23.33, 23.94, 23.33, 24.61, 24.56, 24.11, 24.5, 24.89, 
        23.33, 23.11, 26.28, 26.89, 25.78, 27, 26.11, 25.78, 26.22, 27.44, 
        27.89, 27.17, 25.72, 23.67, 26.67, 27.56, 27.33, 24.44, 27.06, 24.44, 
        24.89, 27.33, 27.11, 27.33, 24.22, 26.33, 24.22, 26.78, 24.28, 27.22, 
        26.5, 26.94, 27.33, 23.28, 28.11, 26.67, 27.17, 26.22, 26.44, 28.33, 
        30, 30.89, 27.78, 26.06, 26.89, 27.94, 24.94, 27.56, 26.22, 26.72, 
        25.11, 28, 26.22, 27.67, 27.67, 28.89, 27.89, 27.89, 26.78, 23.94, 
        26.89, 27.61, 29.22, 25.89, 25.11, 25.33, 28, 26.56, 26.67, 27.22, 
        26.44, 26.56, 25.5, 25.94, 25.56, 24.28, 25.89, 27.44, 28.17, 25.5, 
        24.22, 26.11, 25.33, 26.78, 28.06, 27, 25.06, 26.56, 26, 23.67, 26.22,
         26.89, 23.94, 26.11, 26.56, 26.39, 26.89, 27.44, 26.83, 25.56, 24.78,
         25.5, 26.39, 25.83, 26.11, 26.5, 26.39, 27.06, 26.17, 24.06, 24.67, 
        25.61, 25.39, 26.39, 28.06, 28.44, 27.56, 28.22, 28.28, 26.78, 27.06, 
        26.67, 27.5, 26.72, 25.22, 24.56, 26.78, 25.56, 25.39, 27.06, 26.33, 
        24.94, 21.72, 18.94, 20.33, 21.89, 20.11, 15.67, 16.67, 20.44, 19.67, 
        21.44, 21.56, 21.39, 25.5, 24.44, 21.06, 21.56, 23.06, 18.44, 22.39, 
        22.33, 20.39, 18.06, 17.72, 16.67, 17.67, 18.94, 16.89, 18.17, 19.22, 
        21.83, 20.67, 14.94, 16.17, 18.28, 18, 21.11, 20.89, 20.94, 19.06, 20,
         19.44, 19.67, 21.22, 21.06, 19.33, 24.39, 8.78, 9.94, 10.44, 12.89, 
        10, 17.11, 17.72, 15, 18.78, 21.83, 22.06, 21.39, 19.28, 18.89, 19.44,
         21.78, 13.39, 16.89, 16.67, 15.06, 10.83, 12.06, 13.22, 9.28, 9.06, 
        5.28, 6.44, 8.5, 10.39, 11.78, 17.06, 19.72, 19.67, 20.61, 19.67, 
        9.06, 9.72, 9.28, 12.94, 7.11, 4.72, 10.44, 15.17, 16.22, 21.5, 18.5, 
        14.78, 13.06, 16.83, 19.17, 20.83, 15.83, 9.17, 15.28, 16.94, 15.39, 
        16.78, 19.67, 13.06, 18.5, 21.89, 17.11, 20.94, 22.11, 24.44, 23.39, 
        19.28, 16.89, 21.67, 21.72, 21.67, 20.17, 22.11, 23.39, 21.5, 21.39, 
        19.83, 21.61, 22.94, 24.89, 18.61, 24.06, 24.06, 18.5, 15.44, 12.61, 
        16.22, 20.44, 15, 11.22, 10.94, 19.11, 22.78, 13.56, 12.78, 13.89, 
        13.67, 16.78, 20.83, 21.78, 18.78, 19.44, 14.89, 14.28, 14.22, 19, 
        22.56, 19.28, 18.61, 19.72, 22.94, 22.67, 21.33, 20.78, 22.5, 22.56, 
        23.56, 26.78, 22.72, 22.22, 24.22, 22.28, 19.28, 17.22, 20.28, 20.44, 
        24.33, 19.89, 16.39, 20.56, 23.06, 22.56, 20.78, 22.44, 23.61, 23.67, 
        23.83, 21.39, 21.5, 22.06, 22.11, 21.17, 23, 20.44, 23.61, 21.78, 
        22.44, 24, 24, 22.78, 21.94, 23.22, 23.33, 26.11, 23.06, 21.67, 22, 
        21.44, 22.61, 22.28, 23.67, 22.78, 23.89, 23.94, 23.06, 25.44, 24.94, 
        24.17, 22.5, 25.89, 25.28, 24.44, 23.67, 26.44, 28.17, 26.78, 26, 
        28.06, 27.78, 25.44, 22.5, 22.67, 27.89, 26.22, 26.06, 26.44, 27, 
        24.44, 26.83, 24.61, 26.22, 28.33, 27.61, 27.06, 27.22, 24.78, 26.11, 
        25.56, 26.78, 26.83, 27.33, 26.39, 24.39, 26.56, 28.5, 28.61, 27.56, 
        25.89, 23.78, 23.89, 27.28, 26.22, 28.56, 27.44, 28.94, 27.89, 27.67, 
        29.44, 29.06, 29.56, 27.67, 26.72, 27.22, 29.33, 28.39, 26.5, 28.83, 
        29, 27.61, 28.44, 25, 24.89, 26.94, 25.83, 27.39, 27.56, 28.28, 27, 
        29, 28.83, 27.33, 27.89, 25.17, 26.78, 27.33, 27.94, 27.78, 27.94, 
        28.44, 28.89, 29.06, 29, 27.94, 24.06, 27.94, 24.89, 27.17, 27.06, 
        26.39, 28, 28, 25.39, 26.56, 24.28, 28.78, 28.33, 27.17, 26.17, 25.33,
         27.22, 27.39, 27.11, 26.39, 27.06, 27.33, 27.61, 27.89, 29.39, 28.67,
         29.33, 28.67, 29.5, 28.33, 28.89, 29.06, 27.56, 26.56, 26.28, 26.22, 
        26.33, 26.5, 27.61, 27.33, 28.61, 28.28, 27.83, 27.61, 27.17, 26.5, 
        26.83, 27, 26.78, 26.06, 26.67, 27.83, 28.72, 27.33, 26.06, 23.22, 
        27.44, 27.61, 27.67, 25.22, 25.72, 25, 26, 20.56, 22, 24.28, 22.5, 
        24.83, 21.28, 17.28, 20.28, 20.11, 21.67, 22.44, 23.22, 20.17, 17.72, 
        22.33, 23.33, 25.28, 25.61, 23.61, 24.78, 20, 22.72, 23.44, 24.94, 
        21.5, 14.33, 11.56, 16.72, 19.89, 20.67, 18.72, 15.83, 18.11, 19.11, 
        21.44, 21.5, 17.22, 9, 9.56, 15, 20.67, 24.11, 24.83, 21.22, 15.67, 
        9.33, 12.72, 15.06, 20.17, 15.44, 9.17, 8.11, 12.72, 19.5, 20.06, 
        16.33, 13.33, 14.06, 15.94, 16.61, 17.11, 11.61, 12.06, 10, 15.83, 
        15.06, 17.44, 22.17, 22.61, 22.83, 21, 22.56}, "DegreesCelsius", {{
       1}}]]}, {
     TemporalData`DateSpecification[{2016, 1, 1, 0, 0, 0.}, {
      2019, 1, 1, 0, 0, 0.}, {1, "Day"}]}, 1, {"Continuous", 1}, {
    "Discrete", 1}, 1, {
    ValueDimensions -> 1, DateFunction -> Automatic, 
     ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}}}, True, 
   12.],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7800944736171923`*^9, 3.7800944957287073`*^9}, 
   3.780094529285877*^9, 3.780096555096395*^9, 3.780096648014049*^9, 
   3.780096769152994*^9, 3.780125755217764*^9, 3.780130582171472*^9, {
   3.780130708523199*^9, 3.78013071221698*^9}, 3.780130973507595*^9, 
   3.7801383977278147`*^9, 3.7803306819386463`*^9, 3.780334147178214*^9, 
   3.780336796507433*^9, 3.782464203000319*^9},
 CellLabel->"Out[1]=",
 CellID->1504749873]
}, Open  ]],

Cell["Convert the time series into a list of numeric pairs:", "Text",
 CellChangeTimes->{{3.7801309056930437`*^9, 3.7801309441843643`*^9}},
 CellID->104364058],

Cell[BoxData[
 RowBox[{
  RowBox[{"tempData", "=", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"tempData", "[", "\"\<Path\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780130945545966*^9, 3.7801309619403887`*^9}},
 CellLabel->"In[2]:=",
 CellID->1809220094],

Cell["Compute Quantile regression fits:", "Text",
 CellChangeTimes->{{3.7800950485228453`*^9, 3.780095060493229*^9}, 
   3.7803368576680727`*^9, {3.78033708535389*^9, 3.780337086422965*^9}, {
   3.782465314519517*^9, 3.7824653166456127`*^9}},
 CellID->815622139],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probs", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0.1", ",", "0.9", ",", "0.1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", "0.99"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"tempData", ",", "10", ",", "probs"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.780094470757595*^9, 3.780094472533251*^9}, {
  3.780094531395938*^9, 3.780094620491064*^9}, {3.78009469216149*^9, 
  3.7800947052302933`*^9}, {3.7800951307657347`*^9, 3.780095186095706*^9}, {
  3.780095447036269*^9, 3.780095453616116*^9}, {3.7801307249585323`*^9, 
  3.780130728265286*^9}},
 CellLabel->"In[3]:=",
 CellID->367777530],

Cell["Plot the data and the regression quantiles:", "Text",
 CellChangeTimes->{{3.7800950639467907`*^9, 3.780095075175406*^9}},
 CellID->2065401284],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tempData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"#1", "/@", 
            RowBox[{"tempData", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
         "]"}], "&"}], ")"}], "/@", "qFuncs"}], ",", "tempData"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"True", ",", 
        RowBox[{"Length", "[", "probs", "]"}]}], "]"}], ",", "False"}], 
     "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{"probs", ",", "\"\<temperature data\>\""}], "]"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    FractionBox["1", "4"]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780094609702677*^9, 3.780094665201042*^9}, {
   3.7800947117440567`*^9, 3.780094715130439*^9}, {3.7800947538782053`*^9, 
   3.78009475632845*^9}, {3.7800948944431963`*^9, 3.780094984205509*^9}, {
   3.78009509621741*^9, 3.780095119783827*^9}, {3.780095387076861*^9, 
   3.78009539679282*^9}, 3.780096511251883*^9, {3.780125765357318*^9, 
   3.780125777392308*^9}, {3.7801307357179117`*^9, 3.780130744421793*^9}, {
   3.780130776881557*^9, 3.780130836702449*^9}, {3.780130968577423*^9, 
   3.7801309696246853`*^9}, 3.780330526391445*^9},
 CellLabel->"In[5]:=",
 CellID->1117086007],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQdcI+edN247dsrl/rnLvUneS3KXu+TSL7lLeeNdl7g7thPbSVzWXnt3
vbDsUpfeYekd0ZtAdIRANNE7AgmBqKL3IjoIEJJAQhKo/B8x2mEYCYy3wbLP
9/N8dqVHw2hmNM9vft9f/aGh1Xs3nnjsscfsvgr+ec/A6WVbWwOX9/8ZvPnQ
0s7U2PK60VuW9teNr9ueN/wSmOx4/LHHvJ587DHNazUEBAQEBAQEBAQEBAQE
BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE
BAQExKOEGxAQEBAQEBAQEBAQEKcbJ02b7hnu/lzO0tWAgIC4S0CBAAEBgQIK
BAgICBR3KRDOkjyB/AsCAuIeAgoECAgIFFAgQEBAoID8CwXkXxAQEPcQUCBA
QECggAIBAgICBeRfKCD/goCAuIeAAgECAgIFFAgQEBAoIP9CcZfnUlpaepau
BgQExN0ACgQICAgUUCBAQECguHuBcJbkyV3WFYHSFQICAgUUCBAQECigQICA
gEBxBwIB1j+8r3uAgIA4M4ACAQICAgUUCBAQECig/wsF5F8QEBD3EFAgQEBA
oIACAQICAgXkXygg/4KAgLiHgAIBAgICBRQIEBAQKCD/QgH5FwQExD0EFAgQ
EBAooECAgIBAAfkXClj/EAIC4l4BCgQICAgUUCBAQECggPUPsYD8C0IXKrVa
IlWurMsn57f7xsVtA6KmbkENe6O8eZ3WuFbYsJZfvwpGQf1qEX2thLFe2cKv
b99g9Qq7hkWlzLm69gW+aGdXoTrp84B40IACAQICAgUUCBAQECgg/8ICxh8+
4pDKlDNLUsCwShnrqSXLhKw517hp8+DxG/5jdzCMfDlXvCvAMPLjgLc24ZNe
STNROQtZlStVrfzukc3ZZZlMrjzpk4a4j4ACAQLFzq5qTbAzOb/NGd1i9gir
W/m0xjVq7WpG+UpKyTKJtpS0N0jFS0D4ZFas5NTwiuhrlS18eudGXt1MKXNu
dlkqEitU0Jbz0AIKBAgICBSQf6G4+7r6Z+lqnHkALWZDtAt0oeKmtVjqgnPM
1J3xrGPyr8OGU/RUJGU+v36V3S+a58kUSqhdnR1AgfBoAizilXU5kC2APQEy
FZwx5xB15+IFJ0lMA8eBsArJnEstXS5jrrcPbs4sSaUyaMl5CAAFAgQEBIqH
t/8Xj8dLSkpyd3e3sLDw9PSkUCgikQi3jVQqzc3N9fb2tra2joiI6OrqOmKH
UDaeeQC9aHZZVte+kVCwaB/5xTQi4wCND8s9ftovZSY0ay4qZyE2bwHsh1i4
lFi0RCxcjMtfjM5dAB8Fpc96JXGdYyZNg3r3VKbR43+LWdC4f+psdhUP0LEV
vhySMQiI0w+wTnl8eWu/iFLNC0ybtQi5Q6f5XVpygFAqaFhtGxAtrsqhIQcC
AgLiDOOkOMvMzIy5ubmxsTFgXkQi0cPDAxyJnZ0dloKB115eXmDezc0tMjIS
0DTwury8/LB9Qv51VrEm2GF0CwFXsg6b/FxtB6gxYeT5zIqVyhY+0GRGZyQr
63KJ9A4zuHYVKsHm7tyKrH9CDI6huGktuXgpOGPOPvJzj2QU6F0WIb3x+QuA
MALaCBUqCIjTA5VKPc+TNXQI4vIX7SI+X7CgA2zsmcgNyZyLpS6QipeAqAGs
LaeGl1+/mle/Sq1bBa+zKjVBifH5i0AW+aVwbcL7TQN7v5Al52bIBJAzYG+d
w5t80S4UHhAQEBBnCSfFWYKCggD5am1tRd6qVCoqlQoOJiMjA90mJSUFzOTn
5yNvBQKBo6Mj+KvZ2Vm9+7z7+hsAd7MHiHsIoB1NLUgL6WtA1TlCS7EIGQeK
EFB7WvpEM8tS+c6D01Okck26GXtABA4yOnfB6WAApK7RG5BHQCEBiQN08oEd
JMQdAwqEM4lNiaJtQATI0eeaUCxDJ4LSZzPKNfmegARxF6Ui8e7dZG8hGWTj
s9tAaFSw+GDPhKw5x+hj+fGdoqcA1wPSY2kNetVPBlAgQEBAoLh7gXAi/Esq
lYLv9fHxwU5KJBIw6eXlhb41NTW1t7dXYR54bW1tYBsymax3t5B/nQGAH3ty
fju3lneEWuISO51Wuszq3VNFTpMuAlS7wSkx0KxiqQvmIb1HBB3dInLz6lZH
uBJYWfHUAgqEs4TldXl1Kx/wKePDOY5N+CRYuWXN6/0T4o3NB+dyku0oZ5dl
7H5RXv1qVM7C5xJDu8jJJNpSc4+QL9p9UMcIAQUCBATEPh5S/sXj8YKCgoqL
i7GTMpnM2NjY2dkZeTs4OIhzhwGIxWITExNPT0+9u4Xxhw81Vjd2ShjrrnHT
h8X8pJQst/SJNh4SlUOpUjVxFnNquRnly4edlMbGTpgg0ZY6hzdhKUUIiHuO
xVU5kCpH+NCdY6bSSjWChbfxAH3nnweReLdvXExrXAvPngci4ggu5p7Azanh
DUyKH6TrHwICAgLiLnF6OEtdXR04mPT0dOQti8UCb+vr63GbAYJmbW2tdw+n
51wgjo+dXRV7QETImtOrXQDFCSghUwvS++HnUqlUPWM8MFT334sGaCPQ8QDV
OizTxCxoPC5vsW1ABCuhQUDcJdYEO5UtfK8k/bTrZshEbN5CU7dgdeO+RwLf
vZABf7e4KgNHm1y85Hh4GUbz4PEY6gKDIxRsPRwWKggICIhHGSfOWdhsdmxs
rKenJziS0NBQsViMzJeXl4MZ8Clue19fXzAvl8t1dwXmcd5AXf8gnDk9M9TC
quBEtk24Hj4CaFd58/rKuvy+Hk9iVhkSItg7zntg5w60qZklKYHU4hDedxgR
IxYucka3aMVlp+r3gjNw5pTPSGVKVq8w9BBjjlXIEKWaNzglRoJ+H8wRAuaF
CJkkctnd77mktDQnvwqQrCTakl7JiQzH8D5AP5fW5PfvvOAMnIEz93UGqAqF
tApqYSVYyEBnmJjbHp6WJGfTSWR6z9gWMnrHt5KzG1Ip9ZPz2/M82ZpgR7yt
KCmFmsPDMXPi/CszM9PY2BgcBvg3Jydne3sbmc/NzQWTPT09uO0JBAKYX19f
192Vbml93QL7p+fKP7IzQPUBkiQ+f1G3GtjN4CHAyBZ4sgdzPCj/KmocV6lU
D/5qiMS7TI4wKmfBJEAfEQsc9o3vGJuVcEa19vNT8gvCGThzqmYAK0nPqU8t
XdZbN94peiqvbjWTWldyEkd4b/kXdgaoZ9wlaVhyi1NE72FEzIPILW5aI+fV
nMi5wxk4A2eOmKEVly+vywGrYvUKy5jr/gntnrHdQemz7vHT1mGTR2Sqfu4w
DxoGOwnOmCMWLlJrVyNTWYlZ9JllqUSqPCXn/kjNHMZNTpx/ASiVyrW1NaT+
YUBAABKnUVZWBt62tbXhNkb8XxKJRHc/sP7GKQf4YTmjW0C86IqLGOpC37hY
+WBLtIM7DTAvrAvsbncokyqWZneGe2TtjVJ66XZFroSWLskjifOSwJAUpYMZ
aWOZrIOxM9qnWF1WKxTIH27LlG0Dori8RZNAvAKJ1lFs7lm8+yOEOD6gQDj9
2JIoato2bhH1xBnaRkzm1PA0ocsneoRAyADZAsZ9DXIWbyvaBzeTaEvWYfqT
xYAyBojY4qrs8/cFcQigQIC4Y+wqVAs8WdfwZlnzOtLS/RgtbO7LsIuYDMmc
y6pcaegQjM5IJFLFSV+bhxV3LxBOA/9CER4eDo5ncnISvGYwGOB1Q0MDbhsX
Fxdzc3O9fw7516kF4FUdQ5u6WfBARwJawQmW1ECt01+Yf6lUCt6irKNJUpi6
Ge254WKwfu2N1Q+f/mLjo/N8878JA6zFWdFSRqVicWZbqkkTi6TM6/IvQ192
BGWuc3gTlkx8MIAC4dQCLABArIAaYxaEt1eAGRJtaWDyQRtzTgnAWQOdChBP
XDsMdHglcStYfN79T3w7e4ACAeKYUKk0/dwLGmaJhZNx+QvuCVxjfSEuX2iY
+Q3d9Omz9uFY+3TZe7XZe7WDf229Oqy8uy18+038Ru54zy6x04lFS7VsfmXL
fNfIygNIhz8beEj5F4fDSU9P53K5uPmCggJwPF1dXeB1f38/eJ2dnY3dQCqV
mpqauru7693tqeKSEAjAUu4c2vTQMVADNQAQjZ2Tbiv6hazTqm2xvKdVnEsU
+pivXX31C7OtYwywW2GgjaQkiz88Wsfm+yZzjXy7DbwZ2FL2gLTm1a+u8PWk
QEJAnG0AicHqFfqlzOhqEWCysUsAzbkIgDjjLkmL6GtA99OrdAWmzdI7BZsS
eLkgIO4Wqr2aPx1Dm3l1q4SsWdOgXkMfNuapPWrkywFDbwd2wJ7cbjUGORfF
26VmWYbTzDxqb1izrl3vvvrp0OW/TX/y+uJHf+R9eP5ozYF34dzSR89zL742
cukdzmcftxheqzW2LTL3SreOjnIg+7hW2nh36pMDyIF1g3/RA/ZMHCplrI/N
bkNL7/3GiXCW5uZm8L24+vMAcXFxYH5+fh68lsvlVlZWaDl6BN3d3WADQNP0
7hbyr1MFsHQHJsU+JLymFJo5B+ZP+cJGq5Yp5TJ5f4eYHLPh/Nnqhc+RgehY
v/YG3+ajDRcDgZeJ0N9KM3wtBB43wAzf+sK64evH3ElreBQiEvW2EgvPnu8e
2VQ8knZ+iEcNwq3d4qY13fKhN0MnMitWZpalJ32A9wX3oHyiWj23IgNEzCVW
TxcMk8DxWOpC59DmiZvCICAeLsh2lCNcSQWLH0NdsMXIJTRkBX1qozM3AzoC
/OiJ9ilF5t6NRua9Vy7MfvwSoE6HqgEXzvGuvrRs/sa87Z+5zm9Perwz7v3O
mO+7owF/HQt8fyL4wlTwp7PBny36XeV5G667XT1auwA8bvDye03XzfNuBsTa
Z3j6MG8cPFScmqGpE0tdaOwSrAuhu/y+4EQ4i0gkMjU1BfRqcXE/pYXD4Rgb
G7u5uSmV2gxBCoUCDq+2thZ5K5FIPD09wTY8nv5QMci/Tg+AOqRbUj6CMj8+
u33Sh3YscDiTiCxiGhsc5a669CKgVJtEf0lJlqyNvssdU24K1cfRlMBdvs7b
GemV0ku30iOEPubrhn/S3X+T4SXkMCiB8XlkRmT2jG4Yg0PUVBlzXSSGRach
zibmebKUkmXd1EjPRC7QDc52v4Y7D5DWgcYjtijNq1u1j9QTmmhFmMiqXJmc
34Y0DALiMIi3Fb1jW2ARBaTO6kokHP8yCWy7Fd1NjqeneKciMwzDTw91YF15
Yd76zRG319i+f6gM+I/soK8nRT4VE/d4dPxjxx+xxKcys39SXvZ2e43VdHUI
v5S4lRklDLBeN3lb75fSr32GZV7XfFsRb53uSXklaToBzSydcDrtGcNJcZb6
+nrw1SYmJgQCISkpyc/PD7y9efMmNihRIBA4ODgAwhUeHp6RkeHk5AS2oVKp
h+0T8q/TAMHWbmrpMq50T2jmHHiyn/ShfT6UG2vbFbkCjxtNhpf1C8wL5wHh
AoxJxqpRrMwfi2odEyqVYnVJyqzcTAzgm/1VK5M/PAcOAAzwAolOnE+ILqKN
6LYBMg0cJxUvTS2cTS8AxCMIsLQGp8Th2fO4W904YCw+f3GEK3kUNIF7yL9Q
KFXq4WlJetmyZaieYh3u8dOVLXwhbCIGAbGHbZmyd3yLWreqG8yDGzbhk5GU
+eK6hbxMelpQapP5DeTBjX2Og9FkeAmM5euvT7v9pT3guaKgfyVFPBUdh3Co
x30ingYDvDiEZIENzjmFXAL/Hr7N/khM+WZp+Z+7e0JWZ5iybpY4L0noY7F2
6QWsgtGkGZfAixmDt1sjU3JyBpxiBg6LlnSOmcqvX+UuQiJ2D3CCnGVgYCAy
MtLW1tbc3NzHx4dMJguFQtw2gIKlpqba2dmZmZl5e3szGIwjdgjrb5wsdhWq
ajb/ZsiBZ7pv8gx41p/ypaoSb0rraAJPk9XbkQA44rPheFlMidsZ6FTJH1AB
MQVvcbsqT+hjrj800fGz9ryGSLKeSpIBqbNtAyIYuX33gALhpKBQanqye+to
O1aECfDoXxOczWAYvaGG97V84s6uqnNoMzp3QderDmbAfPcIrPazDygQHh0o
larJ+e1Sxnpwxpze7jDa8N0AjYaTU8MDz9ylmdU2Ko3l48P7+Fk0cAVnv122
frfUzwL5yDfyD7p0CTCvg58+npLxvezcXxUWv1hS/mZF9XvBJH/UXUUk38gv
ejaL8jNS6reO4x0jpX27jn51mluyK9vcGe0T5yZuOF/Fu+E+PJdl7oTsP69i
JLV02e6QOo3uCdwSxjrvEc5Df0jrb9wn3GVdfShd7wYjXMmtg4nejtFTQIk6
1aV0FAp5V7MozHn14nP6YgtfEIW7SJmVStHG8Xanksk2+PzBufm6sYmcvoHY
9k6/3DJCdnFgI9Mqq9gPvGhtc+viBPYPxk9M5i0uMYWiSYXyc8SXhhvSy4Q+
FnqLdXBTSbllM7p2bMeoqQoWX7wNk+vvHFAgPHjIdpQNHQLdTCUwU9e+IZXD
UMP7ApFYU8Zfr3nfLmIScF60lfOjDCgQzjz4ol1mj5BYuGhF0N/HAQk1CSPP
FzetDU9LZHKlUrixXZ0v8DDGxswc4F83/zoV/Elj7LMJsU8BPuUUckkv/yKS
/r+8/GdImQ7IpxFR+fRYWl1geblrYZF1Tp5JJsUwNdKUjA0XjL6ZnW9OLraj
VnrQ6kPLmxLzmrKJ9CKfqtLr+YUvJKZ88zBXWgLpH2sbrszN16pUCqVgXVpb
JPAyxaU8aA7e6LIo0k0+2j+9KC1sOLSST1D6bHOPEIkDv/t81YcIdyAQTmH/
r3uFs3QuDxE2JYrUkmXsejQLGi9lrst3Tu8CVPAWxZS49Rt/1kNqrry8Gecj
72apdo5SOVQqJWBPk1MF7Z1e1bUf5+T/LjHlnw+zZTmHfnqYySsm4Ym0zB8U
l73R3GI3MpoB6BvYs95vVG6sSWjpfMv38cf80fm1SO/GugndLkjmwePkqpWV
dag7QZx2SKTKChbfVqe8RkDabOfw5qNQY+YE+RcC1V7eLqWap7eJGNCyWL1C
QJBP5NggIO4TlErV+Nx2IX3NK+nQ8EKg0hCy5sqY62DLnV0lWKqcwXkpo0ro
bwWevzjmogmbufg8w9u1NNopL/ln+lUCwifxSV+n5j5bnne9Ji2wMjitwJKc
fTUFDG9rKrJNpJl2Bh0o/3J2LND9FDdirHO0brJk25T0f9frEUvL+o+2Dm92
/whndKWbM9meXcB00Tq/yOYOSPAPGAJXQxm7QaVQNHQsJhZO3krQU8nHImQ8
vWy5mj1/skLs4cJZ4ixn6VweCoDndduAyCb8gMqUULB4eqvlKBSyDobQ76Z+
b1eEm7yLqd49cPBYe45MJpiZrWS3u9NKXyUm/9ORvn5NFDdq6TqCf+kOsOfi
sj91dPktr7CVSp0sDJVqZ7BbRHBa1SmaJAiy628eiqEuGOvIRjA5Ngsz6yFO
I0RiBVB+dH244KYF2s6jc9M+mE7Nx4EmLnF4M4IyrytJwM9ErlyZXYZ9nCEe
bmzLlB1Dm8nFSzgFBjt8SDP59auDU2K0OqhKqcjLY+BiC5GUrkbDSwwzI2ag
bx/5Bjnjx3of7n5Rz2g5kX9CjlGyXt6Ekiy9DAtMfi7z0rufHOuwgmizrLT/
d5iVGBk9YyvdrJ62mPjVSy/iFAymnbV2m3He3IqsoH7VQScPHa090jm8crK/
70OBs8RZztK5nH4INnejcxewS881bhpIqpM+rn1gqZNyUyApTF03eUeXeQlu
XZc2lqmk+suDdI8sIPIkJu3icdJdkRpEBOLbyF8Fk7yTc62qaz9Oodom51iW
VvylsPilbOqvk9P/NSbhieNwscqaD0ZGM6QyPu7AlPxVcXbc2pWXcacj9LNc
4gxSqldMAntwKbT+qbPgifNo9qWFOIXY2Nyl1q6aBx8oI2YSMAaUogXeQ67h
q5RA5igWZ3ZG++TdLBmzSlpbtF1KBlJInEsUZ0VvpUdspRK2kkM0A7xIjwCT
4COwwXZZNthYxqqRc1p2xvoVC1ywK/UhbvH7inXhTilzXV/h+lGX2IGsyult
2G0N4qECX7RL7xSEZ88fVr0Q0DFS8VJrvwhXUlgTf1KUzrS13g/Pu82/GMaG
yExsykX9iVcp381Lfi/GJyzSPB0hUIAcgaGXNxXeJKd6FVAIBZ3JlKHcjMnS
lLka4nJTHI8VxyxPY1VlbXAyNvry+H0Vq71NS91dM63D4w3D/TROexqLTqgu
cy7IuZZ2BFnLMooke19LTfy5Xv5Fb29Czlcl296uKeBbfahbjbkjtwiJDgKq
BFD5kmhLpvsXc1RTb9+PY0UYz6tfPb2m+NOBs8RZztK5nGYA9R1IJ2yAtHHA
GK1x7bR1kEHjedgRUWufPI8vYWH0hpgco1ia0/u3ku2VoeHk8qq/BcS8cITr
ipj8jQLa8/Qm456+iGluyfp6v1wuAnSPM7yMWpMOOzxACsWSpaVl1vBIGqvV
nlb6Gint24cRsZiEL9FKXx8cJuGImEom3a7M1a0uy/IPRA7AitCnm0oDHkAw
jgjiBLEm2MmqXDELOqACgbdg8uF6ZKskW7tTI7KWWklxJmBSwmC7DcfLmsDm
j59BDeNgoJE8dz4unAcia8P+E2GAtabhRR5J2lS+M9itWF1WK+/vWka0LGLh
IqploVZu08Ce8OyxGva88qR9dhAQhwHcmktr8goWX2/fdmT4JnOJhRNVrfP4
fpoqpbyXrQk42YszRDmIJjzvwnlhsO1ieWQaxV6vkpBM+kFO1MWsm97ZBslY
bxT2dbF1MjMooi/RaSbnAot8oTvvWRX9cXXjY7qjp0BLlHoL/4D/tPkb6o5f
qvv/rB63UC/EqPi1W4uT85yZ/lJOFqEm3iFfL9HLMPVL9X89NuGr4LB9I59G
hk/EOSLZZHml7fbpq+Q9rUh22J40+zTL3LHJ8PKayTvSOppaoaWo4m0FUCo8
E/EZEEAzTChYhGWZD8NZ4iyw/uEDwKZYARYUdokBmTZ/Co3VKmVnBX0/Hhuj
CAl9zGWt9aoduW6iKCBEfQMxBbQXfCPP3U5cfXxPOv0BcX7FEp/ML3qWXm/Z
2ZTUX0fvLehkk5j0sJoqz+ISh7x8c7Ku6QnM5Jtl0WxzKz1odEI1O5nZT+NM
NY+vjq/ItnBySbW1NTc2kdPIMM2i/OwgBdOWpY0lfrm86q+T00VKJUZNVexK
6WV887/pmqo620f0lpKzCZ8sZaxvSaD5+lBAgXA/wNvYSS9bxpUUuxmiKWx4
ZzXPH2TGt0q8uTPYtV1J3UwKFHjcAIRIt3oYlnAdVgbtHo+Lz/GtL4hC7Lcy
o9rzyzobO5Tbkvtx+psSTZmOW0Quyr8MfJjaEOvYAQZHeLZ7sUGB8BBBYwUd
49W0zdPoqx46mdGowSc6d4HJEW5s7upmX4LFvl1O4Vu8h1vgYC2zXJxEJWl9
rYGZlJ8iT2eskpCY+J0swnsZZp6AdulGA8bczEz3iEFed1H/eCx6dbwN8IP1
rZ4aY+RP2jqGuK2TrSRGkXUOjoWRr8WlOF2Mj/5W9MHqi5U1HwhFk+j13J0c
AhIGJ9D4Fn+XNVejrnkgf8dntxOLlnQrRgalz/aObZ0xIw2sf4gF5F/3G/0T
YmwxUuOAscoW/mmLZwPEStpQAhQSbA15VG5wWvuRzbDyVi4XDY2kFJW8gsQE
6tSAfSwz69dlFKMqYniFJzX3evpxoq+POQqtKICU9RZ2LfTM4ujYlnhhaDi5
rPKduMSv6B4SKe07LWwnoWhq/w8UCmlTBfK82D/3i8+Ls6KV4s3haUkEBd9K
ySJkPKeGd1YLet8loEC4t1hZl6eWLONKnVsRJkoY63dTqPO+lq1QSbbk/R2S
ojRRiAPf7N3PpUI4/QR922xzc8PuosDdSOhvBXYlCncRRbqJom4Jo261hke1
EiKE4C3BSRhgLfA2E7gabth/CnSbNYPXsGmen+tNw3473/xvQF8S55E6K+ic
7ol7SE6VKlV585x7QreRHxsNW9pr26rNwecunU1zNxQIDwXAjT69KI3LG799
Z3Yb+XKwofg24ZNppcuc0S1sEAhWjOzOTm4SA9Y+/SNufa199spWUtBaX2VD
0/X4pK/h8w4Svpoe/kq6pUP2VZ3ELoPkWif3EoI5M/UdJf1LKvrjgEOBgXV1
4eiVqunLO4x/kTL/fYv5E1Hzr4TNvxYwf9Na/GF78bvbzP/aZX5LyfgHHOEC
e+MUnCtMu8TJP4fs+cA+O/5bPX5TvVosmJkbLOut9Cw+wMKuklLtr/mHvIFV
M2KJTzW32AHtCL1KXS29ugYlIKzk/e3Yn0CwtVvctKabWAeIcGu/6LRpjHcM
yL+wOEvnctog31FRqnkH/fUzi6uny+2lEm9KitLXjd7EiU2+2V/byfk4JQ2V
t6l5DvFJ/4Ct1IqSncgYI6q/Vdb1yHtIuI4e5a6FHZmt85zZHek+J9rdlVQy
iw8Jg3y8tOIvM7NV+1UTFbvbtYXr19/Camvrhq9vV+erdnfr2hdCMkdNAvfz
ODTPJj8Oibb40GfcQJxWLK3JScVLuGIO1mGTlS387bv2mNwr/oX60RRrK7Lm
aqBobdhe1K1yo3eA5SZwNQCUik1M1hqcaxsEky28mWZ6W0N9a/XUdMnEZP74
JHV0PKeiqaCSQZucKp6ZraxrrdNu3z+0syMGq5gzulJIHwf/ahkT+E+8qViZ
3xkf6Chv0AZUR0YJfcw1lpa9KMfD2N8BAmhpCuiYhJa+M9ilkunPdf2iFzy3
dhR5cc23FdeqFTwdGrsEZ9sdBnGqAFbL1IKUWrfqFDOFDZE19NVaCazD+nJr
eSNcMVhcuu5yTfWbsZWuSvqGt5nuAt9wvrpNL+VOFNNKX9PNDkiK/XGq41Xy
tTjEz4UmdhWYRLP9DOfSf7dT+1W9LipV45Mixo+n6a+01lzJL3XwTol3TMq2
zig2TGNeTmVfjmNqBnihfc3AzXwW12SSUOmUnJdaGltb511C80LtIVoSp4/o
qZueVPe+qp6P2loYKSW3J7nTMDyRRHB29SO8jE11J6V9Z3g0fe8Ca2sEdbN6
BUF2uEsk9LNUzE9jL+nOrqq5R6gblOgSO83gCGFjQfXZ4ixnta7+iWOeJ8Mt
ouKmtVO1fJQba+Ks6LXL+Io9Ardr0jZ6z+jKnshdQWuLicWL7Z2+hMS/IDED
WO9SXMLXU0NfIjj4RpplYIMHcNmyOUZpZc559OCCtgRqX1bmWCFxpjxsscaP
R7/FZzpusOyFrQ6CFhc+y5tRnNhQmMGtyxkvL+vPb2CTmhpCqortqUcTsZxr
aWCz8ryutu5Z1R7AwXcNzw6PZBSVvKz7CCDn/GJwmKRQaDmUSiZtS6cgJ5Vl
7ogYzJsdtWHqzb1L1NrVmyET6EMKMV9H5z5aFecg7jcWV2VJRXjmZRcxWd3K
v1fNvO5J2UDVlqijtO5YsYIXzm3YfiyKcBPnJQkasufbs4Z641rbXGvrL4OF
Sc75ZVDcy2gkkm78sE/EOawhBefX9ot6FtWg0gtc2O3uYFHPztUIBGNgaeth
miqlcn1lZ6hbWkfbSo8Q+Fs121oyru07yPQHQH50fsP5s63MKHknE5C7L3qt
0MNAJGrPOG9sRpJcvITL5kPCSjMrVriLUihSIO4TwK3FXZIW1GtpF7ZEDFII
wj6yH7ldCxvHERuLrrlGJZdJa4v4lh/gHV6f/nGT6C+fHAAEhJz733iHV/xT
JP8XMsw9dIMM8wMdeLk/U9GfwBEuOeObs41/bKgwjKYGOGZRr6a1XE5t0z/i
tJG9V+KZ+6+PmMH+iXeFe0ZxNT1smn1D2va0mvHlowMam+ldbanNOUbawB6y
QWKK00cxMQccfIXFL/A3htUYO5V8bADtGqZ10H/0DDs6jtPHPdhBXt03Lg7O
mMMJB/B7MbofORYG+39BHB9gbTR2CbAFylxipyfm7sp8em+hWJnfTAzAN1C+
cE4U4rA7MajGm8dVc/P1FdXvxSR8SW8J1jBHH7JhIo4KoUI1OqSgNClpscJc
3Piyivkvx4nB1hez/bia/QN135+UozYCTgq3saE7h13rX45KP93vTfMtG60d
lAr3L7tINN3CdsbU69Bqd8lp/9rFCUQCBtAT142G6ukaBRKSPbAclN6L5V/I
CEyb7TlzodoQDxjzPBmxcBH3zLWLnKxr2zgttV9Uyt3JIUkeSeB2bfXC+UNz
tS7ssZWkIGFV5mwLqbPdp7r242zqr+OIXz5ONVSchNFpRYFkjoDFe94p5JJT
yGV0zaKmITQRNT3rh0TyDXKxT99A/OJSs0ymvy+8SibdGR8E+uRWcsiG2zXG
9c+QGOxD6aTDJQ0X62WDPzzWZTuE8Iq3FXV72WG6iTY+pJmGDoFEejp+d4iH
H+DOm1uR0RrXXOP09KICwzORW8pYB1JIqVIVNY6jOgCOf6m2RJL8ZCSRExsx
wjd7V1KcKRcsc3rDUjO+j1vO8bHfSna+QDaKwT6v867HUv1ckJ0XpX2qoj8O
BlAA2IXvdNW8T8rzsMssvKJxXbUd9G3pIV8GyYzrUZXIrizDc6zCDrRdNo4q
uxZTo4d/pbKvxDOuRNLBv9g9G2e0kGuyx9odZJ3Pa5xft4MVC9Mu3VZOnlb3
vSWfoQ5XcorttJbhLKPoJK+XsQqGX9Sz7HaP7tFF7TkCPqtUyrtZfJuPcNae
jtwitUKhScHDePMn57djqAu4n8k5ZorJEeJrnjwyOEuc5Sydy2kAeFziSm0k
Fy/dfbzQvcLu3KQo6hbvwjMHciIuPrdJDFAszaKbofK2pD6dnPNLXdUoPuRH
KY5XIi1ScFVh880yG4PJQ1khTRQ7rKw7bvarDv9CpDEY+AJHjK+pe15UTnis
9VQNlnTVB1dSDFOzdfp3UAxSG8NrZju5yl1tsoxCKR8bp1ALnsZZ0RNTvkkt
j2wfmCykjyHzLf5+2KSw1UsvtmVovWNx+d3h2X024X24CCLw/GrtFz2yghHi
jgF0HpzcAMMhaqq+feOe92S/g+Ibqh25vIu5meCHa7+OTRdd++wVQaANOy2L
XpzT1e5fUfX3lPTvHp9tHahcGv9ETMzX/AgvIsvNP/RVMPwIr/iFvuwb9nxM
7FdwJaCdCZ+AARgZzi+vd+epmf9eXvXX9k5v7kyZRLKs/4QVit25KSm9bDMx
YMPuIqCTh7r2Lj4n8DbbLiWD7dWfdz11rzwywxnjjc1KUkqWdd1h5sHjqSXL
0MMOcTdYXpcDYnUrQX9JDa+kmTLm+tKaHPsnWM6FWg8Uq0tbqWFrmC5X+0Wr
Smtl2+sdXT5Jqf8Ht+ISCD9JszElXyVhVYUmd8u5jN8pG54ET3bAvJCdlOWZ
BKeGH+RHeN/WjegKlyhiYKh3gp9xhId1gqthrd2vm63+vcXyeyzL7+fYvwEG
eAFGlJOJ1gjsbIzMUOzfzHT8G8nlcswt02TvK2FBTh4RkTfjC6+k6Od0yHDO
b2lqSRRyPumhvYLskJb+yb5CwvqWatJpppld4VaEnGCmmVdC6I+wgigy+cN9
XQjxISoU0joa4LBYE9aG/Sed9Wz8lmr17LKepwMg0W0DokdQ1zhLnAXW37iH
4C5KsZalm6ET7H7R5//ZA8Hu5LAo1BEnM5km18TkGKVgHbfx5tZ8TmlwUNzL
uIigmJivkjxfzTT11fU3lRJj1yveUNG/hFqKAHtC5SqefzG+om79nrrzt4BD
qfvfVg++rx66qB6+pPl36IKq753eaoPeigsq1v89Vv0iwMX6/7LLTZhjc1pJ
jDibXN3+HQUW2Zzcjk3e/s9Bb2di9TRUWlIrIjqHppGHjpzTgo2vQK8bOqh1
XPDwwgcJRE/VtZ8ah8WDBRQIXxTg2Rqfj3+2OkZN0TsF96k5xfGTv1TbYhmr
RhTmvKbTV1RLvm4YsLy9t2hpyx3Uzk7vuMxrR3MfrRiJfTI+7LvEgP9J9Hop
2fXvqQ5X06yt0s3dMk0CyUZRQE/bFy+YXjwHTCsGyRHmaegyJDh6pzpeJrm9
m+j9QoD/h8c5BtRGHUr8czLVrqc3krfaqad1u/Y6SOS9beJcosDTBOnKobes
B9/s3a3kELAlrh/9EVceNyPeVgDGrZv9gdh26to2Hrriq1AgnCDWhTvVrXzf
ZP0F5DXeLh3ahQLnsVUszmzG++ByJ1cvnG8JCUVu4NxyAjH5G7j1RQz833QL
Z7yqEGa6XfFPiJKw5+p6OzPbaZ9zYWMI9+iPZXy+PyEgyNsVmc/xus4MvEQn
WBOCtHmjyXEllVnV1VRmQ0knq6a/q3l0qHuSOzzFm5pqa+tls1r5gw28NupC
Xcwk1XEo/pNu72darP4N8DV0MK1+UOL0HMnbwD/U/2ZCIYZ8HXC6mZJY2tVK
e0FHD3mip9YaY/tNDnV2wTrlXQiXdaUuELCbGZEMoyuICQuMLHOnKzr8C4Fe
G50PaaZ/QvwQkTBYfwMLyL/uCcD9D56bmIZ6mmRqHl+/ZHvA2BnpFfpZ6k05
L6wdxNnA1/kDdQ2fxRKfxDu8Qv8j1cGAbBi/HzlgmtkSmVyb5nEYP0IqCxVl
GPRUXlGNXFfOENrYtIbW5qG5GWrzZFbjeM3gUln/YknvQvHeKOtbrB5abhzj
tXP5A4vCuQ3JpnSHM7qi3X87RT3poO57S936/aPcZ93nVLMRSz39bBKTapyp
m4xGJ1Qv9s2j2WEtPZx6+jVwvlhrVWLKN7s4gTs7e32xd3fEtHSGsWGj4aVG
w8sRNsEH/Hqax5O6b0IcmoUP1X40i9VDgXB8TC9KdWNLnGKmGrvuF/NC8Ln8
SyXblrFqRSEOuh0AtUTD8v2t9PDWsmpkP4GxL+lGDN423TzuG/GMf9A7Qd6G
Ia726VZ2Wcah2Fpn6MKkGJAKTCLLrPxqHF3prjYMDwuWt3GrrxHbz5DtZwD+
zfV1Q3ae4RZQbe9WZu0Xb53oY5Oja2zZY21ZWUaR6RYuqfaGye5vE/1/Gxvx
nSNCHBGylkD6x+KyP3VxgpZX2g7lYjvyncEudkoGarXWvT5rV14WRbiBa6g6
WNP+c/mX9ivU6sn57ZSSZVyXbTDAI4ZYuDQ4JX5Y7N5QIDx4iMS7DR2CoPRZ
vbTLPYFb3LR2/MpRu9OjojBnXFEdIBm2kkMUKwvb0nXAvAJjXsCaamPiv5To
81y4dfR+ArhBcpaHL3Kr9xQ+vUe7/pJOdrlNtRiAbe0RLvZeQCDzZnhueJBj
jvvblQ6vFNh+nG7vEOcY6eFa6OZWFuisGW6u5ehTGDsJBu51bEBddlJrdXF/
Vyt3jsuXyTTrWqXYlSyPrnXRuMU+A1Hvse1+hKVjDbY/z/T4ICDU73rU7W9B
ji2OcSVCE6noTmvv6UpUcF7TG7dTX1hY4VYEzjrCMtHN194n4hzalCc69aO1
9X7cFVYszQoCrIFWhpKvSIew9twilUKP8gBYWKzOU4NAnucuPhwFVCH/wuIs
ncuJAKjxbQMrAWkj2FA0SjXv5HMkVSp5f4fAywRfdszkbUllbmH90MHnvmph
kVFS/pZuIBDR7+mMm65oV44804y22MTl4gvKhif1FgtSNT7VU3m5vd63pl4b
rWdLajFPYX8Wf9uuFUFHXxwWy70f1J3RbpXW5kHtzmzlNozwxnmAkynU8mX1
WpF6wkbd+RvUjHYwRvEJde9rivlsLnskI6jK25qKMUxpzqLMpWCSMabY0cq3
ra25JuZNv6jz2CIAKenfHRgiKpU72KSwK3tNJJsMP2Wa3+goKldhurgClSk2
Dy8YLULGc2t5D1d7XIj7DXCrROr0NXCJnWY+kApXhxbf2N2RdzEBcdAtIo0U
oBB4mmyX5wgn2zi9hALa82hZDMC20HwrNFcryNsg1cEA6GDYtQMWYI5hUoW1
D9nTqzDIpiJK6y/ryn1eRX9Cf6Qxxp6jpy4Z/fGd2q+Jir+7TPnFFOm5/sh3
AVmrc3IqNInQzQyNNM/IMPdItTdI8nwlPvi/YmKfPCJYkZj8jfKqv/UNxGIb
+qBAZUJnWd1mYgAuLBOrpgqD7aSMStW2WO+VP7oQikSq6dCq24gQ4emljHXY
BQMChXhbwewRhmfPG+t0kkLES0H96szyF6jrsjs5JNQp2bd29VUxNVG5KZDL
he2dXrd9Xtqky5j4Lyd5vZh1IwTTuiutO+SjrbJvI+u3i/Zqzu3Oy/uawJ6r
60ZijT8hIPPWhzTbv5DtzPxdktxdixEypTtQ/mV3Cz8D6Bj2te7fksKbKgp6
isoHWV1zqj1Dhkqp2JrtXaQTh4mX2HY/1EQq2r0JRqSTGbIfi3CqrmPOIKOD
wmwSDtqpm/8ZJ6BUHf87WU6Js9NWkPYL+yN6lfyjnu/pi0ZKI6LA6RiIVWfD
+Sogv3p/mqkFKeBcuJ84ibb0KAiEs8RZztK5PHiAh2Za2TCyZJBqDJaEie6R
rXu18zvskQqYVzdLkyCPs1pb/F1aX4zExmDsrivcmfL8oufwzCvmH0geb2Rd
J9wuXZjODE+tz3Dh5O/3mkeID6fgHCf/XHf5p4sc+8a2XI8cNl66IiOkTs88
oGAHqsUeml2Ljiupbc5FfaTmKcb4Km9Tptrh93TcrpOv44Prob2MU/+wKlmh
JWWoom9nWyuyAAujM0xwZUYyKT+tYpbqykZkCH3MFSvz2Gu/uCpLLcW3ygVv
ScVLcyuwWP0jDbCMR7gSoCDpRvKzek+uqpVKtTM+uJUcsm74ut78JmGQrbSx
TLQ00MUJzMn/HabAxROAtqCEyz/kjSSP1wkOWiu3tzUV8W1h1w4763WEZyFv
sfHJPYXPa1/XmqtHrqjHLZRTrjtTXrKpgO3JEMlkCPhXOhUkn/RUTrlpbC+j
19WDH6h7X1F3/FrN+rYuX9up/ep6/g+nSM8D9S/dLUiPBDBIyjTzILg4Bflc
iYv49kEBiC3ioRECDJbV3HydQim/fc0O8iaVand2UlKYKnA1WL1wTjc6ERAx
EcFJ08JeLkP3oFe868kR24tsz6pYsQydwN05xv5jEZT59sHN++owhTjNkMqV
bQOiGOqCSSDeWwqGfeRUTg1vcv6L5Q/ujPULA6zxltsbf5aUZCkl4s6h2fyq
uMSUf0EXi1OINqImwpKIizbsznsWWY+zjS/HUIOvprEwREbj9jKOKiMEOVNc
P6DaGcQ7hgU503BkCiFNIa7lsT7lKYEl2cG0AkJBSXheMqEgJaywOiY/OaKE
FFWeGK0tr0EgNPj71x7Bv7D7d/GtLs/vGelblN5uXqPclbPoDVip5ePqQbF7
K8TVAce/0BFUyZkbjFa3/wIngrpKtfIt8mZSgv9vMNaepxPJZu0D4+gaR/Ux
alwO88Zn+1HNH53fyojU2/wC/OXQtAQXXGoWNA5Y9ukpOHA/cJY4y1k6lwcM
cP+Tq6bRRQr4lybmcOOe2R/upEePSilro284XMIzL5uPZMwq9Z47W5vxrakt
v1zFLMrJ+x2OecVGfTPF6SL5WhyiPlXdyh6nuMrrv6WbisU5yG7wBV2RoAIs
29JUGWJ+lsK8RjiQRWVDyAQDeW0WVWSSWP5ZCutoFoYOm7yekGJtsdze7mr1
6DV18zd0QwJoVPeejhJu60SNbxnOMJ5vltVP48jFWr1IJJquo189eE2ecI0K
02qMDcNb2XHYMPi1T/8oKSWrD4YKrAt3wFPPIgT/QIykzAMNHKpKjxrALz4w
qaeesHvCSfbWVPJXJbR0vtWHemjXx88IA22kjMrtjbmBIeJt+4yGlaC6lsZn
FPvlQN+LOGoDXgQ6aMPzWrNeL7pdMQxNWketIgW0NHJRUTG9obZ3OLx0AJm0
Smszo3RfTW/Xm4KBDPCpSXaXXX6vZ9lgRP1Yast0Sc9Mx2jfzFQtm5Xd0xyh
GvpU3fV7NeOrODlQl/AJJ/RCraNzjmESTg5k3QhPszVO8no5PuJfdfxiWjpG
JH2jsuaDkTFy59D0YZYxpWijPb9U11ZzOzTxpc1YL3lfew8aWX1QvB8h9mVy
JeDpuncRYvcjV65Mw6r1jwwA4+aMbhELl3SDVG/sNQrMrFgBz5ovKlo0zMvX
Aq8/mL27XVuo2pErlHJaberBpfGYb8R+AwhECFTZeXDTzoFFB1QFOePb9Eoj
q8xSbFIVUAOMoqtDg9xyXC9k2d+MdErF8aMAL23vzjxb9xHjvy5ce3Hd8Ol1
wz+AsWb4NNP8UzDW9mbAC2RLpvknzXtj7dp5vv07rQGejLiE6cL8/qpmZuUA
jdxFDKXr8i+UowW5llOSWrtbuVsiKc4bhR1RziY055f8Q/0NUvFl8F1pvSND
Oeru8ziXfVuRSVNYXrZBcqiTNoUNtVnVt9Yilx1rz1EszQkO9lMD11/OadH7
ewEJBNi3S+yBgpZ2EZNMjvBhCVH+ojhLnOWs1tW/3wDSL71sGW0Fdc23lVy1
fG8t2EfzL7yZVKEADItvfQEnOTccLwNGplbp6VkfmfI+jnnFhX0v1c4o20Cj
mcRY5+DYFqrD9BT9ca7lw+yqRIP4Rj38a0+67vGsZpu4HJ+wUCffGGSDVOeP
mdb/gdYpQssTgdcUuzfR10gMdpP1j6ocfhfrbhzi5Rwe6HQrIto8oeQQlUzz
jVcTmLdyO8Pze1r6ZlS8Qk1ZD92YpbYfqxfi1sbnmLEN2QYHtK8Y61xaRqtc
omVhfP4gGo2JrbTWPqCJB9idndxwMThwnZ2vgkncb7QlUZQy1nU72gOe3jm0
eWY62kMcAfAjdw1v+uiEkN0icjXVq+7FPfCFHeWKXSATNPZtfWX9BF4m0toi
5eYGd6a8ovo9bMV47EIAI8zen2yQiFbJyLmWRHezGY1/bbPk//bkn0Olx77d
pjlUNJfXPd4XUz7gkNJ6I5ahV27gPeA6YT+HjD2ZcNvaY5/VkcCYrOhbGOP2
by/RVNNevbXmvSVvoL57ZcOTq9QfD0a93eBiT72WgItU9LLTmoP8I17QTRND
3ybm57YPTOhedlTGdhRViELsddPoeB+eI9t748Q78jsW0sevHC72ESyvywsa
Vu0i8YIFDLf46coWPl+kP3kN4gRx5wEtGAAdo29cnFKyrOsMvbFX8gt81Dch
vgNVZHdiUOhniXPd8m++J20oARJDpVKOjpPTs/4Tm+PpG3E+0eulcEsiMuNj
Q611dFnM/jUn/3xh2iVm4SdphV4Gqc3YdfpZaotXeHjmrU+y7U0iMLQrwr0k
x53UaGUzaPz+yrVnAbfSkqnbtAsdKOECn+q+1SVoyBA4v7dF8thsKJztHmxn
TBaRO528q7D8a3+4lGUntdAqBjsGFnvGVtA6/Dj9hG77kwRfY4vkKpwgcirs
HR6mqTnP4nxhC6XmxbbZEVaxgUHvoC0znEMvtbbdApRL914B6hwuIEEU6a4U
6m+fAX7uGvaGJeHALQEeOuOzp6jt0R0D9v86DI9mdu0KX347Jl/Tr9A0sJfd
L7zn33J0asB+Q8/hRWk9jW/xHl6PcjWQdzWr8cEtyoqmQpz9aq+8xg/TrC2Q
vPhyZ8oE1bMr/1Uc/1I1PtlQfINATjRMY2ANWXt+LgZCuByjU8OCXDI9Pqxw
+D3LUltiCK0Ky3b6Ocf/xYGo90ZIhhNkqwmqU2pCUiqRNFXsO1ngWZUSUpnk
O0wyHIz5AGzW7vLfeklZgetr/r63e9ZjVTJMI0UPanfL5JpcPK+e8VG1fB8N
ktRml7R8Rz0bsLmw0JbSTDE4ULU+zpY6WN67K9NqLwuLjTl5v91/4hA+IZK+
0d0TqglDUim3q/IO1IX7+FkxNVG39JlsR0nvFOi2XHGO0ZRJvFcddU8JHk2B
oAuwZrtGVig13FsJ+N8dPBYBI7uH5Pv4jnLF0pyYHIM07sGbuK0vSGjpyrVl
kWi6tc01JeN7utUq/MJeuq1o7Ve9yLsR1+p7bT7ztzt1X0UTuDR2D9ofe+ss
lLMRC3OtKXVD3vkcc0rXgXV6IPvj8PDjA/zrGJvpI2tW1G7f/J7kutGZxRHl
So563ELd+b+aroK3uRgv92e9Ye9V2nihogAok0gdswxzj2B3K738CxlE8o2h
4WRsZzGc6FZti6VN5UJ/q9WPtIQXrYAUYRPEdHdrzy/jDMyjtYZoTWPHaY2t
UAJ9fisuf1E38MzYfyyMPM/uF524eIECAcWdBLTchlKpGp6WZFasWIfpId1m
QeMJBYudw5t31qtid3pUGGSLuzOb7W00MTN7Cc6zczU5eb9Bow33oo61myFy
APyb4R6wkvuzPTvtOb3L0DyhJN7PjOJwOc4xMtC5VONycinLupXaeNN6/Mbb
6xiupJdA8U1f3LD7s8DjIstX60VqDfEVESwEAUYtXo4sF4v1m6/qJWi6Y8P2
z1vJnjJ2LbNlLL+kPzeVHexWrhujGOpeUZrL4U6u9WpY8woYXf2Tc7XRnR6/
Ryt1sKz+jXzrPQdiPk4c3Srp544XIvnp6Nht+KduYkSUeRZWegAaG5dpuCVe
1P1dVFuizQS/A95zg9ekTRWH9bnYkihyani43Ick2tLG5imyxsD6G1hA/vVF
0T2yhTU9eRC5h1Vwva9AhXmzpSnOssry9OysacaWhlDvMa+xCWpE8gdOIZeA
8ER65WhKfgX/NN3KTlNewyCFQaCslH+m3jMRYz1HQuYvaGWOZhnVumbnqyks
l6ikWD8LmvOLSA8OZLQ5/KQ//J1JquNSE2ljsGF1cmh6ZLGbzc2kdCWmsClJ
LcmRTb5+NXoMUC5lBI/KGP/a5IimqGitfy2fGNubaMoJfLXF6vtg5ygvS3K9
HO9r4hxFupLSekAB2xP717M6U1jTlR3TWHG3nyPW/M9qrqd4ZbEjoyXKnIJ9
mhRaUcbpI0qFErluQyPpoQlvYEtzZFF+PjdfBz4F+qpGrcI6wuw/1ZszCx6g
nUObfil4P4glYaKgfnXjrNirH0GBoAuZXJlWNoXcUdgm3QGps33j97hWMNDS
P9djotqRd5TUsry8dBsKr115eSs5ZHdyWKXcnZouLi57A9dyYq8Iz5eJvufS
rGw0HXxuF4SnXicC2rVE/pWy4Uv4tn3MEMlqI2tiKbZxwjS761CiBPjXXjEx
I1L9zfBcZDLA1yvN61PKrXcLXF4vcXquwuH31fa/SXd8H4xau1+lOn2ktZO4
X89xfzvN65MEP+PwQCefsGBrwu1Es70g54MEjX0ZU/PHkMgKrRmpHFia5y2o
VgvVYyZq9n+gOlI7RRsbGWORji3PqDnxm0lpDoahhMt+kc8D+YnrCh1LfKq8
6q/jE/ndI/OHhiYKN7YrqRsuBrqdLMDIJaTcmX6+KVbUtW/oLdNhETKeUrKs
qZd4Qt52KBBQ3AH/Aj/a6IyEXLliF6GHdgFNOypnQcOy7zTfZ3dmXBTigBUI
6J3ZO7YCNlhd7aaVvoYvTeP/uzDrGPSJSXe1Xcv7kWb5ND013HjRkkg7+CBm
24WmhXs4ZNjbhjrlaXiNa2m+S0yH6WfL157Ty4+aHYyRP+8opMmH2rs7hjhD
C8cqWQOe2fyVrqZ25M/ZkSEC1w/0foV2GJ0TEcyl9AIZf310cCkphe3pWalL
xBIJ9M6WaZlU+4wGonK9p6wv9E0MC/t+vuvrrkQKxkCkUUhu5XatT2Wq2T/A
RiSSiU66az8k/vWFxUa9v9HOUDe2CY4m69zfSrF6SONCTQa6HNwVOCFQ2cI/
+Ypwe4D8C4uzdC73G+ARll+/ir2xScVLJ9LmSbkp2MpLYpoZIW0j9hdmgHVn
Q5uOkFdNc0uyc3+FNdsCnSE+6GcZlo5Atci9kd5BzNiqfwlfcKzxqb66d7wp
pCs61mZTYllwiEeu218Y1v+JSqHekDemC9zXuoq2V7nrvM3+rrna0oEsYkuY
Z5VuhSK9Oba4DFnNcCvDfhrjV0mLI1OiYuICg3Jd/q5tqmj3ZpbDXzM9PnAM
SbwaXodrZI8zjONrdDT/k3rGT7y6kk9sijLPxoYhlTrlz3VxkTJFOztidrt7
XOJXsY+hypoPt7bmwfNA2lSxdvXVfQn50XlxTgJQevWm0g9PS3Rr34EnaVLR
Enfp4SghC3EYROLdIvqaddgkGpmM8K/w7Hnwu9+P5x+q1NGaxnQVEuXaMrgV
mRbaQF9sOpLA20xTIH1Hvi1d6+wOSM38d12HF5HwU1zXCTAa3a1n0p5W1H35
wDrq/E0PK1Zr0aV0Xjk8UPAaqcGGkOngr41ZIju8i7WolIRbl8R4FMcH9mV5
9JD9OOTQTnJYR1Z4Z2ZYZ0ZwXrz2K4oiPXoiP+YEv9Hh9r9YJzvF/q0q+9/n
ur8NeJkfIdA6Lvez1Ba8awxjlrfI6U5kTnZw12Wbo+o5grrnJdTutFv3lTri
x1izDNZR7uUWlZXwUkD087fNMtoEMbQmZEZpnep21LeuHNhd4LaRUrPtvLBH
1bTXyZrl5rJNL1PJvrAoUO31ksup4dnq09WBAg8+mlqACWInhqMDWrAAmsYI
V0KuWrHXF2Jq7D9GyJpjdAvvprmJYoErinDDWW6ZdtZthZU9I0vgIEUibnXd
J/g2NEE/J9gQUItEhlsQj/oTjarA+Hpvo5FVZvntqBjGlUj6Z3F0t6AoH/dA
9ClPcSN1mBqsXHtWlwoJ/Qwk+dHyHoZSxMcS1TsgrXjv8458d2pA2kDdjHfe
sH4D+6X7jjaj8y3BPsgXVTaM0SjdOI8YUEUANasvGxBuSNCvEY41D0a/jy1c
H+d+Y9+4dFvUZLWOyacC1cx/xBqpiIT4CMskN799x3pMwhPdPaG4uojar9qR
iykHs84vv7hdnY/NK8Ghb1zsFn8g9OIWkQtuqi98o5w+nCXOcpbO5b5CsLkb
kjmnjTn0BTpVD71j48E/yxSry1tpYboJBaIQh92pETXeyKaanavOzf9/uukb
YXZB2tITWSmypv/BMS9J43doxaa6Dq+bCYWRAbalTudZe34oMDh+z08X3toY
rFNINtd5W50t04WZnRE+1UcXHdpv2HGQXh2xpe5Ht9zLqOHp2eEhVzAxigzr
H2Z6fOgeEXsltRUXJGmUyIosH+CvDalHjVSNTx4ods36tno+cmtlvSWxCZeV
X+tfvj61ilx8kWi6ovo97PMogfR1Ti9BqdxVCtaFwQdK9W7YftzV1HXYs2OB
J0srXTbVCRwKSp/tHNpUwNSwhw1La/KM8hWzIPQH1UQmgxGXtzB9Pzuz6NdP
VEp5b5umdvRehhdq0wbq/fqNPwNGhphPV9c4dfSrcYlfweeBxn8jyeOtTJOA
A+YIS0IJwbw9++UD5d/b/kvN9d4WjdFHeX6Vg/oTuPbMNf4EvzSvT0nOnwCK
BLhSnoeW2hSlk5n5ZSUZjYRwuo9v9dE2Gb0SI9KnIjMsryw2iZEQ0B57syvk
nTbHn2E7qxJdrx7Gv9BhkNFBqB1tHOOJt3jq5Qz1wN/VjK+iyhI96QO2n2He
9VhsOUegf5INE3I8bXPSXvOP0hZvRJ1iYIQnvdvR5bu5NXuYDqlSKLqqGS3B
wU1Gn2EtaZrG1qbX2fFJu4uzd3BL7CpUvWOaygyYu3F/uMZN0xrXFldhLdZT
B8VekCEQI3oZNPJ0qO/YENxdOBlY+5txPrjcT77539oLtEuvc2iaxXbEiYW4
sO+nW1uDex7ZJsUpfJnyC02oDOMrfQxji4OqghGJDvSEGGd77KKrv2mIjwO0
fkOcESjnNKmkB3gBlkDdTdCmHqhUipVZDReLtF43OoeNVERftyXG7c6OSaU7
3WxuSiQDp40EuZaXUXvWeJvoLkWTbQO3WRhqR7oWWIkVNabZXS0jA+rhy9gi
ZuuFvyyxSwrxMMeG1lRUvS/f2dR77Lsz4xuOlw/kmHgYK5YOFRE7u6rKFj6u
PAuJtiTceriDbc4SZzlL53L/MMKVoAEAqGX73giEY2N3clgU6Y5P3Pjo/Ga0
5+7cFLoZKrvmFxoLaM/jiioHBP7NyzkOSNFCq+yRvKRd5o9xzGu54efEPE9N
kViMODVOqgoLcil1ekar1Vh9fzD6/aWmZOn6jGJXOTnKq6b1xwXVH9aqAxnB
zsUJDmmRjolEh4g6C1uWmUmX6eU+k49GbvxtzPidiRtvgTFu/v6Yo9GQr0tR
aBJykZOJjbnJrQkhDYdRM/RtBiGiw/9PqN5Vb/eLBD9jy3hsYLYmNgDIwxj6
WB27W487jP1DNS9XuMBnRNXhWFhrEkNy2/A1O1eTSfkp9sJSqP+zvMLW5Myy
atcN/4RoUNh2iofdKoKt3eKmNd0CHY7RUxUs/uYj1rv5YQTi0MTFe9zY65Ob
Xra8uHrnkcnHzNbHG3slW9vlOXzL93GWbca1Sy3+ftL2RrVCoVIpp7klhcUv
6jq8SJG/SrM1JRsmYoq0Jzd73Vym/BJbUkNjyx01Um6wStjT/gW9Bhntl3X8
XFeTm29FRCd7X6m2/19EaNCCtM100lLqU6MZt9zLdUmWrfvn8a/bbVWxvVZ1
Rmmyf25FdGRrtFVHwJ9arH+Arfbj5eUfEOpnRizVPebLe5UVQ2tGmyfWpFKB
ajmzt9akp1CbOqpoeGou83eRXpE4p5im0apFGjLpF3UOpWC326I9QSSbHi0H
lMINSUkW3+LvuBgwQMqE/lbyntbDMj6OhkSqaOoW3DYb4odnIreMuX4iwfMQ
WAC+3D8hBuJC90GAxi3XtG3cfRNJ5cbaVnLI6sfPYoXDusnb0toitWIXZTrB
8a8crIf8L6n217INSJGmZLSTZm/B06qmr5UVe5gSK7H2FqOkhlh/y1z7yxFO
qeijOdvWAVtJY8Pmra2c8C5mZ8/oyue6Ao/vNPyiUMmlnVUNKP/CVfwQ+Bt2
lFX3jCwtzm0kpbB1hRKN3LW6cpsoqVSCUUZP0Kssy++jckbDwqLqsRfHp3yI
N1ffW/E+WhBst/7L7WFOgNjGxHwNveBZ5J9tCEb0H7RCAQTF6sXn9h1hnzyv
Kb+sPNQRBm4bYuESLuWhsUvw8Jp4zxJnOUvncj8AFj3QhLENDX1Iww+Uf6mU
sg6GbhvltU//uJVK0BsGzFvtLCl/E6dZJYT+KN1Sk+dFs6GMFaYoWP+FY15j
NX8IyonBhhrulSoKo7q9hVbSGIj6+zIrc0fMB7RrfGi5JIcT5lF1GOEKd8rP
tgmvuenQbXqJe/1PuoWMjhhYYbh2/VmWtxMrPq6OUk4r7Kgp7iOE07GSEGsS
J3pnNUY6tbv/Hg3MLnB9DZzFgQSxeAaaD9JLd1E3fenApeg+pxa28EaXq31K
sRSMeiNjoLQHadmsUMi6OIHxSV/D1KY+n1Ho1TE4rRDwRQQnVIMimzuwnB12
uGNH/MLyHRWDI/QgcnWzqtNKl2FQ4unEzq6quUcIlFjcr3YzdCK/fnVjc/cu
y53pNfwesU/F0ixQrg4UhEH0K8PXxeQYxcoC2GZ3d3tgMAFnPdAYt4n/kBb0
Rqap74HueGbxfRF/l1R8E5/e1Za1Jd4g1Y6Y6qtMeI3U4E/wo7i/g1Q67XD9
9VimTW8xuTy7RX++5yE9VUOcaBGO1DiHjEAncpBTFsk+KcmOBF4jG9i7lx69
qwN59K6F+aFxzEibfB9DQMSAjoQIh0r73yX43nCJSrrtKz9Q3ONaRkd800T/
gpAzpE2v6yl8Gqnk00n9Y1W0QbW924GqiXuZcfEumSmk4MjkDw9mh2lKFgTH
v97c6qi3mzP66+4Mdmmkh9EVlH+h1VE0BcD1tQE6DoAOVtnC90rC36vIAPMl
jPXFVdlDq5E9lNiWKTuGNpNoS3orGYLhnzpbzeZ/UdqlV0SotkTi7DhcX3Ug
GbYrclU7CAFXTXPLw0l/w/piYmO/muzyAdkwARt5Gx/vCFbBXOsn1knl2OVv
RKLH+lnEONl7uVKCXMpo7tHjN946UMPQ6PxmgsvOYBsgCzrCTSWWri1vDEws
0fu5Be3jyazh6Mb+4Lpe39oebzDAC/C2eSgKfNQ/Uzi53Ag2FktXVYcH4B3z
WmlCHIcXZB31Go+YviqLHVSqclvc1r+QTe2O8DoY2ONSVpzTvbEuvr07Ja89
L8Zj3+uX5fhuZHzklbQD5h0ah6vk+qqbnkTap4IxTz6fax0UR/hPtOdgQuI/
TnNLDjtsxfK8wOPGgWAbF4PducMFi1o9OCW+lXBg+Qekzc7zHkon+FniLLD+
xhHYkiiic/ct28b+Y2XN60rl/TLIoNC26BqYk1RScaZspAYO0oBeV9Ku8wdJ
FCu0bag2ZpvwgzRrqz3mlTtenKFs+SmOefVWveCZnYr1E92IKvX39Wqw+YU2
yND/hYW6WLlgSa1Sz8/wKwv7wr30065ox+xCa79WMyPu9Tf0VjRaNTynW9ro
6IFKQmSwXCy2MgLY5Q1V9UMNFYNJ4Y26hxHkXJoTEMsOudhyO06yzva/vf21
gej7sdmRdJ/ywQlupybcCNe/dehj1fbMTNsUzSYHq2WVOOQt9M4hMdpC0XQS
xQJth6R12BXSekZX2otrDmhQHz8rKUhWK47y+4PfcGBSrOtJQR7ErF7hndW2
esA42wIBwerGDmBYuGK/iNeyhr2B9r68m8gZbFWNvdJb2mWuZ58qlbynVbdZ
Ku/Dc82uzu2Flcq9hr9SGb+905uU9m28wyvp3zI8L5GvxWJv8kp7wiTpeUX9
U/vLAWgLQ5d6+1j1nPmU5imDBBb2ntd0f0hheYWHA9qFFOHpcPufEYprWxEt
K6EZaClHRQ865mTYxhRbeTVa3MyzdtauGvPLR9eazrZxQF6UW1l0m15qsjAv
t3Qj20bEOWXpesqwI+pWTkVYQG6Qfa7TO82W/0axexOMRusfZ3p86BCSpEsn
gTA0jtXSzKKaZpzTXEj7XnfIR/nGMbjssGiL7IwoCoZ/HbjmtNLXp6ZpSuWh
0kDBX21PzWy+aYqrl6KR/JR45cbandy1ewAkq7hpDZcYgg4wX0Rf0zQRu3eS
5lEQCF8IG5u7Td2CSMq8bvA5GmRYexfeLpyIUEm3JYWpa5+9cuBGuvqqpCgd
fISIlKZONq30VWycjG/E+WDP61lGkVrb47WE4lALdL27pRVjE6uvxjZEBdgU
2L/v7aq9/+tuGh2IM7T7y3ZFumprX2NpH+JqH5eVIeTGj2LLn40o+e0djOiy
pzMa/l7abssajhlbrN3YmrkbRqYUrm9XZmw4vIuTPHyLV7ZLklSSzR25opM1
HeNfeyCwx7W8pnhAsqXlMl2Ds8gfRjmbIKaecufn3LMOxGc6F/XNL/T0VF5B
5Ymk4ptpt2JwEqOtw1OpVOg3uKmU29X5a5de2P9ZgY5RmHqEjrGrUJUy1rEx
ySYBYwUNqw9Yr4D1N7CA/OswTM5vO8VMofeqbcTk8PQDyl7sbh3A2T+1VlCL
98CiQ62gWEkrFE6l5TujfSWQJRwX9t00W1PAvIqsc8ZK85Vtv8WxjO6KF93I
WVjJ4BqVEH3LHNlJrtPb41mWoql2oONtS+TtzCks2cGqN2m2cXQLq4kbb60f
KBj7gtD78ibRVVIQ256vrYmUXVin3XkdqZ7jVd5mU8w0oTVcLam+VFnySUP+
xdbMi32JFyciPlr0fHfV4kVd/gVUL7KNo1bPCUxrL6nkL691NE9lxLN0iViU
G4UeZt/m/CskQz/b4S/BPi6AXeIULb+KIe50Pa5nh6rpH3qao7oGZvpLObnX
0w+UIAiv2eJtHtGlkd032NMz1RoUhNWgNhwvH22kQrC0JqdU826G4NV7K8JE
Tg1v4XTbrM6wQFCq1H0TYqxBBkuQ2wfxWXt3w7+wVTU4mEa92H0COSCtLUJa
/h3o2nPxuc1YLzT3sK1/uLnFNoH0dRwLyEj+TZaLdaRZFpJNj4yGWz7LlF+q
sRlerP+j5nqp5MtDS6LQmlFcm60roXUW4VSSz1W6zY/BEmPb/udQimlHUX5m
PPMwb1SEUz7FhlBvYdtncmHB6IXDvN56+Re6warhucPaA/GuPTN6468UG4/D
HGSoly3AX9skGkkdRXM3HEJJV9HmqqiPL5LuRb0ded5BVXc/g14iZcOTM6lP
1zk5otFZaFHuNP8Sdm18cemfdKtKpmb+W0eX7/b24ffG7o6MWYXrM4goWpux
3rrdBo8PcJvOLEnz61edMQ+4A5aEqCly1crA5J20kcLhDAuE4wPozuCCA+1X
t/6t1rQboCmpUd+xcfeFcLGNabar8taN3jzAvC69CCi8SqwNnGP3j+haCQJ8
98vOUK4mt/lf3a74JxX98Xzybc8O2rAvjnErMJxm/+dYx5hgl7Ikr2TsatVU
1fD6VNZeo1ZqgkZkO5uVbO3T3zvrY2RE/P/svQd4G9eVNvw72WyyPfl2s99+
6yTOZtOdso5jSbbcS9ziXmLZlmRVSqQosYlNFEmxiL333kCQBDvYG0iwgmAB
e+8VRO+9/Hc44ODOAKQoiZLsrM9zHz0QCAym3HvueU95T+Uf7gh5/cE39xMw
LL+eWPtMSZdN91TSCrdXq7ujvdKgVw93isLtCBqGb/c8gsIUMq1WP9C9GHez
CZft41PX0zYH/oTG1Jh9I6PxH8MEiXmRzudzoT5oWb2JtWOwP2dwJ8F7m5t6
hwGJZLfHJqLnsYn0y8DG2DPZZouvDifh6L88ExbuJy/HVxp/SSSSwsJCT09P
Ozs7Dw+PxMTE1dVV+AOTk5OW3cqAVFVVWT3gX2tfs7sRoC3re/hwG4WQnJX7
0UNhuy+q0PcinP9vKrT0OqfqbSVk+WKallR+IyDG3IMejIDwF9Gc7ZJLpImK
Ol3fK8SYV+3TXvm5MI18YHhAmsdn2w7h19GDDIwgZWWbq6Lq4qEwrxqrNgyw
c9bOPod16BCH2cpLE9WDbXruOriPWp1yldffN5udWh2Cft4t2QXTwPvRtEnF
jxWl/ZEUfqrO16bN4STm94ZHx5WTkhSvvub2rsHlLtpMSjiNYHEFu5dTQwN6
vU31ax1Xfhjh62QbXUYgCgiun2DPkzAyanPC1UC1XCAnUHMUnM0uzzGlhZe0
jJEq/GFK6qC4Z4ZGYgx6naqjHkeNeOyovCJnj2xtTBQqfQtTaJmUiGYOdA6J
VA+6s8//HuGLtdR2HjBKCQ8CqIiUso3ZFYVVI/VuKhd2YwAzJcwMzEjzE+B5
hWmM3qw8vYgPHyEw5kkcmXzSNwoz/5TvfAOO1wBDqyPAg1/6CE5L9P7cuJ5o
0Cn6lwTXK0cJeORkaCMGXjovP1wacKY8K708uzXEWk1WqHsFySmy3c527hzO
RWP2kF/5k+jmWWnGDWDhKOnl6qF27fyobmNRx9tkDc+zRpf0cqlBJtaLeLqt
Fe3SpGaCqWLUKxvyZQWRkjgX4fVPeGcPWw2a0+xPDl34pPayR7pnLkF3YbVm
KUHxjOB3sTaF4EWr48/SbnzhklRI6D4G/r2SxWgc31BqdEbpsHHqrJH+twR1
EeCMi5ijQfPhuubOLvf07P+wyPz828aWE1uc/j0mg2ZmTBx9DesdZma7DbBX
j/TeWWmYaYoajfNrSkozxyPeekTMPnQ2qWQdaJuves3+AxG5Ut8/Icmu2nSJ
to5zbYNn4ovWwO2VyA6s1BdREdNsZlk1z/Zt3IQ5dlSaHYk18NXplP2DQTfj
noXxV2LEj3Muu2JqIedakKDsh4grsus/u7qivsjqggl2vCOjK66+mOZyI8id
Wh6YtXT2Zdh/Igo4pRlFaqLFio2BOVJx59lo6uMAMe29+yfXvZhL+5DSeZra
61Q34Nkw6N085A9Gw6BPbb97BeMypfNMTst7QeSz+7EiYqsOl3Sd75vN4opn
rfIK7i26tTlpmjdBU/HtXwJqx6BVA6jV2z5PoBpLCm2ZmzRnJnD6Sns9HjXX
pLv8NphcA8fWr5KYdGavof8w1vGHlvoB2cU1PuZf0LoGLLtmVyeewaCkVeFs
jE+eRCC2Zte6TnAjGKNiQrEhmKVy5Ze03vxL0n9ZIBC4urqCX3d2dk5ISLh5
8yZ4feHCBRaLhX2mvb0dvOnu7u6Ll7a2NqvH/BpzEUSCzzkEo6SFc6/56Lb7
osbzzrxqrpff5iLeOva0JM4HJTa0FIWCS6YG34x72i/qiEOQierB8ea1MM+r
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
aH0709ugM66EYr29wNDRv5tZ6o+Fvc5n0knX38fW3XT2RZ3CpL7WV4SJwc2Y
WXXds7LTzoZ3+pCsMMrSLbnOZ8Hxnfiao5OrtfiPGCRjWbD+4TSe16uITPVf
LdFK19Yhanp29ad7Mx1Z5iJW913VaOWacQbcxYN/8VmsgRp4Cklh5uLZYM/q
rrIa1s0X4EDY9ZxazKC6nFM90/ycGX+VPmFkPW9ULoJDATDeR8LtsJSLedO0
CVMwQjRXWf0aPM2S0/+ZNRSplQlk5AQCdxn/0nuq9jrL/R260r+eZMJ7LXqJ
SFFHEbh8RoRdwP60eVNWlIJyRIM7CZAXQbcAg2q7DIeAvL7Z2Hy8c3AQPNZe
1ioujLXNytISVi+c7jWynsMzHH7fuJmFbXaLPNm1ihGMlBi8uFk3Md3fwvT8
LTb3elz+uy0lIsiditFBBIU0rQ6M4KK6Zw8ranPRwxLw105j4sfiyj0J0BJp
+oCv0lojPyWbKb2DQPntKuQdf/WvcaYd6RDAffcuTK836PrncuDMAaBCx5bL
CbDFoJRLU7xgYCvLDQLaWCpRFWYy4EBYbckwZ7Ca6fEb7GExrv6c01eqNxjq
xzbh/KLz/z977x3fxnWlDf/Sk3c3u9k32ey+iVM3xflS13YkW7ZjJ45j2bGd
xC2ybPVeLapQhSoU1SWqsIq99957AUmQIAgQABvYCwgWkOi9D747GODOnQFI
gpRky+X85g+JBIHBzJ1zz3PK86RyWoalro+xKnExC3RV4MSqjeA3Zr05P54Z
sj+DttGgQ2EOZzKnrz8+Jf2ntD0rPfvXA4OpdvtieRtMrzWUZ8n3e2Q433lS
dfmQmdPsddTxo7KPEH/hJKil6fIP3qZfqH8+qb51yjrsJSY3mZTAUQCXDqdB
wT/Afzu4Fyxm7SR3vOAQRfiPcbta1x2MCv85uI/ze/jk83u7YUNE89GwlJoj
+BqrPrT65vE0fLboer1CpuOU1TTv20CoXs5vX5UT6wJfRe0HrYtmKX0xs7Sb
Nl2FN/Vxbz2cyAs1m14ia/KnnHnCL1S8cGzR5wK14Zl6lJcDxBKsgSj7An7J
xCxFi+bsbDf9WjlZBbseUD7Yi+8vZpWkM2gNdBeTlTdn1cb9mZ1oc2l+fTeM
K0xV/1rpfxMslaSDRy/e/APUB4xP+n/OqveyDTMa9MWpsu1r6dWN/f8wlGVA
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
RKNTpNidRlZSDmR19s5QEYSazSt7k/jb/MT3ccHK3jcw04zXCpEThbFohJ9g
o2yNYihEyyqbYgrlgKA7tKT81UWKYtDDgEivpOyVJuYHfMEt8LxL5tha7eRC
aXaaDwGBn9Eok8l7JsU1ff3xLPbpqpp1mbmP3Y3918U/FziT3IKn2Zzzs5J2
bHHGCcwxLZisvlBK8xjlAQXizgm6L1SzcC+BZm7HA4npXZPVHskYhjdrUyK7
uK2749wT6NhCVT4XpmqDbzWYTa4kLSrq3Xn6iTtEJ3z9P0zLJCrEbOb5ml2U
mXH9/dFs+vQYTuflngWbTHjUOLXsyTvOcCIaRVD6xjFMkxCEcyESsWLSRSL5
JuyaRruUrRabvLuKzNyGv405g+GBWQ1YVxRRMNMULnPgWo1fdMjrBXkUCLZw
ggWbmWU2Nu2hkdUvdEREfflSyBrYecJk+a/4CvuCWaxWq3JRs1g+eiJHxz3r
fy13mM5QmYNKexjK7mWiExsayU5I+R56l+OS/ruwNtH3mjtmtw/U9NGIYeuu
VaimFJ6hIF/gasMmOeiG9jlsepsdS6UmG3NYQ123Xofrnxu4Wj9LdldyW8ev
nHQNfOHT9CcDZe7KiPOBooAvcA55jOzbxY8D5AWO0NInR2YbF/o6+hGSDXUq
ffUnjEH6wzGLagzS7eJ0iMsEsJ0jqdB5hpWuHp1tQn9rHeIrDr0E90rliX/Y
xCS93tSEIgJRfws+UyHgiIzzE913/oYWwoTRG6WSqaimEbjetiS25Bbsszb+
KwUOsH6EC8pQ6786mZaf04F22MI+W2Jt84T0OByEOpPiWuAws3Kf8JByRtsU
V7lDl69mZP+mvOrNltbDPMHNwaGMSXGdVNal08/YFpX+pNWjwYv1+lm5om9q
unFoOEvQdQecA4BaeYXPJqQ84hVhee2LqGfs6B9M0WhFC30ueMrmBmbZicy8
/fTLAo7SU/n91b1w5gXTdApqD+DZQre6uvNSf98xE0MDvA5nw+HVSiGFZyOd
24h7FdcHzzTFsw7/EJH3erw6LhXtOcxL4Rj1+NtaR3sUfmvJlXNmnW2etjJp
VIePdY6kLfSVnY4CZmmefqA0gA+54bz0SNeQWhD14D4LwIGGblKxMab6Lwqk
URl/gdmovrGHAsGglABG0f25HlA+0IP3lILIqjr5DtqxPFl5Ez71Uq0JlZbb
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
vyrOEuIOu/jiizBC4Ak9MiVmu2ufV0fpE5qLAxy2/0NmVE9dcP86AV4f+KZU
Hi/i98w8eP6cB6SZFcgMBkN0dDQ4gYMHD7a2tuK+LqKlpQX8qaGhgfWtI0eO
bNu2LeABl3kt/mXVzsHu+feeAciLSn6te841uThxz/GJknsJfwORV1zS301O
VS38Na/N9c6wqgjKjuTL+4IzLoLwkpX2EvyUNDPqOSqTPaKkFxGmF0jnDPqh
Ni5SWj+SuZfw6rOAoVhXKkUJzabGVObMa/DVaD9zlHXHwDyb0/YJfKcKO7fC
zAhtrJtsm+2A8qkzmU9iFgW5ZqtvdqUI3nZ58W8JbNH6EaT7WQPYBZ81gGMB
COsIwt5aAlU1qWj89IfYvE/kPDOpuXCpDrpWmrTcZnViDktNajRTGe5uwB9O
2+kwUCNHa3Gkcyc+vduOJsLWedm3JCWvBAYmgp+RE6dJk8hPHDxoSwWO4aZ5
I3jvRluGeopEXcntAJdVny4p3p/Dkn6A6elgtPA5m1KL9+VUnixuul7DiaPq
GIcb+mcl0/pZncvhWvhkHHJqdaXvXaLt79gMJJ6V6q9SEZQplAzW6LzpVuMw
i2FjfSovRzDNkc6t8/Z7UtMQgSs6033KQXd9ZSDjYPa9JjTtlZ3ANRq8ky+O
WfKifRB32iVGDM5rTsyKdoaCoEttXMC1YlYVLHoBERcYwKH3XzN/c6iljDRz
4moz9hNufM2swrEIVTDZiGb7C3AFT1DvozOCY0RJlohJrV5q0CElc4r2NFq3
gt6GkjZDYUraRuZNFG8PUqucw592YX4YxKUlR3aSLJH37ldIc0/418lKSQfE
Qexs1K7MmrNlbbcbhZncvopu4Fim+RNgum9uGqKP0NoypByUg0+meOPDjQPS
MgkvpQO4HYC2cjam+Dsc9HczP0msjiztKRYBrBduMAmcIXAsvgWHVPBgFKC+
aFprQQUpQHBLqVGQpG6whXvgm/BxjOUcwjEXVyK7cIHJj/PbfUR7LQWx0EVI
Lr5ED5Koskfk2oXb8aDZFcLppO95FhJTfuTUBFUUXbPVMIP4NtIzsm8JfbgY
7gSeAXqJjgEvjx8l83QajhBbQy79cVVBNxxREt6UZW6gY8/XaZqX7pu/gQJJ
Mq0VzGj0KN2TKzbZXZS0JR9mdb9EL7NQECyuFb5E8SdL7aZFo8hlWjiYxWw2
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
k1Zu37KJIA/GWMTMd4TXqQ1zob+aLqLsf1IW/u+zsmLWz86QfwHuExAQAB1S
hw8fprLAdu3aVV/v7nb3YvGH9gDXHDp0CNza4cUOi4XZPOBi30Zut8CimHGr
zEY0Hh47E1r8c3oeVI8W9goj0/Mzsy0ztnXWWuR71goHBiJ+tYkr6Ln7jXaq
374/92Ot7wZFvm6c5aQkOmjZWqeA9o6ZS0/2NcFrOsaS4dsYlPVaenaMwx46
OVOd6k+Tt9oOHtfXRi464wtn6CFn4tI9MCh6ee4+Pl0bWfIJnYVFFm8cFpSC
5Z51y/TzvvM9wzP2/Mvhpyam62LKvrD5ZsBJyib0eA+VnWHwNWhK2rWC3w86
syJnGpJ+s84DxbsAH/fevVKzw87FbqZGweWkX+SaSftrOJkZI0e/sVKw4COc
rEfwGif8CwCs7E3Vo35nrGsxOEpyeg1zBhiLPlP7q+DwBtuin9HrsdzUDthn
yL+c77fAbyMtIAB+Y4rz/8zJSAPXNA9HW8t/ZO9i0p/CzAhr2tfDt3KzHvrU
u4rO+M6ZnKy04cjnLVs3j/7uzrwRlmUpFHgh4SfL5szhHRY1njPfzRI4uObm
XQ4c1H31zTX7/s1SjvnROYctj86ofwypnCMF9aGVlspT6WFbgm5eYNLDxbgJ
Q/4VFxcHrrx27dr4+Dg1dQAGVFZW9ttvvwE6JhAImDSyGJjzL4Dg4GBw8diY
g7JT7sQfChS62hFxaf90RPEA9SeLKBkoG5huGJP0CZR8uU5rXDTO2Unkj4bX
PRCx1YZ5tV18XdpV4DCtQy7RxoXWgBcDvhuclHajwXGmLbWfn5pYaJVi2/YK
1m2lwz3cR3DCDM1/S6oadfVrweTDMKTEnDaLqiUiLA5Zw0VrDv6yV9o1Ecb6
gdA7nPV0rpFc9eOU1KupKOzBRDHDyTVLisjNKAbS63bQv40gzrra/rseFDm0
gWG6DdZzEXG+cUfMCmHVghSX7YfzgKLlpldvNiKogLrT0aV/N2AOAoFIg05x
+VdIKNT3T8E3k4kSI1iUEx/U0xMBAi8UdbXyWIQjejwE2gHI2b7OqaALRQvl
9Lta+oRLCk7C7kF/gfzY54TSXG2HnvaVVLWZSdUP0qQTpH+E0r4QGEI7lmeN
Ux18yLodpXYqyGIGPBuVfwu89sauOmsaY6U5/gQMBChHc/962Vi6H2Wc1x/8
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
NLjlllvUgqU2X3A/+AXEU8f9eLZr107mrFChgqRd+vIrV648+uijMunPf/6z
9fX2Vu7Hs27dujKn7Jx5eXn68kWLFql9VfZe6+vtrSz5vut9+eWX2kU08i8A
nkHX2kXkX+wkjpw8eVIdu6dOnWqY1K1bN3VjTEZGhvOVfPPNNzKn9E4N5Vev
XlU3xvTr109f/t577xluvymd+YIlwS8gnn+wJJ7qAmKzZs3Mk6QVUuu/fPmy
VXX2Zu7HU3KuO+64Q+ZcsmSJYVJ+fr66zjhgwABrq+21rPq+a8aNGydL1ahR
44MPPiD/AuAB2q1NGmmC9DOkpaX179+/Tp060sJXrFhRfunTp09CQoJhPTNn
zgwICFi3bl1ubu6IESOef/758uXL33vvvR999NHBgwcLbIeP0aNH165dWxrG
Bx544O233zacrBs6dKis4ejRo9evXx82bNgLL7xQoUKF++6779133501a5bd
wQdkndL8NmjQ4P7775ePq1Wr1g8//GA41yr27Nkjax47dqz8vmvXrjfeeENm
njRpkjZDdHR0YGCgdL2qVasmH/rUU0/9/e9/X758uf40o3ZngkZCpyapG/K3
bt1qrqE6Ym7cuFEr6d69u1TmzJkz165d69ixY5UqVapXr65f5NSpUy1btpQ6
SCWrVq0qgZo8eXJWVpZ55Y7IX0c25+mnn5ZPl8g0bNhw9erVBQ7yr5SUlCFD
hnz66ac1a9aU+aUyb731VkhISHp6ujbPDXcS2famTZtKYCtXrlypUqXnnnvu
u+++U3/30kM9uF2mTBn9+Vhl3759Km7yBXG+Evl7yWxt27Y1T/rwww9lUt26
dfWF69evn/aHzz77rNTmC5YEv4B4/sH9eGZnZ6triDNmzDBPlXZercRus+l7
3I+nHBfusjly5Ih5qhxSZQ2dO3e2stJezKrvuyIhlWNfuXLl5Jj1xRdfkH8B
sCvzWs66PTEhiw/Lj/wi/3VnbT169HjmmWckJ5I2R9Il+f2DDz7Qpkq79PDD
D/uZSDfbcNxUXfR+/fqp00d6kkdIkyiJmHk9CxYs0Nagbq6YM2fOa6+9Zp7z
H//4hyEHSU5OrlevnnnOW2+99aefftLPqc61Sou6ZcsWlRCJMWPGqKmLFi1S
VxbMJJvTViLbJcFRPQpJ0+R3CZ2aVKj8SyVBEhBJ8dSnSJdbmyqZpt3KSDZ6
7tw5V/6gkmDafeC9Z8+e5vwrMjJStsXutr/00ktXr15VsznfSTp06GB3DUI2
x5U6+4ZmzZqpv5R5Un5+vnwLZOqIESOcrOHChQsqbuZT3ELSZJl0zz33OFq8
T58+fqU1X3A/+GbE0514pqSkfG9jd1yIDRs2qF39+PHjllXaixXF/qk5cOCA
CqYcy9yrZolhYTzlMFezZk2ZX3I6+S/5FwC7os+l/Dhq07d9V2s/8l8pdHO1
dm8tS0hIqFKlipQ/+OCDY8eOPXz4cHh4eEhIiCqUzOLEiRPazCr/qlSpUoUK
FaQdi4+Pl/xIflFPyJYtW1Yyl8DAwFOnTqWnpy9evFjlCM8++6y2BpV/qVtW
JFlbtmyZHLjnz5//9ttvq4NLt27dtJmljW3QoIEU3n777V26dNm5c2dUVNTC
hQvr1KmjZtafdFX5l6z/oYcekpb5u+++Gzx4cERERIFtbGR158bzzz8vi0tn
QGoYFhb26aefqvUYnhC3e//hTeRf//Vf/6UOH927d584caKaJOmhClft2rUl
M5XKyKfLVss2SqFkPc6HvyuwHUqqVq3qZ3tQqGvXrlIl+auNGzdO/cnKlClj
yL9ef/11lVJJNnr06NEzZ85IYtixY0eVZhruZrG7k6xdu1YF6rPPPtu0aVNM
TIxUW/5qEk8/26Mf2dnZzuvsM95//30/29MZdqeqMQdatmzpZA2SO6tg7tix
wzw1NDRUTTWf8lVKc77gfvDNiKe18dT75JNPZA0PP/xwTo5b5w9LCsvjmZub
K0dYOepNmDBBHUzffPNNKbSovt7Ownh+/fXX6ois/kv+BcAs81qOIfnSUjA3
r4LZ7VoHBARIoXTdJUnRlycmJqosSd9GabeoSRajn1k1bn6mWyNGjhypMgJt
yCaVf/nZrjrp7zaUY4paiXTmL1y4oArnzZvnZ7vUZRgKXmZWt2k98MAD2itR
tGcNqlWrZhi+YO7cuSqJM9xRmZeX98QTT5jPoVmVfxnSyQJbRlmrVi0pf++9
9wx9ku3bt6vUKSgoyPwReurWdwnL5s2b9eVxcXHqT6bPvy5evKhKli5daliP
pKh+tmuO+kK7O4m/v7+fbQQqwyPhsbGxauWl5y5EtQP/61//sjtVcmqZ2rhx
YydrWLdunQqa3UsGy5YtU1MdveCmNOcL7gffjHhaG09FGoouXbqoPXncuHFu
1bLksDyeWgyV1q1bp6WlWVPXksCqeE6aNMnP9rxtSsrvJ7HJvwCYrdsTY06+
1I9McmfN5q61HCXV/WZTpkwxzz9jxgw/21Ut7RFXlX9JzmKYMzg4WB0gDM9Z
7969W5VfunRJlagW9e6779ZKNJIAqspoL5/629/+Jv/99ttvzXU7e/asWnNY
WJgq0fKvmTNnGmaOiopatGiR3deFvPXWW7KI9MH0hVblXzVr1jQkLHv37lWV
NGSISpMmTfxsZzjNk/Tuu+8+mU2yJ/OkMWPGGPKv5OTkRTbmy2o9evSQOf/6
17/qC+3mXzt37pQ1HD582LCG7OxsdS3Pquc7Ms9svryzh4d/5ENdr6E66Ddt
2tTu1Pr168tUObg7WYOWYdm913TLli1qqvkJR6Xo8oWY+O0bwwd4+Ec+1PUa
uh98s6KL5/UjO9KnD/bwj3yo6zUsiniK8PBw7aZx7flZ952MjF+79KiHf+RD
Xa+h5fGU/EsbotPPdnfE8uXLXV/cueRfw6Lnd/Lwj3yo6zW0JJ4RERHly5eX
bsyePXu0QvIvAGYhiw87yr9kkjtrNnetJQtQDXtcXJx5/tOnT6upkkapEpV/
Ga6YiMmTJ0v5Qw89ZCg/cuSI3fzrk08+sVtDWbNMbdSokfqvusFg9uzZdmdW
gxsPGjRI/VfLv2Jibpylpqen79ixo2fPniqrKqL8y5w5qrvLnnrqKbu1mjp1
qp/tOp2TmicmJqrNXLt2rXmq5LCG/MtMkqajR4+OHj1a/l4u5l9mSUlJK1eu
1K57WpV/XTn485nJNTz8Ix/qeg3V0Hlffvml3akvvfSSn4Ox4DSSzKqgRUZG
mqdK/0pN1a4CGxRdvrDn+PhRy1/y8I98qOs1dD/4ZkUXz4xlEy81edXDP/Kh
rtfQ8nhK+yO9ZXVORtqxAQMGGE5AuWNHWNTgLis9/CMf6noNi2L/FHL0lAa2
YcOGfrbbHubNm1fYNdh1dk3QrjZ/8vCPfKjrNXQ/nnKgf/bZZ2W24cOH68vJ
vwCYeTL/WrNmjZ8LtK6+yr/MZ5xU/mXuwzjKv9q3b2+3hlLu98fgb9Jy6k/9
OaLd8ajyr/Lly9s94ufm5i5cuLBJkyavv/76gw8+aFhJEeVfgwcPNszZqVMn
VwLuZCBESRvVPHavoGmVN+Rf0ucPDAysX79+9erVVe9I42L+deXKlZCQEPnT
v/jii+phOr3Sk381atTIz3b7qN2p6pxA3759naxBO+lh9720KgcvU6aMo45r
ac6/3A++WWnOv6yN58yZM++99161b3/44YeOLuDeNO/Pv4pi/9TIIUy9DMt8
/8nN8f78y/14tmzZ0s/2pLlhaGXyLwBmnrz/UI6YfrZTas845bH8S5IpP9vA
FPL7uXPn1LKyWid105pflX9Vq1bNvNozZ86op678bOMQNmzYsE2bNsHBwXv3
7n333XfdzL+kYS9btqzd/EvCYpi5adOmUi7rdx5wJ6/L2b9/v9oQR5f5KlWq
pM+/rl279vnnn6tF7rzzTjmC//DDD0OHDpW/affu3V3MvzZs2KBWKx5//PF/
/vOf8peSrTt58qSTtPQmeP/9hyqDVruomdpz9G89sLONmZkqksuWLTNPDQoK
8rMNWeBo8dJ8/6H7wTcrzfcfWhVPaWTUMP7i1Vdf3bZtm+t1cJ33339YFPun
3vjx41WQHQ3OUyjef/+h+/E0v+nPLt53CaDAs+NvqM78Lbfcoo2P4ZxV+den
n35qd/3qIP7VV18V2PIa9TiY3ee2zJzkXyrJkknaw2Ia1T67k39peaIr+dew
YcOk/I033nBli+xKSUlRH7d+/XrzVDkuq6la/tWvXz8/20N8cuw2PAI2YMAA
V/Kv1NRUNfSWzGm+Zc7a/Mv7qVfSSDwlLIZJ2tuObvhKGvUEn933+Ehu62d6
/5deaR4vwpLgGxBPN+OZm5urBnqV40jHjh1LyVCHdrkfz65du8rR5+WXX7Y7
dfHixWolLr6mpKRzP57kXwAKxf7483HWjz+flpam2h+7ZyyjoqKCgoJ++ukn
7dq9VflXxYoVk5OTDTPLPFKuz4bkMOTn4AaDjIyMIBvtMRlH+VdmZqa6j9Hu
c2SvvPJKofIvc2u/YMEC1/OvlStXqs23O4yVrEG26Iavd1HjzNt9KlkN9KTP
v9Tg8/p3nGnUK71umH9pg8+fP3/esIarV6+q2Jae/Ov48eMqGvPnzzdMUvls
+fLl9W+1tuurr77y+8/3MijXrl1T+16vXr0cLVua8wVLgm9APN2M54gRI2TO
cuXKGRrMUsj9eE6YMMHPdvux9lpGPTkUytT77rvPykp7MffjKcesaHvU0F7v
vPOO+q95NDAApZa1719WVNc6MDBQX6huTpNMJzExUV8uXUF1t7k+27Iq/xLN
mzfX35Kdl5fXuHFjdRzXRt5Wp78qVapkHt5c5Q5Vq1bVTrc6yb/UuO5z5841
TJLMQk2ym39JrqQvVNeAunfvboiSerzXxfxL0sbq1avLpCZNmhhOFJ85c0Y9
PaG9M9oRdUlLar59+3/cu3Xx4kXtPcta/vXGG2/If/39/Q0rkY9Tg9Xbzb/0
O4n2ElVZv2El6g7GUpV/FfyR0spXRnv3QYHtL6veZaCNHuOEltIa+hXjxo1T
f9moKIdPnZTmfKHAiuAbEE934int9uOPP25uQkstN+N59uxZ9Xyu4TBdYGve
1XXzzz77zPp6eyvLv+8Kz38B8CQ1umD9+vXT0tK0F+ZKg69u83vkkUcmTJhw
6NAhSX+WLVum2r3y5cvrcx+r8i910eTTTz9dvXr1iRMnli5dqm4R9PvPm7Jy
c3PVGEd33HGHJB3btm2T2krS8b//+79qZv2bZZzcf/jqq6/62V7/ISlSVlZW
enr6gQMHZFtU8uVney2j/qWWd999t6pJto0qVMNP3X777WPHjk1OTpaVSNIh
1ZOEUQ0k6Er+JZYsWaI+tF69epISSk/7+PHjEvmHH37YzzY0ovleCwP5aPWJ
ZcuW7dWr186dO3/77bfQ0FDt5V/6/Ktjx46q2lKZK1euyObIxw0aNEgbQ0OW
0p9rNe8kly9flm30sz0HHRERIYFKSkoKCwuTxE37uJEjRzqvsy/R3qAth+99
+/bJn0P+9GowZPkqGcZF6dmz5ys2sbGx+nK1w8v3a8qUKRLPmJgYiaGKc0BA
gJNPL+X5giXB1yOe7sRTG8xzyJAh8xyTlqc4Nq4YuL9/ai/Z/J//+R9ZVhaR
Q3BISIhq8ytWrOhkZ/Y9ln/fFfIvAJ4UGBioGnZJf2rUqKGVr1ixQqVgBnfd
dZfkR/o1WJV/tWrVSrtspPfhhx9q7xpTJDt78sknzXNKm9y7d2/9nE7yLzl+
qSEK/f5I/cRtt90mzbVKT4TkI9r7rdR9j2pm7f01knpUqFBBq4Baj+Q10rtQ
mYiL+VeB7TBh3iI/28BWjt66a7Br1y51Pc5AtkIlzlr+Jdmc/K31cVO//POf
/5w9e7b6Xbr9cnxX89vdSWSqYcP9bLfByLar62uievXqrtTcNwQHBxuGkfSz
vTrccM1UfPPNN2qqpL368sTExD//+c/mv6Akuc4fxizl+UKBFcHXI57uxFMN
13lDlo+F6M3c3D8zMzM/+OADu2GUo5vdx359m7Xfd4X8C4AnJScnS7NTqVIl
SawaNGignxQXFycd71q1akkiJh371157rXPnzuZBlqzKvwYMGCB5liRQzzzz
jGRGUqW33357+vTphkFiFfWolywos0mr+/zzzzdu3Nh8QHeSfxXYBv3+9ttv
a9asKbnGgw8++Pnnnx84cKDA1g2uX79++fLlpfLa4BKSiElaIYX33ntvjx49
tJVER0fLSiQrkZVUqVLlyy+/VCmbZKkSAf3jUc7zrwLbyCeNGjWSnEVW9fDD
D0sGN3bsWPMrkp2Ij4+XP9nTTz+tpZaSqO7evfu7777z+8/x5yUF6969e+3a
teWPW7FiRdle9QYZifYPP/xw9913S0C0l1Y72km2bt0q2fEjjzwiFZata968
uVSgwPaKbfkjSqwcPTPuq2TDJVBVq1aVHFzC0qRJE7sHfSddAuloDRw48IUX
XlB/F0mcx48ff8P3JZEvFFgRfA3xLHAjno5OJZXm/KvA7f1TWuY5c+b8/e9/
l8OZam8bNmwobYXh5GTpYeH3XSH/AlDaaPlXcVfEp0j6LMmjha86BQAAAOAD
yL8AAAAAwDPIvwAAAADAM8i/AAAAAMAzyL8AAAAAwDP279+/ceNGF0dZBwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACgRDh69Gjjxo2rVatWrly5xx57zN/f//Tp064vHhAQ4OfYrFmziqziXsrN
eCoRERFNmzZ9/PHHy5cv/9xzz/3www/x8fFFUNkS4KbjuXXrVid7pqZDhw5F
vAXexf3988qVK127dn3rrbfuvffeqlWrvvvuu4MHD87Kyiqa+no79+OZkJAg
O2H9+vUrVap03333vf322xMnTszLyyua+no7D8eT4AMAPG/q1Klly5Y19Ejv
vPPODRs2uLiGBg0akH9p3I+nGD9+/O23325YifR19+zZU3Q1907uxJP8y8z9
/XPLli3333+/OYyPPvpoREREkVbeC7kfz4ULF0q33xzPevXqXb16tUgr74U8
HE+CDwDwvP379996661yuKlTp8706dPDw8Ol5//YY49JyV133XX+/HlXVlK9
enWZv1WrVrPsiYmJKeqt8B6WxHPlypW33HKLLFK/fv2wsLBjx46FhIRUrFhR
Sp5++ulSdZXBzXgmJCTY3SeVkSNHSpzLlCmzd+9ez2xOsXN//4yPj69SpYrM
/6c//UmWPXr06MGDB4cNG1apUiUprFWrVkZGhgc2xEu4H89Dhw7ddtttMn+N
GjVkn4yMjNy2bVvbtm3Var/44gsPbIX38HA8CT4AoFi8+eabcqB58sknk5KS
tMLjx49XrlxZyv/973/fcA2SDqhkQQ6dRVnTksH9eObl5T3++OMy87vvvpud
na2Vb968WZ2YnTBhQpFU3Su5H08n/vu//1tW0qNHD7erWWK4H89+/frJnBUq
VIiKitKXa/vnzJkzra+3t3Iznvn5+bVr15Y5n3322fT0dP2kBQsWqHhu2bKl
KGrunTwZT4IPACgWJ0+eVEeZqVOnGiZ169ZN3fVxw7PZERERaiWpqalFVdES
wpJ4Llu2TK3k2LFjhknvvPOOlP/rX/+ysM7ezJJ4OrJo0SJZw0svvaRPcn2b
JfH8+OOPZc6//e1v5klPPPGETGrTpo1VFfZy7sdTW8OqVavMUxs2bCiTvvnm
Gwvr7M08HE+CDwAoFqNHj5ZDTJkyZfQnG5V9+/apY9O6deucr2TJkiXqZqQi
q2aJYUk8GzduLLO9+OKL5knST2jVqlWvXr0sq7F3sySedskKH3zwwXLlyv36
669W1LRksCSeb731lsz26aefmifVqlVLJjVq1MiyGns39+O5cOFCNVtycrJ5
6uDBg0tV0+rheBJ8AECxaNasmRxiXnjhBfOk/Pz88uXLy9QRI0Y4X8mQIUNk
tnfeeUeOjB988IEcsCpXrly/fv0OHTqYD6O+zZJ4VqtWTWbr169f0dSxJLEk
nnZ99dVXsmyfPn3crmNJYkk827VrJ7PJd9wwGmd4eLh6akZ60VZW2ou5H89x
48bJPLfccovdyzohISEqHyklY/F5OJ4EHwBQLN5//305xDRo0MDu1EceeUSm
tmzZ0vlKmjZtKrOZB+sTDzzwwNKlS4ug4l7K/Xjm5OSoTuzixYtViRz9S+2N
nZbsn2Y7duyQBR988MHSNr6ZJfG8ePGiGm/n+eefX7t2bUpKSmJi4rx589Ti
L7/8cukZf8P9eKpd0c/Bw7NNmjRRUyXm1tTYu3k4ngQfAFAs6tat6+f4eSL1
bHLjxo2dr6RevXrqOPXmm2/OnDkzIiJi69atffr0Uacr77jjDsNz+j7M/Xie
P39eBXPXrl2bN29+77331FDMVapUadiw4aZNm4qk3t7Kkv3T0WpLz2UajVXx
PHv2rPat1/vqq68kHbO40l7M/XimpaVVqFBBZvvHP/5hmHT48GFtGPYDBw5Y
VWdv5uF4EnwA8EmHz6ZM2RXj4R/5UNdrqI5oTZs2tTu1fv36fi6MwSuzPfPM
M82aNbt+/bq+XBIxSb78bOP4uV4lZy6tLIjy9/SPfKjL3I/nwYMH1UG/ffv2
alRJA4lz4YLmWNyRs/um7fLwj3yo6zW0ZP80UA99PPHEE5YPu3E6duXmrf4e
/pEPdb2GVsUzLCysRo0a5p1T+s9HjhxxvT7OXT+wI23iYA//yIe6XkNL4jlq
1CgVvU8++WT//v1Xr16Njo4ODg5W75tQdu/eXYjAORB+Mn3WmngP/8iHul5D
z8fTY8EHAHjMkkPnGk3Z6+Ef+VDXa/jee+/J8eXLL7+0O/Wll15ys8OvBq2S
PMKaG71O9y7Y4ufpH/lQl7kfz9WrV2vH/Vq1akmyEBcXl5qaumfPns8++0yV
jx07tlBhc+To0kOzvwv18I98qOs1tHz/zM3Nfeqpp2Sp0NBQ15dy0d79vYND
/Dz8Ix/qeg0tiefcuXPLlCkjc3788cfbtm1LTk5OSEhYu3btX/7yFz/bS5p2
7ChECuNE+oKJif96zcM/8qGu19CSeObl5X399dfmZPb2229v27at+v3o0aOF
CJwDK7ZfajYwysM/8qGu19Dz8fRY8AEAHuP9+VejRo3k+CJHPbtTH330UZna
t2/fm47A1q1b1SHMmvfben3+5X48N27cqCJWs2bNtLQ0w9RPPvlEdXFzcnJc
r5Uj3p9/Wb5/qrH97777bsPrfizh/fmX+/G8dOmSRE9m+/bbbw2TJLdVNyXW
qFFDfne9Vo54f/5l4f65dOnSt99+W112KVu27EcffRQeHj5r1izVGsTFxble
K0e8P/8qrnh6IPgAAI/x/vsPO3XqJMeX2rVr250q/XyZOmnSpJuOwJkzZ9Qh
bOHChTe9kv/j9fcfuh/PEydOqIiFhISYp27ZskVNPXz4sOu1csT77z+0fP/8
8MMPZZHvv//e9UVc5/33H7ofzxkzZqg9MCYmxjx1/fr1Fp5v8f77D4ui/ZQM
V8tehw0bpk4XFGoNjnj//YfFHs+iCz4AABr1vpWyZcuaR9g7evSo6ko5f9+K
ZFg7d+785Zdf7E7dtWuXWsn27dstq7QXcz+eWVlZarbVq1ebp0qnV021+8JQ
3+N+PPVkX1VjS8puaXVNSwb34xkUFCTz3HbbbXYH5db2z2XLlllZb29l7f5p
9tFHH/nZXu3hXjVLDK+KZ2kLPgDAY44fP64OavPnzzdMGjBggJSXL1/e+Z1a
c+fOldmkW3v69Gnz1EGDBvnZhkDMzMy0sNpey/14iqefflrm7N+/v3nSihUr
1PrPnz9vWaW9mCXx1PTq1cvPdnec1dUsMdyPZ1hYmFpDZGSkeaq2f9ptDXyP
+/HMz8+XHv4rr7wyY8YMwyT5jqvn7Kx63tP7eTieBB8AUFxef/11P9tbe/Qp
UkZGxhNPPCHljRo1cr54UlKSGuTw888/l8OZflJMTIx6VMTReFY+yc14ipEj
R8qcFStWNNzilZWV9eKLL8qk5557zvp6eyv346lRz+/7+/sXQTVLDDfjeeXK
FTVk98cff2z4vmv756OPPloUNfdO7u+fX375pcz57LPPGt6b9t133/nZXjxR
qt5S5+F4EnwAQLHYsmWLuilLOlT79u1LT0/fuHGjGun3zjvvPHXqlH7mnj17
vmITGxurFfbu3VudtPzggw/WrVsni+zZs2fYsGH33HOPFFatWvXChQse36xi
4348c3JypPsh81euXDkoKOjAgQORkZGzZ89+5pln1M05Bw8e9PhmFRv346kk
JCSo8fxnzZrlwep7HffjOXXqVPV9l67yokWLjh8/Hh4eLoVqYMkyZcps3brV
45tVbNyP5969e9WrpurWrSvt58mTJxcuXKhG2pE91nwlyLd5OJ4EHwBQXIKD
g9UhT69ChQorVxof7f/mm2/UVOl0aYX5+fktWrTws6d69erSN/Ps1hQ/N+NZ
YLv7Rd2FaHD//fdbM5JJieJ+PIUksGrSmTNnPFVxL+V+PPv376+uehtUqlRJ
EjHPbYl3cD+e48ePV3e76d1+++2l8+Y3D8eT4AMAisvu3bu/+OKLqlWrynHn
kUceadKkibkHW+C0f7tz587GjRs/9thj5cqVq1ixYt26dYcNG1YUo3yXCO7H
MzMzc+jQoS+//PI999xz7733/vWvf+3UqdOlS4UYzNmXuB9P2TmlXJb1SH29
nfvxjImJadGixZtvvlm5cuUqVaq88847sn8mJSV5pPpex/14hoeHyxpq1Kgh
ie2TTz7ZvHnzY8eOeaTu3sjD8ST4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAB4lf8H2G0vag==
    "], {{0, 458}, {1152, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{576., Automatic},
  ImageSizeRaw->{1152, 458},
  PlotRange->{{0, 1152}, {0, 458}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.7800946219677763`*^9, 3.780094674107415*^9, 3.7800947169618473`*^9, 
   3.780094757905142*^9, 3.7800948175160427`*^9, 3.780094896572187*^9, {
   3.780094937531969*^9, 3.7800949854738483`*^9}, {3.780095120807604*^9, 
   3.780095155264276*^9}, 3.780095189997753*^9, 3.78009539813489*^9, {
   3.780095449389864*^9, 3.780095456184971*^9}, 3.780096513236054*^9, 
   3.78009655706621*^9, 3.7800966500507193`*^9, 3.7800967733962803`*^9, {
   3.780125757269415*^9, 3.780125785354774*^9}, {3.78013075147167*^9, 
   3.780130771091234*^9}, {3.780130812549017*^9, 3.780130840673499*^9}, 
   3.780130976649193*^9, 3.780138400867032*^9, 3.780330685367034*^9, 
   3.780334150349985*^9, 3.7803367998220463`*^9, 3.782464206163672*^9},
 CellLabel->"Out[5]=",
 CellID->163079264]
}, Open  ]],

Cell["\<\
Find an estimate of the conditional Cumulative Distribution Function (CDF) at \
the date 2017-10-01:\
\>", "Text",
 CellChangeTimes->{{3.7800952133762712`*^9, 3.7800952497692432`*^9}, {
  3.7800954260967607`*^9, 3.780095430518674*^9}, {3.780095848166836*^9, 
  3.7800958973082447`*^9}},
 CellID->396030784],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Through", "[", 
       RowBox[{"qFuncs", "[", 
        RowBox[{"AbsoluteTime", "[", 
         RowBox[{"{", 
          RowBox[{"2017", ",", "10", ",", "1"}], "}"}], "]"}], "]"}], "]"}], 
      ",", "probs"}], "}"}], "]"}], ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression","SequenceIcon",GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["344", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    Sequence[
    PlotTheme -> "Detailed", FrameLabel -> {"Temperature", "Probability"}],
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellChangeTimes->{{3.7800952552657824`*^9, 3.780095362398254*^9}, {
  3.780095408470759*^9, 3.780095421766116*^9}, {3.780096628630433*^9, 
  3.780096640142277*^9}, {3.780125735315053*^9, 3.780125743928648*^9}},
 CellLabel->"In[6]:=",
 CellID->776533662],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{17.286111390516925`, 0.01}, {21.990884747020523`, 0.1}, {
       23.163185764347002`, 0.2}, {23.866257447372604`, 
       0.30000000000000004`}, {24.383513985651582`, 0.4}, {24.89891807480469, 
       0.5}, {25.549254419545438`, 0.6}, {25.908750883713402`, 
       0.7000000000000001}, {26.368767993931492`, 0.8}, {27.296235542003803`, 
       0.9}, {28.743511468924435`, 0.99}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{17.047415555550103`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox["\"Temperature\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{17.047415555550103`, 28.743511468924435`}, {0, 0.99}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.780095284686401*^9, 3.7800953627302933`*^9}, {
   3.780095422510988*^9, 3.780095458924457*^9}, 3.780096557185153*^9, {
   3.7800966421752157`*^9, 3.780096650206452*^9}, 3.780096775487739*^9, {
   3.780125748082849*^9, 3.78012575740136*^9}, 3.78013085253161*^9, 
   3.7801309768768673`*^9, 3.7801384010585318`*^9, 3.7803306855661287`*^9, 
   3.78033415058818*^9, 3.780336800045515*^9, 3.782464206385282*^9},
 CellLabel->"Out[6]=",
 CellID->1939983852]
}, Open  ]],

Cell[TextData[{
 "Find outliers in the temperature data -- we define outliers as points below \
or above the ",
 Cell[BoxData[
  FormBox["0.02", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["0.98", TraditionalForm]]],
 " regression quantiles respectively: "
}], "Text",
 CellChangeTimes->{{3.78009590907605*^9, 3.7800960022620173`*^9}, {
  3.780096440444972*^9, 3.7800964452271433`*^9}, {3.780125591176228*^9, 
  3.780125619561255*^9}},
 CellID->1562030865],

Cell[BoxData[
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"tempData", ",", "10", ",", 
     RowBox[{"{", 
      RowBox[{"0.02", ",", "0.98"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780096410072682*^9, 3.7800964342343607`*^9}, {
  3.780130856689616*^9, 3.780130861030645*^9}},
 CellLabel->"In[7]:=",
 CellID->674840832],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bottomOutliers", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"tempData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "<", 
       RowBox[{
        RowBox[{
        "qFuncs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "[", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}]}], "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topOutliers", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"tempData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ">", 
       RowBox[{
        RowBox[{"qFuncs", "\[LeftDoubleBracket]", 
         RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "[", 
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "]"}]}], "&"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.780096032335739*^9, 3.780096062466174*^9}, {
  3.780096290477129*^9, 3.780096305687808*^9}, {3.780096424471464*^9, 
  3.780096424896244*^9}, {3.7801308872370462`*^9, 3.780130888282569*^9}},
 CellLabel->"In[8]:=",
 CellID->240731310],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tempData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{
          "qFuncs", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "[", "#", "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"tempData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"qFuncs", "\[LeftDoubleBracket]", 
           RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], "[", "#", "]"}]}], 
        "}"}], "&"}], "/@", 
      RowBox[{"tempData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     "bottomOutliers", ",", "topOutliers"}], "}"}], ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression","SequenceIcon",GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["7", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["1736", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    Sequence[
    PlotTheme -> "Detailed", 
     PlotLegends -> {
      "original data", "bottom regression quantile", 
       "top regression quantile", "bottom outliers", "top outliers"}, 
     Joined -> {False, True, True, False, False}, PlotStyle -> {{Gray, 
        PointSize[0.002]}, {Black, Thin}, {Black, Thin}, {
        PointSize[0.012]}, {
        PointSize[0.012]}}, AspectRatio -> 1/4, 
     FrameLabel -> {"Time", "Temperature"}, ImageSize -> Large],
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellChangeTimes->{{3.780096063335003*^9, 3.780096169390332*^9}, 
   3.780096349295014*^9, {3.780096457480589*^9, 3.780096463497715*^9}, {
   3.7800965223491793`*^9, 3.780096574836399*^9}, {3.780125823054391*^9, 
   3.780126163147541*^9}, {3.780130894023983*^9, 3.780130897622118*^9}},
 CellLabel->"In[10]:=",
 CellID->2145678552],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
NP9/hCdZ+WTFV7C8IHXgZpng5rkrnZuSmcsmwc+NBySZLGPmrIA7pyXlnhrN
zPsPTos7uLihi+UVPtfgRQnml1tuMYvewyktubX39jNLlLegXkPHtgBPyj9s
4KxKXu83oyj/8INDd5+cPryL5SWucbCk4tk903vMUVdgpamc06rxzOJ6uDTY
u7t4ObO031aZYO87ow4XK2YVK/imZeLR872Z+b7wp676oXVvWJ4j3AvHFtjt
kYkp/7kEa/Rq6/Xk//nPW1gtYmTu7kWU//SJwvx/Uj1Nx5yZNw527//3p6g3
s88SON5Vs7K2TpfVHwtP+p00p881ZkkefP/k9T1q8cxtb+CLFVeOd69h5vaK
xvnKvZ/1YBaz61g4V4v7OMyQOWoRfG3Bb51eiszinTDX//CdyHcsD5NegJdU
cp+/uMOs8hpun/A6ePBpZn6PbehX9H+IbXcyC01htVEFl11WMKcugE+UO6bO
nMlctg0OL2jexTNl5pyHh694uVd+EDPvJdw/1O7Bre+U/8ltRz+51t9rzVvK
/0zgWy2Ry/vdp/xvPrx987XupAvMbVvhmAte04ckMXOzYMfBKQv3bmd2fb79
33mePb89mDmqG+5V8sDDaRGz2HAH5vXxozcfm8EsdYPPafdreG/JrLIZ3j/o
VLqBATM/A9ZPN3jvM5hZWA5/XlFxLb4Xc+ov+MHzawf2faH8U3+nTDBoC9rF
Kso/XeGLLc1Nk28z8yLgDMem1IPZzD6n4cbcgOzGRGbREzhk5tvpU3YxS77D
9pbXslI2MLfpxmD9JAYP/BvAzHWG0w+tuhK4hNl1Azx2FvdlwzzmqJNwWx3n
bIAzs/gR3BCxeeVfB2ZpJyxn08s1YyqzCneXTDBjinLyMntm/kz4klgx2pJ+
XbgethcvmaJLvz/1ONzsE6ts5ET1l8Di919NnOdS/V/gWF/1p6LFVP/wWJlg
7TdPi64VVL8D7PfQ8tDWUKp/Lbz0zxAjs51Uf8o/54ea9TpC9d+Dlylfk/Y+
R/W3wd7jFm2wuUX1D90tE8ybdn9MIr3+UVPhicuFtoZfqf5geHd1Q3uoEr3/
iXCzqU52hwa9/3dg/g3dwL2UV/M/w72GjXISTKD3X2OPTFBU6bda3ZnefwEs
3abWpOTLXBYIt4qD32qFMXMS4JUd51a77aP8WwKXvOqRk5VG6/8TvK8zV2Jw
nda/2l7MC69lt+6/oPVvC9tqyp7EtdH6XwmPEnzssbkf5d+H4MAPw6IPGVH+
XQTvTbrh88yB8u9GuGez0q3J9LyKVffh9VljcfPZLnr+J8I/LoaFJ5yl598f
Fs7u22fXY3r+RbBNqdF/6W30/BfCT2/3MelS12X1v4NzJR++hk1iLhuwH+/H
gq6+xn7MHBt43rCQ/Sr7mXnLYNWUgwkml5l99sMDA0RTN9Uziy7Dzwafvqig
zPZHSR1cOV6xx51JzG1942SCIx6tLtcCmbmW8OH+iZc+pzC7+sAFZWZ9F5Uy
R+2BH5n+xX/M4ouw1gJ11UoL2v9r4asuoemVK2n/730Az6umruGv47T/W8DD
C7S7J1UyC71gRZNgUfwAdv6k7oK3Rgxy6HZgLsuFj2Wo7hFuY+a8gVdfCrz1
voiZpyjC/JuhN9/jJ51/PDhw65TzN6zY+SjyhIsEN8eqhzFLdsCK7ekz511i
bsuBPUU/vEM7mblVcIluYdVaS3Y+uyr8h/7xnEzHPpw5agxsM+a/5Ho678Ue
8JJz53Mdu+n8j4YbDKeWrrVj/YJKNvwq02P+vF3M/ErY1VSW++kxs5BzEH/+
dblZpoNYf5JqDPd2Px6r6clcNg8O6r5TceokM2crfORK6H/FlN/zzsLJuwpG
bzZn/ZHPMzgmeHc/SSSz6A+8WtieGHuPWTLqEH5eUbtNmTLrx9rmwKvL93mI
PJm5m+Asy+KFt88wu6bDendSM73bmaPK4LaNOtm+k6n/+wlrLZn2+NZuZqne
YfSjIeprN1Yyq7jA0sKD8ttGsn6TvxFOspF8fC5kFqbBP9pT9wbeYE4thZUb
reZO6Uf97ze4ZVhshqMn9b+68djvDx1u255J/a8T7DTHJ6Gxi9knDG72aOEE
T2P9tCgVPpolSFQ5zCx5CK9w8rpbUs/c9hW24J7quq9J/b9OgkxQfndTkRmf
+n9HOEldsipxBfX/6+BBh4PyuuOo/z8G378VM8O7gPr/+7Att39dQQ3l/x2w
3Fh5nnxPNo/wtY7g+4WuaJo8mlk4Hd63xvaW/1yaf4Tw8tTYwI0RNP8kw9m7
HY6GnKT55x7clL2pl0sJzT+tcPpeI9++rTT/DEmUCVZluHidVmfzlcgevhnd
dmHwJGZJEDz6aP/+3kuZ247Ak8IzDSNiKf+/DYceuV3gl0PzXzO8NNIrcNhz
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
Lyp1Zo46AzvZTR8raVbj/w/HCltV
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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
526qT5mqS/2PDewyvHpwrSr1P2Gw0evsRaYbqP/Jhye6eHkGSVL+Lthy8baP
JeKUf9o9LmuzeJHa1GmUfxN8Iv7S8b18lP8g3PXZee/DH9T/hcC2W2d8WETP
G7wewPWd4s2R9LyB0w4LTFdTmPea+r8p97E+8Cs0ZD+j/k8eXj2OE6d/n/o/
S7haW89mUgb1vxfgZPFq8Vfx1P/mwt65rXFp4dT/foBVTNZWRvhR/yvwgMsq
2nokNNKD+t/18Nv72sUc6nfNzWHL764GTfup/z0Py29KmbfImPrfO/CGYp+x
Xtup/22C5d4XdX1jUf878SH2vwfTMs+up/zr4MS4BfJSKyj/Hvj5y2uHvs+n
/L6w3qmty+rp+UNLNrx4+L5u/UTK3wgLu3Ne/hil+Qd/HuoTlXpn2UGaf0jB
eWHtsmE9NP8wgSXTznye1kzzDx943gtLz1tvaP6RBTtJylU4v6T5Rz08UZiT
Z1pI84+x+ei3nrivss6h+ccqWNd129jIf/MPQ/i+U6VE3zWaf5yGS77lWttH
0vwjHTZSuJsvTM8j2LWwst9x3nZ6HuHFU4D+QjRL9D3NYziScPAagU4eZ5p/
7IJTJm3RYtvR/McTPvPxx7IyS8p/Ax6Z0rXfeTflry7422/ktWjvpPy/4XX/
LffcuY3yL33EZV2/3LjwvArl14PFtH0z++n5hJQHfPxsPV+ADOVPhi+c8Z5g
uIryV8Hy3rIxBkso/09Y/8XVa+dpvtW3uBD9WdDR0a8ilF8H1hQ1uxg2nfK7
wm+Sp7NsBSh/Iix/XOnzCX7KXw7rvoxwLeSh/D/gn83FxaxfNP9b+Bj1+pB3
/u9vNP/Thk30XDd+o/dvHVzgktXGC5d/ovlfPLy6vNowqovmfy/hg4cj8zX/
zf++wZo6Juvlmmn+N78I6+mt50kHaV5orgl71AVxa+po/ncMPv3b4vM5mi8W
xsJR+78Gur2i+ecL+Jp2X3p2Bc0/B2DnbxOlVtF8ki32BOtVXN/Q5xKaf6rB
TX67Pg6+oPmnAyz5taNT+d/771Fwqrj+q7dPKf8zWEZDLzD3CeX/AqfcuvCz
mZ6vOIg+5bIaY3JH9cjxKnC6mpf7NHLVYfjrl4idYmSeK/DPU5OUnchSRfAK
mZ5GEfr55p9gpa7B9RPp94fMesZlhTXpWKjS/LVQCXY1F3Msoc/bZwtr3fZw
jvj3/OcSbCYedjrjJeV/BE/uOJ0yqZzy98Bp7EPDGfT8iDPjOerRZEf/y/S+
dYsiPHNVrs2TGspvDQdLmqWvq6f8F2GjDj/LTno+5ZAHP080TnjXQvk74dXp
A8endlB+oRdcVo+qy7B3D+XfBO+4wy+3oZfyH4DvKD3fuuzf/DcYPipVJ2Mw
RPnvwy0lu2cX/qb8bbD+Tpc/+8fS9S9YjP17huYfFXoeJyEHZ+h8X2b67/1v
C1hJJz4ofSZd/4HwBiMbZRkxuv5z4C7OMYOBhXT9t8A3rn5o7KB5sdDkEqz3
tjVdgmvp/peFHxk5+tvI0f2/Fy7Mqqv+sYXuf39YKkeyPpfmx1W34QO3Am+m
6tD93wTnfJy/p8SQ7v8JL7ks9+v8PKLmdP9Lw5OWWyZftqb73xTOf2howXKk
+/8c3JXIrybiRvk5cPvSi5ZzvCl/A8wfJFauFkj5x5VifxIrDo+5RPnXwOJz
csvmXKX8xvDjssm+hamU3xvuduuuCbxF+TPhT7ZHSk/lUf638MK2ItdLzyk/
bxnOz/JxXytp3hy/EvY6a6S5ip4/VxnAhgrNQekdlP80/Cj8YY12H+W/CU+u
mSol+Ivy18DhKqNZn8bR/vcHvrXkhtVHIdr/lpfjeDyVthknRvvfTnjy/vzn
Cktp/zsF92sduhgsTftfKlzyyKxphN6H93oNf5zwIM9bk/a/ETjV7uqWRTSP
bllSgXp67VrXd+a0/+nClrGh7ql2tP+7w4I/Wo0CT9D+fx3O9lFfdNaH9v9K
OC3ww6fQENr/h2Ft/eoX2fQ+As/iSi5rYPGW522ptP/vgHtZ6j+X3KX9/wQc
PSDo4vaY8l+Dd5y8u+19OeUvg82XmV/Y8Y7yf4eXbZTaXt5J+RdUYX8aUo81
+kr5t8EyN0uCv/yh/M7w0oi69aECVP9dhVeMDU9SoPfxW0rgK7ILuH3/Uf03
CD93ShDLkKb6b94r1EvjN2xz2EL1nwb8WJrPX57m1/FH4Y2bV3SPp/dLqmLg
qiMVbu8OUP33Am4QFNrJOUr1Xz98y2y6t58n1X9zX+P4pf4Qswik+m8rLCbd
Kq0QSfXfEdiMNVg7M5nqv0i4RIw9t/cW1X9P4duTRKY/fUT1by98VNe+/HIZ
1b8i1Th+G5z3Hqin/MpwNa/Ou9WdlN8Onv9TnD0wQPkj4ARLvurMP5T/MZx2
drGzpQDV/1w4IjleY6oo1f8z33BZDwWi92b/R/X/FvjwqGyZhjTV/7bwhKKw
+Dc075YKh1tia3t3bqP6vwDe/lai5Bm9vxTSDSfnhrOW76f+Z3oN6pkzu2xP
OlD/owCfOHVG/7EH9T9WcMKA0sxBP+p/QuHp/916KHyJ+p+H8ELTIZOFCdT/
dMArmmTHiWVQ/zO1Fvdvf2AZz33qfzbCHo3zn1Q+pf5nP+zcIfTLt4ryB8F3
pO6cW9ZI+e/BopwbCRzq96paYVW7O23zv1J+wTocv49T+p2pX5TaABdzvh6+
NZH6333wbNXY0TfC1P8GwEKSaurv51P/exde3r3s00t6n62vGW4e6xUaK0v9
76S32H95zzXsUqL+Vwbms3W279Oi/tcM3v/Ir/eIPvW/frCa388/r/dS/3sL
ltAapy5qS/3ve9jufJuVshP1v+Prsf9XVPLvOEX971pYLYaveJMf9f+74Wcn
8nQmX6T+/ywc1bNWOS+a+n8OrOR0VWXHder/38HScVuGCml+YM73jsvq/KTN
J0zzhZDVcF3HGAH1x5TfCD41JfK28UvKfwbe9Un76rZqyp8Bv+YzOibWSPnr
YIf3g9Wl7ZR/TAOOz689B4w/U/4V8FB7eenTb5RfH34zz/Om4Cjl94Lvrk5P
XcdP8580eFZUsNV6msc4vIEdOi0DZ86i+c8orBBp+bCK5vFVyxqx3m0ouWL1
H81/dsKCGpXF9Stp/nMSHqfD+bJEhuY/KfCu18nZOzbR/OcVfNTw8y02fX+j
8BfcYFkQsZLmT33/vcd/f3IXXyvN6yXYsO2yjzEOBjT/coPPce+Pe2tK868k
uGLbaOtsS5p/VcAFFf1v19jQ/GsIrhyuCJhP8zKhRU24v/SqrnY6Uf7tTX+f
f0rd93Gj/Mfhk9eWewzT90PiE+DSpO+Bqmcpfykc8fFV8IHzlP87vHv42//f
p5WSaEb9ZRA7spTm/eZacKYvb1bxFcrvBEtNN29XjKX8cXCQe5+SbwLlL4aV
NXutk+j9XYmv8FOecJ5LNH9ki7fg5y8VSzfKoPzqsJjK46lf/r3/6wi3vs2v
NLxD+aPhPfbaIRfp+ypCz2E+/5Rvcf/mn32wXubEJI98yj/nA/o/y4wtKwop
vyr8ZHW5XRo9T6iy//B3npxYOUzzVZ5I2GPuIQHRF5T/CbxAw+zFeJrHmn+G
VeJzk569pPyzW7ks0xvZGnpllJ8Fd3efM8yg5xF9h2CTdkfnWprvSlyGVy/I
UCuvpPyFcPPiY0dC6f1or49wq9No2EL6vg1HuA3r12V/Iy9yy2a4fKrOvjSy
kA2cesBfL56sFAY/ED9WtY/skA+fylfz7KWfH98FO7zcPFaNXDWtHfXYy0s8
1vR5eBTgPNa5ubvo80odhCfkag1NpDzmIbBllvgm/1LK/wDW4sj7vaLjU9gO
r9tS791Kx69vSgf26w/rXz98Rvnl4a9iF2bveUL5LeECl1lDz+j8eF2AHZwE
Rb7T+ePkwl7R6XM/0/lt+fD3zx1Xp6T9O/8CnVxWlnu52Wq6PpTWw3lbnnYe
p+vHwRwWUtnedi6d8p+HF0xOHDJJpfx34EPiPKVfEyl/M2z7J26UfZXyT+xC
f7H+wYaj9L65+TrYRCNwjuElyr8HZj3Q2faH7pdCX7hw2hZ7W7qf+rLhHW/C
l/57nibRCO/3DZjrd4ry83fj/uTs6ZWn99O9pOBpNVtVMxwpvwl8xe3U4w+2
lN8HDl6iPKmO1gehLDjzt3ZZIK0fSvWwgmGkylh6f91hbA/6R5UE0U3bKf8q
eGF71k+ZrZTfEH5lKhTWT88bec7AbZWCwY603kmlw/zmX6PurqD8tXD7GgHL
goWUn+cj9meLxLBAUcovCfuL8tVL/Pv+2y446YRrszutzxKesNS1HTvjaB7O
vgHX3qto8aN5uFc1zGpWlVHopvX/N7xAbmT4Hn3/rmUpl8ua17ml6c9rWv/1
4J7Juy9MK6b9zwOWLLtyuzeP9r9kOFRT9XfEv/ffq+Di5NRZU/59/+8n7MY/
LV03iva//z6hfwwotrEMov1PBxYwmjOicob2P1dYJVh36qAz7X+JcMrO+zpO
9Dy7sBzufBFj84yed/f9+PT3+xnqE7vpebjEws/o37TGNjQqU35t2CdOLCCJ
6gMvF/jzyqZnW5ZR/ng4SCRsQ9Ycyv8SnulzLvCrAOX/Bq+8ONZR8A/VP/N7
uSzvA/qhv/uo/tGEn0m8iHzaSvXPMTimM3G95Ruqf2Lh3Pr1wu+eUf1TDBeJ
lTYtz6X6ZwC2eX1TeWcq1X9iX3B8xBd/Moik+k8NVpTw9JU9T/WfA/z49/jH
X+h9h74o+PLbiVvP0fsQEs9gi+rKR8O7qf77AtcKXX+vpU31n2gfPt/tN1pu
ClT/qcD7mm7c9vv3/vth+NXtI09dxKj+uwJHGzgu30r1rlIRbN0zHDT4i+r/
T3B70K6Es1yq/2f14/60KRMYfkf1vxKcFJN+Uucl1f+H4M1aSvH+9H1cqUvw
xkuvJVJTqf5/BKvFZ968GUH1fw88OWj+5/BzVP/PGOCy5E47hO53pvpfEXaN
+aQ6dz/V/9awG2/z7ft6VP9fhLtrLp5XYlH9nwcflt/pzKH32Tmd8AOdQxKT
5lH9L/SVy3LZtERuB/VHQptg3fmV1id/Uv93AP4hnm12pZv6v2B4hsns51f/
ff/5Pqz3XXtb+FPq/9pgy5mxUS63qP+bMoh+ul7PXJ3mxVJycPzB+xrjg6j/
s4CXN83lyXWn/i8QlrZ8Jm1I76MX5sDWImMudBtQ/9cCu0rMeXiI3j+XmPwN
63HcbpsPa6n/k4Xf3RZS1aJ5r9de+IyPz49kAep//eEcaV6poWHq/2/Diz68
idzcRf1/E3z0lvoHN5rfKk34jnwl129lPKb+Xxo+orHxQV0m9f+msIseO2k4
mvr/c/CMSevEhen78TzZcH/oqldL6fvzUg1wvkCAnSzNV83H/eCyFsdejlZk
0/xjDVx9IHoSi97PKzSGnf3bDyj9+/9feMP3JPONFWbT/CMTVrdzuChL7wuy
38IVDpp5K/tp/sU7xGX9MgnzXthE86+V8IntkeGzS2n+ZQB/s02OFqD3IYVO
w2K147by/nv/+SZ8JZtXcTiU5l818GyJ7jUDp2j+9QfWUB3z8vMhmn8tH0Y9
rRSZ+4neb+XZBR+U+5X0ZSvNv07BGduPbv4hTfOvVNgwUVOKT4LmX69hQdOy
JbMFaf41Ap+M2loh9XM9k3/JT9TLp3mqdbsYS+jCm9Zp4HwxZrvDba+trqc/
Zux1Hf5+Jq20K3O90v8Amxr+og==
         "]]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         PointSize[0.002]], 
        PointBox[CompressedData["
1:eJxVXHeYD1cXnkiXNkmkiwxCCImJNIJkpOnM6mUx2uqM3hm929E7o5dljb76
sFjd6J1ZnVVGL2nf7rnOfM/rH895bjt9znnv/W32+q0rNsokSVKpFyQp4/+M
f6/8mVY8fsuDPLHxhbR0Ui2YTidl658Wk/RtBm3EptOfZZDZvs6g7QHR/C8z
aM9Np0umds2SmPJVBh2ejOYXyKCVF0ukFZ9tFst8rIGaQesF0uk26eQsk2ir
RjT+TQbt9mX6Ap0fLE6n88amnzg/bwYtHy/B5ykZtJapJIyb+Us+47/QFxm0
UzWdzpJYIrXrYTrPt9LpG+nc9U8gWkoo+YyfsCDJf6Qk85+H5P+Px83cJH/e
UmnFkzPE3/IpyV8pnRaapPGwRymeT/pQ5pdifeUn+Q+m0xnsl0j9kOT/O52u
SAx/RPLnLp1WPH1xsczV8pH8emnen/iTu5Vm+YjW5pRmfZA85v7SzD/Zx3lS
ms8ne/g5y7D835P85SP6O5K/c5ln+5X4geSfWYbP+5Hk31PmGT8Wnec9LMPy
5CL5lbLML9lDKVOW1+ck+TuUBf+wppfl9WQvd2dZ5pf0G9zD/eRs5dhedL5W
shzri9abbSOa/NWZUu6ZfPnIn/zt5YB/6U455o/8T/2kPJ9H640/yrM9iV+7
dTqd4W55sgr5J0Y07R8ml2f/JX0qt6L1pG/9wwrgf9avFVgfJJ/bogKfT/IE
4yrwevJHeXMFkE9Li+bTeeZ7OtuPaOcXnc8j+fym0TjZUxqjg7zqxmic+DOu
6hDf9jsxrD/yP69oDOuP5AvjYtg+5D/KyJhn+plCtL4uhvkh2roUw+dR/nHf
qsjjxF9QOKJpXG5YEfKVNgLHzaSKHO9C/vM47r9eidcL//+xEuhPrVeJ84mI
/6GVWD7Sh70ymk/29s4xbdH68NXKLL+w/3eVQR96ncos708k/6DKnG+F/Msq
cz6k9cFpXC+/XIX9rQjJ/00V5o9osxaPTyH5nP48niTsv6QKxwPtL52swvoQ
8r9QFfzH+Loq65P2s6tXZf6I9vpUZX6E/IuqQjwox6qy/xKtP1eN9UX2tfJV
43gh2q1SDfJP0KsayyfkX1gN+NUORzT5o/lvNeaXznPyVH82/paI/4rVwT+k
HtVhf3Ue00ki/x2ozvKSfey/qoM/e7lqoP9XqMH7C//vWgPk02fXAP+29jGd
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
jr8s4w==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Tiny]]}, {
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         PointSize[0.012]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQDQQBlzxfOz6sElnn/lDCAcg3SAx+7agZ03/o6woN
MH9CwmtHD5CC42YgvkNC0mvHN4E75Fq1LcD8ZelQeXdLEH/DqczXjoW2XNcX
fwDLKxyshvILwOZ9qG+G8aXA8quAfKBtGjH94mD9W/peO0KcpgLiF1xa+NoR
aNvrQAuweRfUFsHsA/MP/ITzzcHm39sFM08RxF/wd99rR3mg9h1yomD96vtf
Ox4GSR+SBJtfdhDmfyGw/R03oPY3gP37QfUuzP9g8xUCgPwlBUAPPAbzEyY8
gdrHD/Ev91eY+5UcAGf7guk=
         "]]}, {
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         PointSize[0.012]], 
        PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQQJi7xfO+6Qa30daGHuAOQLsIe+dozpP/RVQ8Ya
xHcwDIXJg/kCN1NeO0K02oP4D6bnvHb0eFglsu64LVj+EJAP0h7TD+Yf4K97
7fgmEGjCagsQn2Ft02vHJQW2XNeTwXyBNRNh8lYgfgHDJJj9YL6D9xKo+sd2
IL5C7YbXjoVA7uICGxB/w+8NUPvdwfwPWUdh8mDzDzw+DtMP5j9QOwdzL9j8
Cd3XofZrg/Uv0H0J9V8D2P0KSm+h/t9h4wAAkOJvyQ==
         "]]}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         PointSize[0.002]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Tiny]]}, {
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         PointSize[0.012]]}, {
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         PointSize[
         0.012]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         AbsoluteThickness[1.6], 
         GrayLevel[0.5], 
         PointSize[0.002]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         GrayLevel[0], 
         Thickness[Tiny]]}, {
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         PointSize[0.012]]}, {
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6], 
         PointSize[
         0.012]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.6605952*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Temperature\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6605952*^9, 3.7552896*^9}, {0, 31.}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"original data\"", "\"bottom regression quantile\"", 
       "\"top regression quantile\"", "\"bottom outliers\"", 
       "\"top outliers\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6], 
                    PointSize[0.5]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"PointSize", "[", "0.002`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.012`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"PointSize", "[", "0.012`", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "True", ",", "True", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.780096109534999*^9, 3.7800961699657803`*^9}, 
   3.780096259364214*^9, 3.780096294934561*^9, {3.780096341033114*^9, 
   3.780096349992085*^9}, {3.780096428863859*^9, 3.7800964641397552`*^9}, {
   3.780096558138773*^9, 3.7800965767680902`*^9}, 3.780096651077327*^9, 
   3.780096781210198*^9, 3.780125758301339*^9, {3.7801258852679377`*^9, 
   3.780125905822157*^9}, {3.7801259365588093`*^9, 3.780125997986186*^9}, {
   3.7801260375582933`*^9, 3.780126191185025*^9}, 3.780130978082951*^9, 
   3.780138402264798*^9, 3.780330686854254*^9, 3.78033415179218*^9, 
   3.780336801540512*^9, 3.782464207746043*^9},
 CellLabel->"Out[10]=",
 CellID->895695620]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties and Relations", "Subsection",
 CellLabel->"In[11]:=",
 CellID->754506620],

Cell[TextData[{
 Cell[BoxData["QuantileRegression"], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " can be compared with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["FindFormula", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/FindFormula",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ", ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Fit", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Fit",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " , ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["LinearModelFit", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/LinearModelFit",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ", and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["NonlinearModelFit", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/NonlinearModelFit",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ":"
}], "Text",
 CellChangeTimes->{{3.78009384613457*^9, 3.780093900158692*^9}, {
  3.7800940997846727`*^9, 3.780094118550931*^9}, {3.780099360880561*^9, 
  3.780099365424217*^9}, {3.7824651066626377`*^9, 3.782465118510357*^9}},
 CellID->1243579173],

Cell[BoxData[
 RowBox[{
  RowBox[{"qFunc", "=", 
   RowBox[{"First", "@", 
    RowBox[{"QuantileRegression", "[", 
     RowBox[{"distData", ",", "4", ",", "0.5"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780093671090294*^9, 3.780093743950191*^9}, {
   3.78009395274487*^9, 3.78009395643188*^9}, {3.780094077410199*^9, 
   3.7800940776596937`*^9}, 3.780096786136695*^9, 3.780130191501816*^9, {
   3.780130291537472*^9, 3.780130300525206*^9}},
 CellLabel->"In[1]:=",
 CellID->1050110365],

Cell[BoxData[
 RowBox[{
  RowBox[{"fFunc", "=", 
   RowBox[{
    RowBox[{"LinearModelFit", "[", 
     RowBox[{"distData", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"x", "^", "i"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "5", ",", "1"}], "}"}]}], "]"}], ",", 
      "x"}], "]"}], "[", "\"\<Function\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780093958257991*^9, 3.7800940364243526`*^9}, 
   3.780094088075886*^9, 3.780096790884107*^9, {3.7801301805996237`*^9, 
   3.780130183488144*^9}},
 CellLabel->"In[2]:=",
 CellID->188879776],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"distData", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"qFunc", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"distData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{"fFunc", "[", "#", "]"}]}], "}"}], "&"}], "/@", 
      RowBox[{"distData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thin", ",", "Thick", ",", "Thick"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<data\>\"", ",", "0.5`", ",", "\"\<mean\>\""}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780093752059157*^9, 3.7800938009865417`*^9}, {
  3.7800940412963867`*^9, 3.78009406340177*^9}, {3.78009679700599*^9, 
  3.780096808956234*^9}, {3.780130142956708*^9, 3.7801301503337917`*^9}, {
  3.780130187181776*^9, 3.780130215000798*^9}, {3.780130254119545*^9, 
  3.780130272816263*^9}},
 CellLabel->"In[3]:=",
 CellID->1184293509],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Tiny]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3., 3.}, {-0.785309327353667, 1.371438672073846}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "0.5`", "\"mean\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Tiny]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Tiny", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.78009406446039*^9, 3.780094089339841*^9}, {
   3.780096803910511*^9, 3.7800968108269787`*^9}, 3.780130154869769*^9, {
   3.780130195135044*^9, 3.780130215472995*^9}, {3.7801302736955442`*^9, 
   3.7801303033799562`*^9}, 3.780130991098625*^9, 3.780138402766988*^9, 
   3.7803306875887938`*^9, 3.780334152339991*^9, 3.780336802073079*^9, 
   3.782464208357044*^9},
 CellLabel->"Out[3]=",
 CellID->63522793]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Possible Issues", "Subsection",
 CellLabel->"In[4]:=",
 CellID->92483860],

Cell[CellGroupData[{

Cell["Slow computations", "Subsubsection",
 CellChangeTimes->{{3.780095521703313*^9, 3.780095524223591*^9}},
 CellLabel->"In[1]:=",
 CellID->157840012],

Cell["\<\
Because of the Linear programming formulation for some data and knots \
specifications the computations can be slow.\
\>", "Text",
 CellChangeTimes->{{3.780094161448764*^9, 3.780094217948235*^9}, {
  3.782464114011043*^9, 3.7824641142587147`*^9}},
 CellID->1497282460]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting for probabilities 0 and 1", "Subsubsection",
 CellChangeTimes->{{3.780129541047084*^9, 3.780129572885242*^9}},
 CellLabel->"In[1]:=",
 CellID->648410349],

Cell[TextData[{
 "For most data the quantile regression fitting for probabilities ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]]],
 " produces regression quantiles that \[OpenCurlyDoubleQuote]too far away \
from the data.\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{{3.7801297403578978`*^9, 3.780129780769822*^9}, {
   3.7801299003724318`*^9, 3.78012992771047*^9}, 3.7803368595826263`*^9},
 CellID->1603166877],

Cell[TextData[{
 "Find regression quantiles for probabilities ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["0.5", TraditionalForm]]],
 " and plot them:"
}], "Text",
 CellChangeTimes->{{3.780129628741838*^9, 3.7801296726074877`*^9}, {
  3.7801298896396227`*^9, 3.780129893240169*^9}, {3.7801300567517757`*^9, 
  3.7801300600373173`*^9}},
 CellID->1017010272],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"probs", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0.5"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData", ",", "6", ",", "probs"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"distData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"#1", "/@", 
            RowBox[{"distData", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
         "]"}], "&"}], ")"}], "/@", "qFuncs"}], ",", "distData"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"True", ",", 
        RowBox[{"Length", "[", "probs", "]"}]}], "]"}], ",", "False"}], 
     "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{"probs", ",", "\"\<data\>\""}], "]"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780128719864993*^9, 3.7801287236506243`*^9}, {
   3.780128785583146*^9, 3.780128823294286*^9}, {3.780128862844314*^9, 
   3.780128869116891*^9}, {3.780129080153743*^9, 3.78012908695848*^9}, {
   3.780129595667837*^9, 3.780129619013324*^9}, {3.7801296900585203`*^9, 
   3.780129690252262*^9}, 3.780130065963085*^9, 3.780330533397395*^9},
 CellLabel->"In[1]:=",
 CellID->534144792],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qCE3J+usZyCEy/8huK+pyV2/BvNNh6rgCFIfyEA5l98DeG6k9/7YCsyHhlGF
5V0mL1Mfjxv/fdh76e2G9gE43hTQ7+S4oHix+vPc+JKgd84jxzxfdf7ceO6C
xZXykyWL8PvjwXXSzFcdF6rz477vFrRbsMJr5gI8/g24Gp1z6byX+vPc8S7D
jtemAzt54t/HwPtTzz0i56lj7vNRYHRn42n7ufj+MQjJOR9YN0f9/VwcBkG3
Cka+mo0eItGklrS16W7quDP3Ppln/3Hxm1navyczOn563OSqfp+7wEWR9792
2zm6ar+fXHE65HDeRT1ezfjI1ojE9aYu2vGTmuH08pvO6r/nLmi3SM4VnwRv
Z23+JMNvbkkvZ219yM4X3mfEztr6keuLhi2un6mtL2n7v6NPFc7a+pPJSWMC
BzprfYihv/LDcmetH+nZ7BKb4qz1JTZVdv7WLlp/8jFx7rVoF+38IN9hpf5I
V+38IS1bbS1yXbXzi3z0WLr+n1k4vsek74tH/6x0085PEjW9/WAXdX2HaOYv
KXWshUlztPObZFmPL3B2x/G/IAX+F21WzNWeH6Q0qNDmhNrzkub8IacfJm/K
8dCeXyTmUV60lRfm95rElxhNCpuvPT/J7kuGv6rU82eU5vwl91ZG2m5YqD2/
SddLfhd0fDD/t2Tay/5fo3y16wMRz761Ytpi7fpBqmPiCiT+2vWFvLX7/uFJ
gHb9Ia7bdPOjlmnXJ2KZ//nPXSu06xdRfem2KTBQu76R3bnB/fxXa9c/stEr
kyxfq10fyX6Im7plvXb9JMtDqj//FaRdX8kzfbcDdzZp11+y5EsYW7CFgVea
9ZkovaYe6LZdu36T1sb5Ek/1etFVs74T/6FbmbO7tOs/eRro/aR8NwM+musD
UVpkEKcw7fWD+KUEfr6gXp/maK4vpPZ2x6Ht9muvP2TullVvN4djfnlk2Hbi
WXRIe/0iZNCE2T6HGfhXc30jgyQj5n5Rr5f89Y/cWvlateBvzL+A7Pz4NiP/
BHoWkAn3Gz1XnMJ6FJC74eLJNf8yeP0l4bdjzfacYfD6TNZdPBdkfB69vxPT
j/99uxyD9fpBSPLfZeMuMnj9JwdT5PY5lxnsD0jSrLQ5gddwPihJUHHYK0kc
1lMdN7Zx/OcWg/0HWV7V0cE2nsH+hEgnzXbPSsD5Ukgaff80907CehcSUUrw
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
ucOrLJW8hy5Vvii9OEGshP8DRY+dsQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AXn+vJo=
         "]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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

         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Temperature\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3., 3.}, {-0.785309327353667, 1.371438672073846}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "0", "0.5`"}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.780129604139708*^9, 3.780129622267824*^9}, 
   3.780129692075317*^9, 3.7801298479050303`*^9, 3.78012993477439*^9, 
   3.780130066682825*^9, 3.7801384031762867`*^9, 3.780330688097975*^9, 
   3.780334152784856*^9, 3.780336802621777*^9, 3.7824642088707533`*^9},
 CellLabel->"Out[3]=",
 CellID->2017163776]
}, Open  ]],

Cell[TextData[{
 "Find regression quantiles for probabilities ",
 Cell[BoxData[
  FormBox["0.5", TraditionalForm]]],
 ", and ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]]],
 " and plot them:"
}], "Text",
 CellChangeTimes->{{3.780129628741838*^9, 3.7801296726074877`*^9}, {
  3.780129864595993*^9, 3.7801298659575443`*^9}, {3.780130038863634*^9, 
  3.780130042385707*^9}},
 CellID->1906024299],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"probs", "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData", ",", "6", ",", "probs"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"distData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"#1", "/@", 
            RowBox[{"distData", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
         "]"}], "&"}], ")"}], "/@", "qFuncs"}], ",", "distData"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"True", ",", 
        RowBox[{"Length", "[", "probs", "]"}]}], "]"}], ",", "False"}], 
     "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{"probs", ",", "\"\<data\>\""}], "]"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780128719864993*^9, 3.7801287236506243`*^9}, {
   3.780128785583146*^9, 3.780128823294286*^9}, {3.780128862844314*^9, 
   3.780128869116891*^9}, {3.780129080153743*^9, 3.78012908695848*^9}, {
   3.780129595667837*^9, 3.780129619013324*^9}, {3.7801296900585203`*^9, 
   3.780129690252262*^9}, {3.780129870120871*^9, 3.780129872572427*^9}, 
   3.780130046882285*^9, 3.780330537932231*^9},
 CellLabel->"In[4]:=",
 CellID->536830994],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AXn+vJo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4P8BYdm9ag==
         "]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1: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

         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Temperature\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3., 3.}, {-0.785309327353667, 119.05337368788197`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "0.5`", "1"}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.780129881780424*^9, {3.780130047603592*^9, 3.780130068817079*^9}, 
   3.780138403480589*^9, 3.780330688497777*^9, 3.780334153041695*^9, 
   3.7803368029181557`*^9, 3.782464209263172*^9},
 CellLabel->"Out[6]=",
 CellID->1899728100]
}, Open  ]],

Cell[TextData[{
 "One way to fix this is to use probabilities that are close to ",
 Cell[BoxData[
  FormBox["0", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["1", TraditionalForm]]],
 " from above and below respectively:"
}], "Text",
 CellChangeTimes->{{3.780129945845873*^9, 3.7801299953703327`*^9}},
 CellID->1874164639],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"probs", "=", 
   RowBox[{"{", 
    RowBox[{"0.0001", ",", "0.5", ",", "0.9999"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData", ",", "6", ",", "probs"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"distData", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"#1", "/@", 
            RowBox[{"distData", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], "}"}], 
         "]"}], "&"}], ")"}], "/@", "qFuncs"}], ",", "distData"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"True", ",", 
        RowBox[{"Length", "[", "probs", "]"}]}], "]"}], ",", "False"}], 
     "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Prepend", "[", 
     RowBox[{"probs", ",", "\"\<data\>\""}], "]"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780128719864993*^9, 3.7801287236506243`*^9}, {
   3.780128785583146*^9, 3.780128823294286*^9}, {3.780128862844314*^9, 
   3.780128869116891*^9}, {3.780129080153743*^9, 3.78012908695848*^9}, {
   3.780129595667837*^9, 3.780129619013324*^9}, {3.7801296900585203`*^9, 
   3.780129690252262*^9}, {3.780129870120871*^9, 3.780129872572427*^9}, {
   3.780130008365961*^9, 3.780130032203681*^9}, {3.7801300761395893`*^9, 
   3.780130077701562*^9}, 3.780330542264791*^9},
 CellLabel->"In[7]:=",
 CellID->1453034500],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
CEqPEhLQPK7n6DFJoPQoIacSMjQdlySD0qOY5GfziuYJUkDpUUzOtQx4ZfYx
BZQexaRNqGPe0zkVPYrIjpyGPvGGaehRRKYufNduk5GGHkXkyfhVD697pqOH
iAx0TPp8dnIGeohI/KdhdVqSDPQQEUPtOY1DL2Wih4ist5x24ObMLLBTxP87
KTJoH3FYmoXxLiQ/Tp8JeXQhG/oo4ltIMpcUJvSZnIPxLCC1i5qM7ubmQKwi
fvnEzz5lh9U/uRivfNJuvX1p05A88FLEJ494dQ896h+ah/HIJf5ro1/orM4H
TtH+XGKvf+qsY10+tjeHzB7fELXjbAE0Kx6YTTzW9+ulZ1CI7ckmnmfy+216
XQgvFf0pi3idXnLabO537D9ZpNJs40DntO+gfH8zScv48588TUVAFf0jgxyp
e/e4/W8R9ocMMmLFy/F93ongoMI/nei922v4vlmE3mnknA9/XfnUIjBT+KaR
G3PWvA08UISeqWT3XHdh0usikCn8UsiUjvUjnKqL0CuF6GSrl+8xKYZARQCT
ydTZf5umOxajRzKhQbfjva8Vw0tF/L+Rwr1nL5/7VozxTiSvdSZtTuaVgL4i
vgnEqTFAe4l5CcYznpid/OTe4lgCvor4xZExo644J/iWYLxiyTFr46+hoSXQ
RxGfGLJmp9Pm8NISjEcUERdt65/SSwzHFO3/QiwMBrwtnijG9kaSG1f26/20
E0O1on3hxODpKQOpuxjbQ0lt4uybMQFioIr6h5EZO55tPfVejPUNJcYV1G5A
uvznFfX7QPLJkQV7f4pBRVGfd+Qfa3EvP4EE//5rMr1n9ckduhIQKf5eMJnq
EHi0ZowEn/+C3H1VlzN0hvznFc97TG7tl+0oW8h+/z75S/uf7gts5WXFz98i
Nc3/+U5Yz76/TAJ8j2bc2CQBFUXZg+yf/+PlsW0SYCdYwWcqW9O2y8s6iu/B
MvmB1Hfb798Ht5grg8mv31dMcLdgzyiHq9t/P/8+LH52d811+d+nyvqBoSZv
u4PV7/rDYN5gSuX1V1FMaMGwdM7F/8WP/d1+KPARLD09SMLiA+JrOp6qQgmL
H5wcurn7/Krf8YWMDL88h8zf8Ye2g7Nb//r02we0w/tu/fPWbz+w3HrXUOvo
b18IMLoy7se63/4wN8TbK/FPMesfsDpu+MQYHTHrP9BoyJtQXPm7f4HFwcij
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
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
AXn+vJo=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Jx7MqM7IRY9BzO4u3aYLbjz4Pz+39+o=
         "]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJw92ndcjd8fAPBb3cpKiOwVQkgIRfo8EWVlZIXyNaJkZBUyMusrKlsh+Uok
paVBdZ4W7b20b/O267b3L/d+zu/+wcurPPecz/t8Puc8z+eZeeTsTmNxDodj
MPjH379FnyGs7ml3W9ltGaRuR/C0e7XSrFvgt8KR+imQ88F8zbAcaXaWVrtu
/IUiEtU276BDpDSbv8AjV6f8CfHW4V0d6y3NNrS2T1XuyCHOTn8/0qz8tJm6
OhfdyL3avxeUZn+XZxZFFmSRc4NX+2AuzW7ReLJz/1AXMnixwStKszPkN/Xa
xqQR3b+X05FmlynGuXF4hbBM+JFmg0wMM+anZsN04QWl2dWSctIKyyLIMOEA
pdlXXu9qF51zIu1/h9cmxQZbWhodKkskwsvxpNifoaPUC5VdISnx70eKdX5w
2mv3FJb8ne2OYClW/dyv4fOcvoHb3+l+kGLr0nbz3qvng3B4DlJswsbfUloz
q4nV38tdlWL9ViSOGCWeAceFHyk24oN91ca7EbBTeEEp9qat/f3pX1kQTneN
FGseln8609OKzBdOWIrdMlun/pJcABFebqwUu1ftg5qSfjqIPKRYGS+3FXVX
EtBDkj1rJbb0YnAmekiytvNWaY6NiyfC4UVKsnufzZ+wu5oFkYckG3O9cOtm
2RD0kGSZ/p61zZN/gchDkh26skhivXYkekiy1SGr3idOzACRhyQbJBhnc2JT
Fog8JNkQsWFDV81JJSIPSZbtqWk4URSLHpJs9utjYUkJBiDykGT3+2v4W4+O
RA8ue2br71/l9SnowWUrFpm5pfzwRQ8u+6tvn5Wb1nv04LIKWqf/1RkXhR5c
9oPg2CJ/6zAi8uCyebc9wuyXJYLIg8t+z1v6ZMj9IiLy4LJtFgHLzQJZIvLg
smfv37Jpq/lJRB5cVjlA/TJXIgNEHlw2oy/46XpBCnpw2fR7rMMf03Ai8uCy
QWPOOFwYGoUeEmzS0K0SefZZROQhwW50tR0f+fIPiDwk2Ed2j4PUR5dhfkiw
e96vTNJXpx4SbIxlfFq1w2/MDwmW93T+iAMK50E4XfPB3w8KuPZA2wk9JNjt
oQrygWWp6CHBVqpt4ZsVfUYPCbbC/t9ynfwU9JBgF/ftdPinKBLzQ4L16A0I
K+z4jh7ibPpHmdGVebnoIc4eHv9Ha2ZKAHqIs5qxBycWn2JB5CHODksdPhv+
pKGHOLvO0ebTTJMozA9xds61T5FGphHoIc7Kp0+Ofl6UhR7ibL8D/9plFWvM
D3H2e8Erwz0v0oimcIDirNFt2QnrJKPQQ5z9uC7vctyTEvQQZ0ffjThrcMgD
80Ocvbfi/K4tCgkg8hBjey5HnbtS9wPzQ4ytMvTj++dloIcYm7txhe/vh9ro
IcYy3oUFDxecRQ8x9lm8e4rOkT/oIcaOepY0z9E3k4g8xNjD3Ufd/K9FoIcY
K55296GObhR6iLEjNZ98ee7zFOuVGGsyQv3JscAYIvIQY8dvWuf5W/MXeoix
E6SY7oLBfBB5cFgX28ots3MiQeTBYbc/U5w9sDQQPTjsJ0tm99TMUMwPDtsb
tDAgdmMxenDYZ9N9UxZbRWJ+cNj7pyaJjZvwEz04bOFrTd1wK4IeHLbULHQ8
mZiA+cFhY07vDJ/W/h09OKyDnuXiChKJHhzW6NC2gFFyaejBYWsGysudn2aj
B4fN0I7b+XoJrU8D5PkMk/wEx1yM9wB5Mdbu7awQO6w/A2Rt1gibus4CjOcA
Gesx70HhODtczwNk1d5HyhUhwVhPBojCK8m9Iz8X4XrtJ3X5Lq1dDi64PvvJ
lH+cnb+cjsf595Mdb+dsLNKPxPn2k6A627maWTysx/3kUutdfpedJ4jm009G
WY1JU+hMB+HwavtIV4xL/CZJFtdPH5nwbe3RjKZUEC4Xpz5i0zZ3Vd71OKyf
feTGw/T+7YP7gWg99JGRG7outBZGYz72EV8TD1dTqSQQefcSndSiAzt14tC3
lyx4029nvzwSPXuJtubzvinD76BfL7GIUr02pcQN86eXHNkZbXZguw/69BI3
3sMfFrcdsF71klnhUTZbODysTz3kfXKb0d5HObg/9JB/tv25M+WkF673HhLT
PoddePU7evSQCfbXQ4deyUSPHiKQyzrw8hYPPXrIw8m7z+xRC8f12k0eHx2d
U/zcBz26SeOyUbWWi3lYH7qJtbq5qeWLS+jRTY7PMkqebpuN9bibTF9yP61s
Kd0Pu0nfyhITj18EPbrIPJW3y4icLe53XeRLZ+PsjQcC0KOLlCzIMVa5Rj26
iHtCd4b73SQ8T3QRpsnhs8w/u9CjiwSaRg2PGhGPHp3k6/iUAg9PPyLy6CRN
tsU/dS6Eokcn8alW5R0dVYgegz9XH6dgtycLPTqJsX2qr30JzZfB328fXxTq
EI350UlcM58ZfNQ5ivnRQQ6Jc++sfhuK+dFBTm027G4LzcP86CC6pQavwken
o0cH4TQw34ca2KBHB5n4OC1YUi8T60kHMRp75nn9+6/o0U6iXXtvXwoLRI92
4hjZuSpw8nvMj3Yi7X97z5rbRXh+aSft3irSl2f7oUc72fe7ZK7svAzMj3ay
fEXqxzdaLBF5tJGMrR5Bi21/YX60kdIxbp/O/MhBjzayt7P/2rsFv3A/ayMd
1Sduj8nJw/xoIzMMMlT3j/BEjzby1WKPc7phJnq0ksXBY8xdi1IxP1rJ3OQf
Zf6aPujRSvqdRo4umkn3m1aSst70nr4h9WglX03UTqbeS0WPVnKj/G2BpDyL
Hq1Eb2rVD+u2BPRoIbevqr571ZaO+dFC5r+bebb+cSp6tBDr1brguCgRPVpI
ntfMfS9D0rDetxC18KfNphLpmB8txPXdCC3VyCCsVwIy8t0p1dPnU9BDQAq8
qq4NaP/G/BCQxBP3whK+xaOHgOzkB/6jfiYd65WAcEaf/2GomYkeAmLhqhh/
dXoW5kcz2fkwZm+1YgF6NJMh4mnXdk0rQ49mYu4qt/TjTh56NBPrftNVgUfz
0aOZ7PfQWThndgh6NJPqXY/CuKWl6NFEimZd5kdIRWF+NBHerqfsy/VF6NFE
LBTCZToNg9CjiWyeW60ffSEHPZpI4nRnlUd18Xj+bSLRz7xnnV2bgh5NZFXZ
z5kls/LgqzD+jURNd5fMMU4ZxruRrFrm0yv7uwiGCOPbSNQXKT6ecrwI49lA
3C98XSz7uRRMhPFrIM5fxSd+4MVgvBqIT9sEMuZnMUQL41NPaltV96pbZWI8
6kn0Ipl9s5k0mCGcfz1RnaVjYFtTCcLpJtYR3xV3ZbrCeHBNeME6EtPoz43h
/wFheObVkRc/r2dDAw9yheuplszbPzx3bCYP7oqAiJ2jYtIiBR6oCtdLLeFc
vWh8GgqgRLg+asibpbmmXp354CgErCH9fUWltVWZoCH0ryG7rmfEyyuU4nmn
mjgmavJ3OefAK6FvNZm/+sy0O56V6FlNXs7Ly+jqKINW4QD5ZP/Tug3v/UrR
i09GrrtwaiG/GLYLA8gnV2KXmsdL89CDT7wzvh9bdTYfParI9mhDlVUafPSo
IjpvtGa9CCpHjyryYlzCsSrFcvSoJFaG0fU2xnw4JvSoJIJMlZpttUXoUUls
k56X/L5Xgx4VZN/JuRv//VOKHhWk/abmMuJegB4VZLOhkmCTBg89ysnOw9VD
TzXx0aOcKBVwN5ssL0GPcuLTpXNS7mA1epSRWTaH5u2ZSj3KyBiToZ8sCvno
UUbGbhy3L+l+PXqUklYV7Y32P2vRo5SoJrw3qw+rQI9SwvRqV2qPr0APHjGr
uJE/EMtDDx7ZOkyiJD6gBj14xGBa94KrD5rRo4QYHdu28P2wOvQoITeDTVzl
LarRo4ToDd6iTnWvRo8S8l9lV2h0RDXsE8a/mJxYvOSNh1w1xruILDLrLv/X
oQpGCeNbRN7EWi+5GVWB8SwkGS9qDkpcqYVYYfwKSJiZhuNa2RqMVwH5r+Tq
BIujDWArjE8+GV18MaffrhrjkUcGsneu0T/TCIxw/nnE9+mOKY4Z1TjfP8Ql
PzrBu7MWOoUXzCXnpo2/ObmoDueTS7Ivb6z6L5UPPsL1lEMIe1Xd1awC108O
MTNinjjbNGD+ZpONnoyxkkUTsML1kUXqT2/3Mm1uw/WQRZxc+PYSp+rgstA/
k5iMzHPJyeOjdwY5tiG5xuFEFagIfTOIlXbsj55xbeiZTmQdYsu/59YDX+iX
RhqnDuhP/daEXmlkSPOi9gePm8FVGMBUEvtT+seBxEb0SCXskVRJbdUK8BHG
P5nUbSqM58vUY7yTiF9IZfPyM5UwQxjfRNKyIKBQe3C8onjGk2xBO3fdy0Zw
FMYvjjiv2HQ/M7IR4xVLth9k18nrCWCUMD6/ifnPqssNiRUYjxgir1/58bhL
NVgL5x9N/OSPPXs5pwnnG0WK/Mev73Frgibh/CKImlhejIObAOfDkpKKmkcB
+Q3ACscfTna+GyljWFeN4w0lS82N94/PLAdX4fhCSFR+1LXq8GbgCMcTRAx/
Douz4zbi9wcQ8XSDz5dnNUGJ8Pt8SdCcoWuu/KrF63uTIy4/dLRXN4O18Hoe
xNDqarkltw7/vxuxOqxjkFU8eD3h77uQpoWyRzyM6fyeke36SVklXQLgCP99
l5SenCW/YVoTvf/gNEpHr/XrGvQZJ/w5qH6vuH7jZgv9/2A78PnarsDB8Qs3
OBeQtjXc71QpoN8PGyQOK7qdawVWND6I+E9TZtZPAR0/8CVMi780D36/cEPz
hbEHjuyXS22l8wel10vHJB8W0PhAxfLKi3PPNdP4wZUuTYmM4800vuA8oop7
8EINjT8MO/7bY2FKPfWBgLUbJRWNWqgfbHxpGvtqZg31hcZRDq66SjT+0cA3
b1UvApovMaCYdL919opyun7AS7XR/7NkM11f8Pm4u1HxrSYcXxz8KJh44KVu
K12fUNRucDT20mD+iNYvBK1PrBz/soGubwjl7V04ZXwdjj8ZvCcp9/Zr1dH8
AOuH081WDG2Gz6L8gc12insCbv8/vyBW5cqd+yPqcX5pEH3Tw6JgZA3NT1j5
3Nr9ZFQdqInyF67OTlvU+bSZ5jckKR8zt5Wrx/lngqnzwf2PTGtpfYBZAYVT
TtxqpvUDOOcW9tWp82l9AdM0ky1jnKpo/YEzsb+83tdV0foEjSf2c09sbKL1
C5TGO7d4KjfQ+gZGw9dbvp8uoPUPDObsMNK1qKH1EepCM6e+1qqk9ROk+f41
NnJVtL5C44OLxUGbGmj9BSWm+4S9byOkiuozbFi92sXIh0/rN1Rm757sZ8mD
CaL6DiOGvDrZN7WW1n/Q+/RwzeVyPvwj2h/A6eiq5TkraX6UwFbJ6f/Nry6D
XaL9BfzsJOZkvODR/QfY4f8avmmvxPmVwNsfLWNWmFXR/QvurPZVrj5UD29E
+xtskw68PtaZnkd4oLPoopnxaj7OvxT2pMaaHhxVRvdP6K33FHtbVkP3V9ga
rnd3jEI53X9B/mrA7IkyFXR/hpeedx8khKfR/Rvkf732/t7Gp/s7XK1OuDf0
Synd/2HsfdVHT+/+/3wArYvODDMeWU3PD3BQ8tf23Csl9HwBw/PL6t6d4tPz
B5BqnorvHz49n8AIV9uuga9luF4qYfmrdvvQff8/34DlZJVVptcrYITo/AOC
TdfnmqSU0/MRvPrNmkeo0PVUBUlm39e/P1FKz1fgUxWhddqZevBB4uLF7fOD
/38+gwmq96yzrQvRgw8jblTti5Urpuc7WHFt+F2FAyXoUQ1PTJ1a7fmF9HwI
8md36aUoFKNHDSQ9+S/cRaOUni9hW6eH4riRpfT8CUzMk4Edc6lHLVT4Zro/
ki2j51fw0SzsXOmeQ8+3EP9D5fXCzbn0/AubS5de0c5Kp+djmGGpueXNhix6
fgaLzs3GTnJZ9HwNr3jxsuNtc+n5G/Y5bY77MLhu8HwOI5TcBeuUs+n5HZiR
h0cLHNLo+R5OJefabW3h0fM/5MVs9VZl09GjERbUHe4JvpxF7x9A7Z3G9128
HPRohB42kV/NKaD3H7AxV2lesiI9zzdBdvLuYeEzc9CnCdJVVl0IMivC+TVB
3pwxbP2ULHr/A+f36p78cj0B59sE/EdiC3XlMtCvCZbrbda7JMjB+TfDETWb
8qJ38fT+C5ra43wWy6fR+zNYedtAbP/931hfmmFO3JIFp9ekY3yawVdy7z6b
+iz0bobBs90+Zf8cen8IXz4snj0jOh3PqwI4f+LB3GQ9Gj8BLDmZeMe7MBvX
gwA0lI6YL3RMpfensPicuN3L6GxcHwK4dXj0LZ5RBsa3BZ4suXxQ0TIb10sL
JFrYrT7eT5+PtoBmYetzuZBsXD8tsEXbrbXRKAjj3wKp9+KWvXRIwfXUAi5Z
Lp0G+an0/hy6lWzuLPTMRI9WkK7RXfs49zd6tMIGy8OTL5dkokcryIXMyUsI
iqHPB0B30+jzD+7GoEcr7DuxdN2RbSx6tMKjcBOlm3JR6NEGVgpbbivsiqTP
JyBqi2Kuzqwo+vwCHmuMklW/nID51gartml0jJaKQo82CHfqNZ+/ORk92iD6
YVfT4uBY+vwEIns1BNcbvqFHOwjMJ438IheBHu0gX1zoOGlSNHq0Az8lu9jR
8jt9fgPJFgH6julh6NEOdXyNZ66PItCjA9z0IhQWFweiRwfMfB7pfXFkKH1+
BFe0HviMlYlAjw6osxwIdf/6Ez06oPP0wP6FWhHo0QG6ygvMLZ2D6PMr6Nh7
1/5czw/06IRD6zT2VU4NRY9OkJwXpOM2IQQ9OsFx7FepUVlh9PkZXHdwPnX/
VQh6dMKvbxu0+n8HoEcnOOgvGZL/KRA9uuC4/na+7EQWPbqgwWDREduwYPTo
gksZoWtrlfzRowv+yTZYe2OTP3p0wWeDygpHKT/06ALz8rKdClsi0aMb9MJ2
hFjphKBHNyhuMdc7GPUTPbphd3Dgm4ONQejRDa4BlaPf5F7D5+/dEKqrP8w2
iHp0g4nNAumFP1j06IHs1a5qi11Z9OiBfGWz2WL1bvT5KjS5Wr7z6I9Gjx4w
KS/3lF/wHT16oHvllPS4wJ/o0QNTAjboPzzgjx69oGa36eqHCT5E5NELNSUf
P3359QM9esFVKuZin6M7evRCrF700/dtX+nzZVi++fxt258B6NELwcs2d16y
foIevdDE7NYaueQ5EXn0gfXHsdcy6v3xeWofpO1aZpPy9il69IHCx8AWd+Vw
IvLog/A6XQt5CESPPuiaFCYz088L+2d9YDb2XbvdwGv6/B28ArIcm7Pc0KMf
VOqarbaJXUOPftBYGr/YGALQox+KX0WI5Yd6oUc/aO1W0VULtkePfthgtuDe
sMP/occAdO7jZcse8icijwFoUx7/2HfuJ+w/D0Dcmsf+1mIBROQxAOHaGw5Z
lnoRkccAqHEnyTcf9UOPAfDxcgjMqDCj9x+M7vNq9mGlGc6HwxjbW6+fcdOf
KIn6J4y6xuv4dyZfaX+FyUxjTXLtvtD+CyOd7vTv3hBffP7HYerWRXAeT/uM
fhxGxiTORv0MnT+H8eu6mKWizRLs/zDGp/PPZmy8RftDTMvmrRpipwJJsqh/
xDT5HTq34c1NUirqLzG+pz8oKRgF4/M9DmMdf55o3NDH55dizOyty1Ib7zwm
00T9K+agU1vC8W8BuJ7FmB0bjGy/bfXG9SDGTDir6ZJl5U/7Y0ygQLl3croL
7Z8xLgLPAm0mEO6L+mtM4OJjyhO+PgXsvzF7nAXG/+TZ0/4cE6z8rqE+8znt
3zGyH9vKzTxDMf5iTMNrlTsRflG0/8ckL+q/2XvOjfYHmbuLZz45/zyS9g+Z
Dy+mD6RdiQGRhzhTnt4XqKLGAvYfGUPrZVHdzrR/L84cfehq8yXFnfYvmbsv
jZWLiiLQQ5wp1g9uqTOORA9xJq7X32bM0JvoIc5IyymabDv6lvZPGWffgzeX
fnYHkYc4k11+qaVyeRiIPAZ/Hvtn28px/+/PMg80DAr7dL6hhwTz/ZHeUbVJ
Qeghwbh9WxGyYL4vekgw6jIRTpHjL9P+MDMv++uPa6qRtH/MTM4yPjPB3h09
JJiZo7lLDqT5oIcEsy3YZcSDuWG0P80opnfplT/2o/1rJpx3/N9W61u0v81Y
yb2WU979ET0kGMm3vuNMW21of5xxen97iDk3jPbPmQLG6exnmXDMDy4jUWt8
1HnOf5gfXEbnql1NSuEj9OAyxzQPdbhY+9P+PbM1cuKBkK3RtL/PjPeqDa/Z
HUNEHlym/OCEAiVdP/TgMi90Tptzgl6gB5d5KjnxW0NOCHpwmVmz9pmee5+F
+cFldH/9SRzzOQ7zg8t4hiu7GypRDy5jCFbWo9ZFYb9Fkpk0l1dyLD4GPSSZ
pkMRJaXr/bC+SDI7/dQktll60/cnGLasdfWl2GisN5KMk4VOcgPHCz0kmWEP
binu2O1FRB6SjMLQ5yNPurD0/Q3GSMX//e7NhL7fwUy6IVBQcfhM3/9g/GJv
bFpfegc9JBk5lchL4BtJ3x9hiq/OtPyg6k7fL2Fk4k7YZ5/wRg8pZrIW98OT
slT0kGLWHWu7fT41GOuVFMM/wI4a8A+k77cwUy+etnRbFkXff2FiD4Q2a++O
Rg8p5lLurt7da96hhxSzO8227EYgPZ9JMc7rtnyvC05GDylmwqaabg3DYPSQ
YvbYehpmJCWihxTj0eNtr3bjLX2/h1E5VnmgZWsk5oc0k/ckfezJQ0kg8pBm
2Iw5N5X0UjE/pBmuIF42XNaTvl/EPGmI9Pi99QPmhzTj77364Z+LHrifSTNi
sTsbj9kGYX5IMxEXv/cfaImg7zcxGbnZFt++ptD3n5jCkOHOZe6p6CHNzJtk
2rZezg09pJmGvRGJt9bHY72SZjryL6Re1vJBjyHMbI2hUiWx3+B/PCEB4Q==

         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{}, \
{}}}, {DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Temperature\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-3., 3.}, {-0.785309327353667, 1.5454499473161}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"data\"", "0.0001`", "0.5`", "0.9999`"}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.780130018275153*^9, 3.780130033161805*^9}, {
   3.780130071238401*^9, 3.780130078397867*^9}, 3.780138404101248*^9, 
   3.780330688816286*^9, 3.780334153450329*^9, 3.780336803253364*^9, 
   3.782464209630102*^9},
 CellLabel->"Out[9]=",
 CellID->179225339]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Over-fitting", "Subsubsection",
 CellChangeTimes->{{3.780098410657477*^9, 3.780098417857624*^9}},
 CellLabel->"In[10]:=",
 CellID->2121107667],

Cell["Consider the following non-linear data:", "Text",
 CellChangeTimes->{{3.7800990266008673`*^9, 3.780099040551952*^9}},
 CellID->2089227274],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nlData", "=", 
   RowBox[{"{", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression","SequenceIcon",GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["Sequence", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["63", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["6120", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
        Typeset`open]},
       "IconizedObject"]],
     Sequence[{0, 2.52}, {1., 2.83}, {2., 3}, {3., 3.2}, {4.1, 3.35}, {5., 
      3.47}, {6, 3.57}, {7, 3.66}, {8, 3.76}, {8.5, 3.81}, {9, 3.85}, {9.5, 
      3.89}, {10.1, 3.94}, {10.5, 3.98}, {11, 4.01}, {11.5, 4.06}, {
      12, 4.09}, {12.5, 4.15}, {13, 4.19}, {13.5, 4.25}, {14, 4.3}, {14.5, 
      4.35}, {15, 4.41}, {15.6, 4.47}, {16, 4.53}, {16.5, 4.6}, {17., 4.68}, {
      17.5, 4.77}, {18, 4.85}, {18.5, 4.96}, {19, 5.11}, {19.55, 5.34}, {19.7,
       5.44}, {19.9, 5.58}, {20.1, 5.91}, {20.3, 6.27}, {20.5, 7.14}, {20.6, 
      7.14}, {20.8, 7.81}, {20.9, 8.32}, {21, 7.75}, {21.2, 9.07}, {21.4, 
      9.49}, {21.5, 9.71}, {21.6, 9.83}, {21.8, 10}, {22, 10.18}, {22.1, 
      10.21}, {22.2, 10.25}, {22.3, 10.27}, {22.5, 10.3}, {22.7, 10.42}, {
      22.9, 10.47}, {23.1, 10.52}, {23.3, 10.59}, {23.5, 10.63}, {23.7, 
      10.67}, {24, 10.74}, {24.2, 10.78}, {24.4, 10.8}, {24.6, 10.82}, {24.8, 
      10.84}, {25, 10.87}],
     SelectWithContents->True,
     Selectable->False], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"nlData", ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression","SequenceIcon",GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["208", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],Dynamic[
       Typeset`open]},
      "IconizedObject"]],
    Sequence[PlotTheme -> "Detailed", PlotStyle -> Red],
    SelectWithContents->True,
    Selectable->False]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780099021931134*^9, 3.780099048677576*^9}, {
   3.7800994392128963`*^9, 3.780099477263329*^9}, 3.7801303991194887`*^9, {
   3.7801310092970543`*^9, 3.780131022630259*^9}},
 CellLabel->"In[1]:=",
 CellID->1368447171],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
     1.6], PointBox[CompressedData["
1:eJxFki9MHFEQxjcNIeUo/+9aSAgHd7vljgIF9nZvEYQJBkRNMZhTJGAqAAvm
zBnSBA0WRNWZMzUYsIdGY2qKwGBQ7L75DUyymXxv3vtmvm9nZvdge++D53nr
6Zdli2rj7Oa50iOKntavDtdy95e9YI/88S1fnGfRJ/suhuWum0WOel5unysp
Yz94XDL2xtkn8KRsPRzn25sD4GlJQXoyCJ6RE3dguAS/4bIUW/9//p0aktCF
Lw62hqgHcn+ZCTD8VXLuYBg8K2vuwHBFnPyG4Sr6DM+hx/A38gh5njkML+CL
4UVRP0e4912c/AerL6FnVHFzifdgb1lScekFqy/j1xj1Fe6Dmyvot3ooR05w
Xn38HaK3oPN0QvQVlOdfKNuu4Wf1YaLG/F/0/Y8a/SfoV+P/TuLbO9b/VsPv
IvzGN818EbmIP5HWyyV0RboPLyX6RfKY/e5fZfpF4vb3T5l+xueTY/T66Il5
79MvhtdHX6z7csr7Zkwf7ndi/PXRE6u/T8ZfZ98C+Ori7FoM4Kur3xsBfHXl
26HuJew/9TDBzwA/EuYJyAl+0q+baL+28a2q/9eBvAK//jKm
      "]]}, {
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[1, 0, 0], PointSize[0.011000000000000001`], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 25.}, {0, 10.87}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.780099465644115*^9, 3.780099479343513*^9}, {
   3.780131005936969*^9, 3.780131023115054*^9}, 3.780138404299601*^9, 
   3.7803306889584427`*^9, 3.7803341535747023`*^9, 3.7803368034572678`*^9, 
   3.78246420985462*^9},
 CellLabel->"Out[2]=",
 CellID->1441539523]
}, Open  ]],

Cell["Make a quantile regression fit with 20 knots:", "Text",
 CellChangeTimes->{{3.780099559380501*^9, 3.780099579102277*^9}, 
   3.7803368627995253`*^9},
 CellID->1513732170],

Cell[BoxData[
 RowBox[{
  RowBox[{"qFunc20", "=", 
   RowBox[{"First", "@", 
    RowBox[{"QuantileRegression", "[", 
     RowBox[{"nlData", ",", "20", ",", 
      RowBox[{"{", "0.5", "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780099093403488*^9, 3.780099093405361*^9}, {
   3.780099139592222*^9, 3.78009923804984*^9}, {3.780099285178356*^9, 
   3.780099312731471*^9}, {3.7800994982716312`*^9, 3.78009953661025*^9}, 
   3.780130399124199*^9},
 CellLabel->"In[3]:=",
 CellID->2118136108],

Cell["Make a quantile regression fit with 40 knots:", "Text",
 CellChangeTimes->{{3.780099559380501*^9, 3.780099589182372*^9}, 
   3.78033686499352*^9},
 CellID->2142470525],

Cell[BoxData[
 RowBox[{
  RowBox[{"qFunc40", "=", 
   RowBox[{"First", "@", 
    RowBox[{"QuantileRegression", "[", 
     RowBox[{"nlData", ",", "40", ",", 
      RowBox[{"{", "0.5", "}"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "2"}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.780099093403488*^9, 3.780099093405361*^9}, {
   3.780099139592222*^9, 3.78009923804984*^9}, {3.780099285178356*^9, 
   3.780099312731471*^9}, {3.7800994982716312`*^9, 3.780099500802382*^9}, 
   3.7801303991281967`*^9},
 CellLabel->"In[4]:=",
 CellID->1664936718],

Cell["Plot the regression quantiles and the data:", "Text",
 CellChangeTimes->{{3.780099610018705*^9, 3.7800996447029543`*^9}},
 CellID->640572641],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"qFunc20", "[", "x", "]"}], ",", 
     RowBox[{"qFunc40", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"Min", "[", 
      RowBox[{"nlData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"nlData", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"Point", "[", "nlData", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.780099093403488*^9, 3.780099093405361*^9}, {
  3.780099139592222*^9, 3.7800992908600473`*^9}, {3.7800993882541037`*^9, 
  3.7800994192126226`*^9}, {3.780099511523696*^9, 3.780099539321624*^9}, {
  3.7800995983951197`*^9, 3.7800996042157497`*^9}, {3.780130399132063*^9, 
  3.7801303991344147`*^9}},
 CellLabel->"In[5]:=",
 CellID->1175712376],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAAIo/9o54eoT6ELTTf9SgEQLcIKR9t
aH8/zbAYCYQvBEDBeK6kKGiPP4LOC4YLNgRAxjBxZwZonz8o2R15BkMEQMiM
0kj1Z68/ayvxQ6xcBEDJOoO57Ge/P83DVGy3jgRAypHbcehnzz//ww8IzO0E
QIiYlsmTMdA/hpTHk4TzBEAsaD9aM6/QP3b/jXI2+QRAcgeRe3Kq0T+XpEYp
hgQFQP5FNL7woNM/zitne9UaBUAYw3pD7Y3XPxYuZbIzRgVASr0HTuZn3z8V
AlVr7pcFQDH/YvUW8N8/jDebQzqdBUCMIF/OIzzgP0oxWkN+ogVAdGK6dVTE
4D+kcUK57qwFQETmcMS11OE/vSW8fnHBBUAAAAAAAADkP40BNZaz6QVAIP23
nP026D/J/RfuNTIGQBSeZfAVe+g/Vrx2tYY2BkAIPxNELr/oPys/TqTPOgZA
74Bu615H6T+ykWf4SUMGQL4EJTrAV+o/KGpDeuBTBkBdDJLXgnjsP7bon+SU
cwZAzQ02CQRd8D9bHOxTG60GQNJLEpjOfPA/3EuPtTiwBkDYie4mmZzwP51S
DUBPswZA5AWnRC7c8D/P5ZnPZ7kGQPz9F4BYW/E/ByP12EbFBkAq7vn2rFny
P734s5S82wZAiMb60Fjf8z8VpbTN1PoGQGb3404=
          "]], 
         LineBox[{{1.2579719387755102`, 2.874837620441966}, {
          1.5194470892538026`, 2.915442611970501}, {1.875, 
          2.9780689679145076`}, {2.0064412204719013`, 3.001220753233076}, {
          2.49202806122449, 3.0999044983135757`}}], 
         LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAAvJyCl1MQBEDvBuEAsNMIQKjuhYWk
ZgRAL3hRyzrmCEAEtKYZMoYEQGVxwffu7AhAuj7oQU3FBEDb/qfBOPoIQCZU
a5KDQwVA+YWPGVIUCUAAf3Ez8D8GQBZFyNmbRglAruGB/bZPBkAw1IXQqkkJ
QFtEksd9XwZAjkVZO7dMCUC2CbNbC38GQATPQW3IUglAbJT0gya+BkARfRlC
zF4JQNmpd9RcPAdAbEXjr1l2CUCy1H11yTgIQNiG4JuLowlAqIVkYuJJCEAB
j2Oyg6YJQJ42S0/7WghAUuFBy3ipCUCKmBgpLX0IQG5kEARarwlAY1yz3JDB
CEAI5PSR+LoJQAAAAAAAAAlAvh2lklLFCUAU5OhDWEoJQMzJ2x6m0QlAdvNT
EudbCkCnLiH9wvwJQDsSKq8EfwxAZV6KywNKCkDOAVrJzY8MQLyouSAyTApA
YPGJ45agDEBQOfCTXU4KQITQ6RcpwgxALy1z1KtSCkDOjqmATQUNQNRf0L0l
WwpAYAspUpaLDUCz8Ocxj2sKQERjfWis7w1AHBjUqlJ3CkDjMqsC
          "]], 
         LineBox[{{3.75797193877551, 3.3100977213633564`}, {4.086569273086616,
           3.3484111508383974`}, {4.375, 3.3832156508822373`}, {
          4.5758636579717935`, 3.4074535650167617`}, {4.99202806122449, 
          3.4595473620373367`}}], 
         LineBox[{{5.00797193877551, 3.4615759965684916`}, {5.601750947289335,
           3.5307035434060587`}, {5.625, 3.532961280388895}, {
          6.087323443558433, 3.5778579370202053`}, {6.24202806122449, 
          3.591109452033381}}], 
         LineBox[{{6.25797193877551, 3.5924283281167604`}, {6.875, 
          3.649345413158607}, {7.105766955643816, 3.670632260977427}, {
          7.49202806122449, 3.7115823733608746`}}], 
         LineBox[{{7.50797193877551, 3.7133427259201297`}, {8.125, 
          3.776168693691374}, {8.161764956377146, 3.7799121117133647`}, {
          8.649637706313321, 3.822364381295309}, {8.74202806122449, 
          3.8297085033721814`}}], 
         LineBox[{{8.75797193877551, 3.830954458515282}, {9.375, 
          3.8804846587485295`}, {9.67268172573286, 3.9043802259162}, {
          9.99202806122449, 3.930940937498595}}], 
         LineBox[{{10.00797193877551, 3.9322793975912567`}, {10.625, 
          3.9838054305997455`}, {10.733280233800345`, 3.9928475653932445`}, {
          11.2234532374036, 4.033416046768511}, {11.24202806122449, 
          4.034947587981336}}], 
         LineBox[{{11.25797193877551, 4.0362623652464995`}, {11.875, 
          4.091649982919856}, {12.251097764157295`, 4.125410455867566}, {
          12.49202806122449, 4.149198477250743}}], 
         LineBox[{{12.50797193877551, 4.150801946440289}, {
          13.124999999999998`, 4.21258883308247}, {13.265276371395672`, 
          4.226635585252542}, {13.74202806122449, 4.274022156495102}}], 
         LineBox[{{13.75797193877551, 4.27560263028669}, {14.291499263200366`,
           4.330412338871589}, {14.375, 4.339574175926096}, {
          14.81550486683549, 4.387907088500843}, {14.99202806122449, 
          4.408092949838372}}], 
         LineBox[{{15.00797193877551, 4.409936377406147}, {15.625, 
          4.484066163978539}, {15.834283981408023`, 4.509209553476918}, {
          15.842014817516418`, 4.510172903223672}, {15.849745653624815`, 
          4.511136893774738}, {15.86520732584161, 4.5130667972895955`}, {
          15.896130670275198`, 4.516934293971393}, {15.957977359142376`, 
          4.524700045942081}, {16.081670736876728`, 4.540354584312984}, {
          16.242028061224488`, 4.560893473059421}}], 
         LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAAmFPwcgpCMEAqUGSudkASQH/zwnMe
WDBAbpIBPjNMEkBgxuXK/1swQBLzao5SThJAImwrecJjMEDSQmrfnlISQKa3
ttVHczBA6xAbQm5bEkCuTs2OUpIwQEdzRQrobRJAvXz6AGjQMECFQL2lR5YS
QPav5vCC0jBAClXmmLqXEkAw49LgndQwQLoO5OMumRJApEmrwNPYMECAaV2B
G5wSQAAAAAAA4DBA2NqZjyShEkBWsL3/FvIwQHJF+wMYrhJA7+OA/sUTMUD2
+Nw2QMcSQCFLB/wjVzFAMHSLGpj9EkA01UPSGlkxQGgZFF1C/xJARl+AqBFb
MUDqUezK7QATQGpz+VT/XjFAuHyLKEgEE0C0m+ut2mYxQOC5hOsKCxNARuzP
X5F2MUAO0mKQyBgTQFh2DDaIeDFAn6zkh4UaE0BqAEkMf3oxQPUYtqpDHBNA
aKwPjfV9MUCInMENWR8TQJh+lZ0=
          "]], 
         LineBox[CompressedData["
1:eJwV1As0lVkUAOAbZWgo5iQV17NYFeWcbkJke/VgQjeFQoMIlctN5TWjbnqM
xw2lYfKoayw1UXncxGA11EVFmlLUpJReGpZEDy5m+9f617++tf5/77P3v88x
CBTwgxU4HI4/3lPP7M2DwpkiCg0L/syQGxIIT8tunMiiUOHQEZm0gkCCVkfO
yG8UTn46mqS0koD4vEbkfzkU+tYGGRyxIFAhTdZ5kkch4Hbh591WBOTPEvZL
iyhoetrMlq8hMCu02rWkmEKZMn8PHwgYDI0YFF6ksH/baX6hPYG1SoK29FIK
x3rya3hOBE4uCzDZI6WQKbzzVXMDAcn1vPHAKgrdJmsLwIVApcOTBz7VFNri
+9uCXQl0bt18aF0dhVilhpaCjQQME527DG9RSMkVmf2ziQBPRXRlfhOF2k2B
3Pt8zHeq/qh6CwXt4ogztzcT2F28ik3cpXCZp7awdAvGv7c4peshhSPtAaXm
PgTSjf4uGn2E/SGLQzW34fsHvW9od1HYSzWqPqEN9Y6P+D2jUP/ZUSPPl8C4
UFc98TkFn3yxTqgfrk8mXXKuh8JL3dG/TP2xvojeHS9fU3hycUWVZAf2uyE+
TvEdBR3pNOL5E65vLsla2If1ZA8qTKLldfa3QwYoRH8wL7APxHgaXb3HBym0
bxe5dqErgiMnLwxR6JAMp4QHYTy1At6HzxQmale3xO7EeAEW7qrfKFwVq8u+
oA2krWFmYxSUrJW8BMEYXzk4yW2cgku9TsILdKevPF8wSWFMx3OlawjGv3qq
On0aAxd+iegKWjx96cMyRQZKgYt2qu0i4FziozL8HYNelbhXUrQ+56OR5kwG
tyRbDnNCMf7mE2ssVBl4avIrnNCPi/V8vGYxCAkUxIrQ5WPX9sWoM5g8Wvqg
Gi12dxPn/MBgepJqQx86rPD1hZo5DIQ+qU6aYQScviQ0Pp3LIE3ZbLsVWt91
Trd8HoPGkwMzvNDy/EtfudoMcgfbnSLQj4cciB2XgaLpQ61ENGfq0sd6NNov
JqPFv0etP2zAwH6JbVwaOmxAOUhihPkHJCopU/kczv3cuIhBeMpiM9FUvjOr
sntNGIxw7vcK0WPv28pnLGFg6JFj7od+ZBvSamzKAGJE6vbo8ozxt+uWMdCK
S03SRae9Pq0QZs6gzrMqdQTrC7Uy5SYzBi1KiotlaKe0xlWXeAyOZAp80tF6
Pdv4dy3w+y9yrid6lDe0p9+SwVnepQMa6Ecnfj0+azUDd5e4oGbsf/m/+pLl
tgwircN7Y9Bp5tdrPexw/Yrx3wzRoUnuj6PsGbQWlkhk+D+dOt98zHRkcJ87
+TwIrWf6i2qlM4OaSGHZKM7DaKKmScc6BqdylbRS0GUmTr5aPzKQJWbkZ+M8
pcY/PWDpxmCjxYkbmujQe8IMHw8GX28WHEjFedQ9eF521pNBegQtCMF5TZVN
mOv7Mdjb393TivMPUW8odwcDnvf290boYe02tiCAQYdtolc07hffqDzenGAG
9dF1u6bjfjLTsbFU3svAOJN49+D+fCkzspohwPqa75yeiT4T9b21QhSDdweX
Wi7zJjAhe7JaHs0gy6GnfOdWAm1RsXaDCQyKjxnHiPE8EOkEQP8vWP+xBX3J
eF5YNK237zvEYCnnWsNhDwL5OvMce5MY5Pu/KvZ3IyBoura2M5WB2h0thw48
n9S5wxtv5DLQ9X0rldoRuNn01K0un0HDID/TG8+/GGGje805Bt3jwR0jNgRe
NGVuqvyDgThJdFLPGvsppFsulDBwtst6sJxHIIQ7f2vRZQYbcm1eFzECC5o5
XpKrDMz2pfjNpbhebrt3biWDl6l6ojdmBPjNEb7ptQwWCgzOOppg/0tmp43U
Mfhgqc9XNybwP4TYYqQ=
          "]], 
         LineBox[CompressedData["
1:eJwVkgsw1Vkcx69bopJL53+7ElfZtHlsj3OUPMpXDyotu127SLuJCKvNI41H
lzC92BrRurcWbWrtFFpSU1uJkJHUVK5HKhEaZYkN2y5qT2fmzJnP/Oac3+/3
Ob95Abs3B4lFItEGvj+dasVg1LQqijZ5YHSGOUGz6Yh/ci2Fq5P4lr0ZQVrd
s+2JdRSvm7PmD5gSrIquCUiop1i/KKmm0oTgb9OiwNgGismuNbmlcwgK6rJ2
xDygUBoHllQaE2yJTgiKekihU+I33j+bQF8eGLz7McUprYvJ9pyr6jbuDNdQ
GJItOGtEsDeahoQ2U+zv3LbCmrOV3Dg0uJWicXdF6CMZQXudVlhgG8X3N2I1
P3POin4d5v+MQlSbHhvL2dg1PlLRTuFy3U0njnO+0fRY1w6Kp4UT+dmcrfp+
SbR/SeGYU+z+6b1L5TYHbLop7h721rLk+RwyytPNXlE8jxqrzuV8O8Ajc2Yv
j/udzFrM612/7IVa+w3FDJelEe2cH+pEnH7fRzH+WbXvBd6vT5uooK+f4i9t
z6+yuI+OouNF7W8pbnZpFCe5r5Ak87JHQxQlFV47bnKfb78u+7PmHWf1g+Rx
Oe9//trKqyMUdyJWF/nOJfgwqqm98A9FyrqSrsZ53F/OaGPGGEVQb1ycmQVB
9o+H2lInKIqvNLUMLiAwdTHq3PuR+062XvNiIYHNK/uBrZMYEiV3QL4guHyt
fthTm8FLo9vos5jAKd1vbLUOQ1W2a9SNpQTuS5S6ltMZ/jMsaWlZTvBYrC8x
mcGgbHiae9ye/2dTnlQiYfjygFZkiBNBWHyl+chMhqn9Dqt2rSY4XDNp5W1j
Hs8P2tPoSWCgOrHmsgnDKbft+TEKAlWoxcbf5QzW/d8+t/Xm86Lv5n3UnCFs
0ZL4adsI7vikRfpa8XpVpzxnRhBssp4Tu8mG57cK7snZQ6CZKEx0XsTw4Kb1
4bVxBN3599MtKENGy7nhNykE4n6DgiF7hoEhj9ATKj6/FWeKuh0ZHKPeBOvk
Ehhm0rKWlQyGQ0mRqnyCuXZeleUuDEY96mL9iwTOyaq2IxsYLpWm3PatJdgn
lUvMffn9J8t8AsYJ7pdO3eLsx/Dwo6C1brIAucfIua3fMXx+Tda6QU+A6NPy
Zyhr3SxNnyWg4mCDg2o7g6zzkMF1EwHi9/HBemEMGgkptHUWcKitpXw0niGr
VXMwM01A695qXUHJcMyi31B9QsBC8odiaRJDu5blvYo8AfXuB1//kMrQGTO9
LqZMgF65rbQznUFkl9CX0C4g8/Tx8Hs5DB0LpjwZdJCiy1F5tTeP+8z2dp3t
JoVta4h4yhmG5ScbOgMVUjQZQI3fGIRv5p3dFi6FUcpA9ZViBv/zMZ5Dp6XI
2+E+59db3Petux7KGbNw3lK7fk8Hg3OBWa+dWIbHJi5ju14yrIgrTv3JUIZx
idJmZzfD/AaLng9zZfAYHT7m28uw723Tv06QYbiqW7FqkMFsiW2YfL8MIUWS
oyMTDJf1etRp72T4HzIV3wc=
          "]], 
         LineBox[{{20.007971938775512`, 6.022382098933366}, {
          20.37013393685995, 6.823073904268532}, {20.625, 
          7.411085212477529}, {20.90476219011239, 8.05653533388112}, {
          20.912963506086662`, 8.075934827171901}, {20.92116482206093, 
          8.095348761770333}, {20.937567454009468`, 8.134219954890767}, {
          20.970372717906542`, 8.212135636824234}, {21.03598324570069, 
          8.36866018346695}, {21.16720430128899, 8.684482007851347}, {
          21.17540561726326, 8.704343622991392}, {21.183606933237527`, 
          8.724219679440157}, {21.200009565186065`, 8.764015116259657}, {
          21.23281482908314, 8.84377928559287}, {21.242028061224488`, 
          8.866222304343495}}], 
         LineBox[CompressedData["
1:eJwV0H801XcYB/DLnBFKt6jDlnS/n7Nqhxn1+VhZvJPf7bZb97ZpfmxJyAm7
ciW5aUuKSLgqTejQPaEZQvnRYt0lzFXE7FiKtNBECMm023POc97ndZ5z3n88
q/zDd+zV5vF4Lpp9l+fFYxH6ThRGysSZ79pWYa1/0bb/QimWqW3ZorMC3L24
sXQ8nEInQPlwU44AgX818welFGORNaN+SgEKRM8ftMsoynkqsaxKAAtHS+8r
co2bfT6Y6BRg2YclQeIUikbTy1dsl3Co/NqhyT2VYtrZYjbalIMkQ/2xQxpF
37B9VakFhzT90ZE1mRT78iRhk59wMHxtHTmfTdFfZ9D7hycH7a6yo4VXKZoq
z9Q2xHG4xHfqzymhSItaet08gQOE7VsUpRQ5ZWxFaDIHuWr8/bgKCtc0v7W9
5znMlK9LkdRRqLTWb+aXcXiRWpn1toVC/9KrsNpeDiktLm8mWymOzMQZWw9w
sNTt8hluo9BqLCKKIQ77jkyt7OygkLT3xdtOchjYb6cs6tHcz3Y61+sR8N7N
Y4pd94Sf+i4l6PGoLt/5nEL0sOO3ldYETl8WeMlGKDoNqvYYrCcokqTOK0Yp
5BP2j55+RhDz7V7PBxMUSaO2gUFOBGYyfv+OOYpqReu1bAnBjzFzJyLmKYxT
Wte+9SIYjntmlc5jyHCQxoh8CaqTbh66r8NwsDW/+NZeAq+8fXzRQgZhVqXw
noyg/rLkergRw1HvjvOFhwjWFDv6pvIZcrsVv0rlBDOVJoVqE4bYWe0L6niC
cy0NEJozFI+cOlOTTjB/7+o/+y0YimIaS/XPEgR2nUtOFjBM3VIWe2QRsL7Q
7paPGA5EiWwUuQRdU6bfe1ozDKWLYr2LCRzmdJaF2DA0DxZKBSUESq2x2sR1
DC+mlZu7SwmiDO/oNtkxpCBZuriKoJdf9vPgBgaBPPJ++g0C1+XZYr3PGWyk
PEOdWgITQUSuGxiy49/jX7tFELva1yXIiWHB5ZiesQaCAUv35wnODKfkmUdX
qAgq7Mzt7rgzuHlXfbPlLoFE2Kx23s7Q83vBtoY2grodlZEBYobEXza8kN0n
IF55ZvE7Gfq3RwSbdhBM+kcF3t7FMK1S/2vZReATvNvwiTfD6Yzxqew/CVSh
X5Rr+zF0mNX0vOkmyIgWzG/2Z9j+1Xqa0EMwK19YsDuAYXLBs8Kyvwn8j814
/BDIUBO16XXLQ4Lmk09G84IZbmfbcZ29BLan1Zn1IQwvD3eubn1EcCGj2v7x
foabxst1Kx4TaGcV9L0NYwgPnKtP7CMIyUk9sVLKsEd6fOe2foL2/BgrxwMM
P9FyldYTgiW8quqNMoZoXVVblsZin5cu7KCmP99oSDBAoLhh2W5ziKFtUebi
ixo/MA72szrM4OwmcdV7qvm3NH94jZxhbqswKUDj4KtGKa80XrTV5dhxjf8H
lQHmug==
          "]], 
         LineBox[CompressedData["
1:eJwVzQss1XEUB3AM5ZGuRyUR1/4/khLS7yc1falM77ymEsk8V3JnklU0TCqT
mzfXapmm5jGuR7pJMmttHptHKsmk6GJ5xL3SSP/Odnb22dk5X2FIjHeYmoqK
ii3f/2ehz2ysdgpFvl9ynWCcg/GoeMumNIrdVokH43mfce0sN0inqDNMs5Hx
HlS6t2plULiESS94/OAwFGE/t5hNIVRLjRPJOZi2X0qcz6XQDb9e3sI70KJc
ayafYuGolY/eBIfhj2aW48UU2tkSIynvkSM6Pv2lFOmmywd0pjiM2Y7X10gp
nmjnOatPc7C6I3SrrKd4HN6vjOId/v18V3kjRbf7u509vOUlfWMPZfw+vkuj
bIbD5Lo3GzPbKGJ7TgQFzHGYnpEkRPVSOIqsagUKDnbHP6iH9VOMtFb9yeQd
89TgQfAAxbh4ollXyWE2+O4z/0EK36qkCr1FDvM98YOHRymMx7Y6cEscftd5
7bf8xd/vYMN5Kxx0nWm34QJFgSKozfovB4tmk2ANJYVnt1jwkrdn+7dU+RLF
bLPB1Ngqh6L+qx3VqgzuKVmFx9UIXBRF5/bpM+RUXn4fuIZg9X+ZM3T4CYar
dQlu0tEEX3uG+8kNA1kGBGLZW20PR4aAWvPlk4YEZa4VJcyJ4dNiTsZ6I4JO
j7hWE2eG1y+K5bkbCMz8Ndd+PcDwZZtQUmNM0HJte0H0KYaVMv1RW3M+rym2
4fYVBn1h8qLDToIhTWlGqYihTKc51dGOQOY7d7EllqHpp7nMaRdB3GyMnjKe
4VhpCHF1IJBbR0eE3WK497xPEbqHoDc/YvMhMcOrnNAkNVeCJ3HnE1WlDMPb
3ewSTxOktEl8zOr5f/skq1IvgmDBZ5u9jQxF2Hpj0pvApPLsgEjGoIVHoiA/
gsjK9ZmKVwxpCXaRMf4E/wAqsC5p
          "]], 
         LineBox[CompressedData["
1:eJwV03s4FWYcB/CzLusyNaQopqXeLltLZ8n5TW19qWTDU+eIEsrcOiZSpMjW
xeW49ax0IZdkrrmc0U2SUy51ShelkukIWWHZKqPjhNnb+zzv8z6f5/3j977f
3/vO8tgu8R4lEAjs+PywJju82TmxWoSNcu+hJmeGPRJxu+KhCM902970ejLY
LrZeHd4vQqnZUq9tuxgEjx9/FKwWobvI5fnmEIaLod4KP40IHsccndfuZjCp
iRS5DItgcaVG+EUow3vHmgUWYwllPrEJynCGgr2YPKBH8Fpzuft0BIP75/fr
Xk8j/P1Sv39nJMO061tknQYEuwEbjVUUw8HJ+wRPjAgGQaxHFc2wKbOy98Ic
gs1t5d6BWIYJSosnQWaEkaFSq3u/Mij86o76mRO+vGn9dN9hhmDtTes8ibBs
7O/bTI8wtDmH3pIsJ9xo1oTGJDJc6imrEK4i1P6x5zuT4wxS3aWnXzsQ2nyM
tvedZDAuq3XtdCQ0uXYdi0pheOSyfnrrBoJFleycXioDcoIS77nw83Xi6cI0
ns+H4U5w0PvK84d0BgM6G1nsSRAnpT1adYpB6Wbq6xdEmL1bEzDlNwZdT2lF
+i5CjP0ZwyPcm6WZk+7vJthu8LLUymJ4t3PKWbNwgq/2kPo995wY9fvhSF5/
sFTncg5D4KHF9otlhFFhFdGzcxkqEn0zPGIJR03vB8dxS9KfrlQeIuSLDK+s
y2PYf/ZqwuETBOubIrUin+FO2cCz6mRC39sUM70zDPqVQmF/CkFn7YRXPtxy
ZdZj5wyCU+G4mjEFvJ93VPMSMgnj85L+XMtt3TA1TJHF82z6el8yd4tKZjw7
n99HFTfTpJBh/vNrgY4FhHj5GubJHdypqZYVEQ6WfZqdya3V67e1p4RQL63S
0i9i2KjOLjc+R1BOKnxnz5011PKJ+AJh1asM54PcFuPWlVwoJ7hbFcZ1cEdr
xY7qqiAUVFZt1C5meKBTvX6GgiDZ1pFhwW2kP5hrd43wVqzt7sEtNTLT/FJN
CPe3OSnjPj/L37a0lvBvebxtAbdgXm56xw1Cw4rmkDpuu4Wtr6feIlQNLjHs
4k4SGljZ3Ob1u5NptJzhubn4WNhdwnytCfWG3IuWx70squf9kkY+E3KHWdZQ
6wNCcP/Erau5b1gPxek8IgSVp0mduHXtlrasbCR4nPumw4vbTRxgGtJEuNfW
3hjIne+UdyC/mfdj9fGVYdx9Lm0Pm1V8X+Ww4AA3fpw+d1IroTvvs5go7ngf
yZ4V7YTv5b1bZNyNfvF1Ozr4f3vRUBLNbbKj1ij7BWGqkyIsgjsgZDigsZNQ
/O585c/cl/eaV43/i/Ci/mLoLu6PD2yfsqyH4N9SI/+JWxyd7+3/D38PxipX
N+60+PayjDeExKMjEfbcXYdnTGzoJbhZLpqzjNvshIPrmH7CBmPpt3O596cm
yM3VhCVUXD+Z+87p6wJfDeFqxHBzH89XP/c/Seog4dRo5y1N3B6Fopy7w4Sc
S1ddy7nlJYHqkRFCRLbwYRL3/83LIl0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$651010#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX041AcAB/DjiIeSuV2pHm+d1plLSel44nuLXnbk2egRadUuuXsQrgeP
MS9PWOfxnic8YznLy2J5ySVW2czReQmHEHG5LUOq+90becm2Pz7Px4YT6XtF
l0Qiuf/n/3fnrt+5bVnufqIu8EcVXY/10NDO6iovGSmcLwUNtWRWe1xdBZ2X
C6cBu3m6I5nVdYDP3cQrw4r0MdnbU5clyRo6peHWwyrRvjQok8RSpG3+J66m
EWYaoY2aRmIldtTbLQmbsMQ2OZSXtIFClrZOlf0QIRe9nnquraPbNbV1kfs7
+MP+IpbLKmqPUpIO1/+BTvbpd/TCFRCTwWXRNe0wctpjIlj+gKSdhnKlsAPn
/L/bqHm2DHFrIPlgqRi8fM1gBGsZRoG1tvyiTlx28xPcbVlCUZEP9332U9jO
3f8ltVWLaWehwCFDgoVZ0Se0Y1rYjhJ3r6Z147Z/8SWXQQ0aPr21+Ca+F/0C
ckPPmhraptkt9rF98PbKbDheooabH3N/KP8ZWpPUhUegRk/+JH+OO4AgZhg1
pUgFQXFhd4HjIHLb4u6NeqnA4OGcU/0gRA+49hX6KgwcmVsYYkjRacHMnRMr
cc0gP+FajRRd2vnxOxlKUMdcNpvRhyBiJRqO+inRUiUvbawcQt4qYZFMUyIo
NnPf17RhBO49taNsmcDH44faFMJhmIqTVw4PEyinTvnkWY6gRVrc7tFEwPN1
umx/6Qi8vyqIkBQTmBM5RA3seI5+ROqIUwlkpo2RIouew13IiHeOJuBwJiXf
hDqKEn7vuFUogSGa3e66m6OYb/KySLlCIEYlvX/adAw07r2TZ0MImHfEe7zN
HgM7U3G2MpzAo5u0kSzjcVyypvqExhG4wOkLZmSMI/izXZ9XZRDQORij6d30
AgE/6S4GCAlU6Fj+EJb2Asz03oLrjwmclHZtM9adgMF0jA1tmsCCMLK6JnkC
4mqdW676SuREmTPZ6xMIl0e8kzgq4chql8zHT0I/58m+/stKjGwNDcxYnkRO
zVtfdokScTKzBXrsS5CYG9+4jSuxq/5RvET1EhxnpU/1ThXakoKNefwpiCq7
9gg4Knzrs6XU4P0UFOnfy2X1KuhZNjOqw6dhPUZJr9NVg/3EwGeWK8OxvtmE
hhY1HDc4mm0KGShtwuYEWw2yrC/2046+QtUXf5s1FWoQzfkt5oz4Fcw+GhwI
ydGCR+Z1hxvO4I3znGKGsoTzFVSLdO8Z3NDxHe4uW4LnbJT4wcgMdLz/XJvq
WQbzhqV5v7kcsl6Jh1HoBzDofWGz5+W4PhXw689bV0AJ3UvZ/loOvWaqfHvE
KkyzNeWNbX9h3rWcfWF4Hf8ChVLz8g==
          "]], 
         LineBox[CompressedData["
1:eJwB4QMe/CFib1JlAgAAAD0AAAACAAAA8HIKXk5B5D84rQobeF3/P8ovOQmp
feQ/7YKH2J0HAECycZSw2QXlP9Zk8cIuyABAphJCBPJJ5T+xcDQ7TyQBQJqz
71cKjuU/do4rYKp9AUCB9Ur/OhbmP9T/NbAQKAJAdJb4UlNa5j9qU0nbG3kC
QGg3pqZrnuY/77gQs2HHAkBQeQFOnCbnP8C5u2idWwNARBqvobRq5z8RVZ9G
k6EDQDi7XPXMruc/TwI30cPkA0Ag/bec/TboP52SguzUYgRAFJ5l8BV76D+o
dTZ9tZ0EQAg/E0Quv+g/pGqeutDVBEDvgG7rXkfpP2OKiju3PQVA4iEcP3eL
6T8rtQ5/gm0FQNbCyZKPz+k/4fFGb4iaBUC+BCU6wFfqPxmh01VE7AVAsqXS
jdib6j+bEyhM+hAGQKZGgOHw3+o/Dpgw7+oyBkCa5y01CSTrP20u7T4WUgZA
jojbiCFo6z+91l07fG4GQIIpidw5rOs/+5CC5ByIBkB2yjYwUvDrPypdWzr4
ngZAamvkg2o07D9CO+g8DrMGQF0MkteCeOw/Tisp7F7EBkBQrT8rm7zsP0Yt
Hkjq0gZARE7tfrMA7T8wQcdQsN4GQDjvmtLLRO0/BGckBrHnBkAskEgm5Ijt
P8ueNWjs7QZAIDH2efzM7T+B6Pp2YvEGQBTSo80UEe4/JkR0MhPyBkAIc1Eh
LVXuP7qxoZr+7wZA/BP/dEWZ7j84MYOvJOsGQPC0rMhd3e4/p8IYcYXjBkDk
VVocdiHvPwpmYt8g2QZA2PYHcI5l7z9SG2D69ssGQMuXtcOmqe8/kOIRwge8
BkC+OGMXv+3vP7+7dzZTqQZA2WyItesY8D/YppFX2ZMGQFM9X9/3OvA/4aNf
JZp7BkDNDTYJBF3wP9ey4Z+VYAZA0ksSmM588D8O9jYT20QGQNiJ7iaZnPA/
XxnHGLYmBkDex8q1Y7zwP9EckrAmBgZA5AWnRC7c8D9nAJjaLOMFQOpDg9P4
+/A/GMTYlsi9BUDwgV9iwxvxP+lnVOX5lQVA/P0XgFhb8T/lT/w4HT8FQAI8
9A4je/E/G5QoPg8QBUAIetCd7ZrxP2u4j9WW3gRAE/aIu4La8T9noQ67ZnQE
QCru+fasWfI/2/TOYAmDA0AwLNaFd3nyPws60venQANANmqyFEKZ8j9fXxAh
3PsCQELmajLX2PI/VEo9KgVrAkBZ3tttAVjzP7qhWRdaLAFAXhy4/Mt38z/p
5zNApdYAQGRalIuWl/M/Nw5J+4V+AEBw1kypK9fzP1P2R1AQjv8/iMb60Fjf
8z9CrQobeF3/Py8lyyE=
          "]], 
         LineBox[CompressedData["
1:eJwVkns01QcAxz0jlXORTnk0ryyPvJp362s3bWitlZukbSLlNVmS0corO+yg
eXU8Dt1cRpR5xDUsmeTkpHK4DuuEo7Atst99/O7vce9l9sf3fP77nPM552sZ
mXjivIaamtrBjf3PVG9t50YLGVp7BcsfTqhQFpSisXxLBt2+V3lNBxTgDztZ
ZE7KMHhdZaEpZVCvtaU1iJRBHJyfpjjJoJn718fGxiRMUv9wtu2nIeznn2nm
kXjZZNtleJvC78of3iUnk2joPpkjMqYw6BOahjISR4z2tT8tkeOFkFMumiDh
3ymyDqgmIZKt7OFLSdQy9bETe0m8chvpjDWSY7XAfFtxrwyLv2aNr52QQ71G
J6HuvRTvVr6OGEmSY5NJmh19UwrC3oco3fA+WSg5lOEuhTxmR8Y3HXLEqXh9
XvMSKBsk2+zG5TCNelRkUyKBxuKLaqlYjts7xx9zAyTQtb7n0G9AQWFSyCvV
lEA/Irc3z5WCTzzB3TEkxnb+ucDg4xTiNytvPvtJDJMZTJtfojaSWr0e8MSw
MDWL/ruIQrbzVr/nNmLYnqbJjjYKId2cX3axBBzKRTnXxyhYFj6MrhARcJls
MwogKIy3GeYFdhLwMCoUGHJoBFtxNu2rJHDgeKzrjDONqfmuee4NAtyfDw80
HqPh+K+maX4SgcygzqbxizSS9ngOukUT6Ne2LlUV0lj8oHvnn2cJKAeKr+1t
oXFh9sbu9HACPtfULgSP0lg/WzNheY5AqmfisfRlGkWNml5D8QSEkhmvJj0G
nA7hkfNpBGQtn1uJ7BjMZgr1tQsI7I/t27IewKDCSDOrro5Ako09aRfDICWu
WuA3QKBtrmKWl8sg5Mfsy6/nCaxW6TzNaGDwRVSXNEVXDMeQlPbmJwwCdNyt
OR+JEWewWDW5wCDporrG3Sgx7o4G56hpsbhSaVJ0sEqMpdzBBAdrFoK8zOcT
IjFsDrmeCuGyWPfd3xu9XYLINb5fVgSLwAduIWyoBHd69O3vZ7JoXk2vzRdI
YOayolR/xCK/XXW42V+KsOWwJcdZFpbeLnzPGikqGkZenlKx6MlpbXzMSmFs
3iho8VVgc0zZ8NSQDLxp44LpMAWW15nX4a4kSkpzrmheVaDnzH3BkoCEvl5k
wOnfFMgLp3yJso0fUmarWu5K0OW2DdJOGv4d+VPOPCU+/VLicSmQQXYCOxB2
WYlbo3rfv3/DYO3tVGlbuxIxBlbab2wUoMZKvL9yUkH47J/QvgUVPArUrXOP
qpBYbxrlVLuG5M++29rxrQrcT6p234lcB/Hw6JzOPRWy3/aP4aqaX94wOxY6
p4JxyK7iSnt1v/8AyUIHPA==
          "]], 
         LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAeDkFL6cg/j99mbRVjw4CQGQh5lcJ
Zv4/+PnAzPX8AkDgl8MqX6T+Pz6ADk3lzQNA2YR+0Aoh/z+hCFIM3mAFQGUv
+g0xDQBAfQZ7hTZLCEBM24elGB4AQBXYTqhLqghANIcVPQAvAEDPzT7G6gcJ
QATfMGzPUABAESZz88a+CUCijmfKbZQAQMqJLRP3GgtAijr1YVWlAEBkfeIO
XG4LQHHmgvk8tgBATJWzBUvAC0BAPp4oDNgAQKgxquTGXwxA3+3UhqobAUCg
HelnNo0NQMaZYh6SLAFARTN/POvUDUCuRfC1eT0BQBhtMQwqGw5Afp0L5Uhf
AUDFTeqcRaMOQBxNQkPnogFABsKtg/ShD0AE+c/azrMBQIr5JDH53Q9A66Rd
crbEAUDNKtzsQwwQQLr8eKGF5gFAH70ZjqFEEEBZrK//IyoCQF67PbOYrBBA
QFg9lws7AkBD6Gn2wsQQQCgEyy7zSwJASickNzLcEED4W+Zdwm0CQLXbQrHf
CBFA4Ad09al+AkAYUafqHR4RQMezAY2RjwJAotiZIaEyEUCWCx28YLECQAwe
KYh2WRFAfreqU0jCAkAE3MW3yGsRQGVjOOsv0wJA+qvw5F99EUA0u1Ma//QC
QIKC8DddnhFAHGfhseYFA0D8iMVdw60RQAQTb0nOFgNAdqEogW68EUDTaop4
nTgDQAoJmcCT1xFAuhYYEIVJA0DyV6bcDeQRQKLCpadsWgNABblB9szvEUCK
bjM/VGsDQEcsaw3R+hFAchrB1jt8A0CfsSIiGgUSQFrGTm4jjQNACkloNKgO
EkBBctwFC54DQKbyO0R7FxJAKB5qnfKuA0Bfrp1Rkx8SQBDK9zTavwNARnyN
XPAmEkD4dYXMwdADQDpcC2WSLRJA3yETZKnhA0BYThdreTMSQERjfWis7wNA
sPlnHtA3EkBG5h3E
          "]], 
         LineBox[CompressedData["
1:eJwVjn9MzH0Ax298vt/7psvd9/PUrdiQdFyORForz/W++ZE6FenJo+LiKiUT
mzo9uX4qFp4nl0jsJnIjl01xrXhqCi0JZ+XXynB+NFHMlUZ+nD/ee++1vffa
23NzRnTyBIFA4OfI7752svDYWgnBqK/6/esQilxrWFuoN4FnvWq+ZilFiv7R
et8AgnFriN/c5RQR8uRP0lCCLM+YGH4FxdcDmVf7YwnWpFVcdXfwuaHi4poU
gvZc9eA6xz52zdGo9CwC+6Ys212Hj1w2eSwsIbhHpTV6FUW9tNE2VkHw52Gf
eUlKCk12R13rWYJ/+htyC4MoRH2PdCVXCCK/XKp8vJiiWTmgirhJ0PdsVk7K
AorU6jFn116CkXKRTOFD4UacHj59RWCTph2Xe1G0pXicqrYTxGwJ6t04lWJH
p3xrKmFwqDj/SRelmKYI8vd1ZbB9Z7BphxNF17/hP0a8GDz3SQ+O+MlDFpNu
KFrKYJSVt9YN8Oix5CSEr2VQKm+s8+vjUeBxUMZrGbR4NCd9uMs7fpmbjYUM
ArXTFKJ6HqWq//cmGxhkX8tbknGaR2BNd6TiNIMk219ukww8ytOGXjZdZxBc
lTjj7XYeuPPDnG9lMNunIlqewGNovlgX+oLBjX3KiDMreYTbfZ17BSzeXBg+
oZzOQ5C3c9HHEBYbKruMtF2Ciy8KvluiWJgqTK5/1EoQv8zQodewqEocjVaX
SWBxaoh3zmPxn8Y+RxsnwbYj9iJZC4uRCT27Em+LMeULifzQzYJ//PBt/wEx
Ota7uV/uZ/FxZfvgbbUYM6cHmFXfWbiO/236fGsynpzX9SQsEWK4Vvcmr9YF
JaL9Rq9VQljjOp5na1zgn1GZ+i5eCJ1JsM1GXVDm3zSuyxHCS7xgMZMpworW
r7PKm4WonlNoKJI5o75Hn9kZyKFoz+fd6UoO54qTNr8M45Bzn44NWoUwBqij
vsVxODbDrDiqFaK00l0+T8/h0JVVli0FLLQJDX1l1zl4NixX/zQRxLlUdZ5/
wKF1wD+rey7B6pZ8S5uNg3SqMfbmxYlYptWnmoc51DY2eR+OnYhfwLo+6w==

          "]], 
         LineBox[CompressedData["
1:eJwBwQM+/CFib1JlAgAAADsAAAACAAAAvJyCl1MQCUAgjuM7W2ICQBTk6ENY
SglAUzAXJiDGAEAKlc8wcVsJQP6aZc/cUgBAAEa2HYpsCUBPUWr728T/P+yn
g/e7jglAZlyv0hsU/j/iWGrk1J8JQIxLVU05RP0/2AlR0e2wCUCwgf3R/3n8
P8VrHqsf0wlAScFU+Yf2+j+8HAWYOOQJQC3LA5xJPfo/ss3rhFH1CUCxG7VI
tIn5P54vuV6DFwpAiZAewIQz+D9281MS51sKQOzIDCcSy/U/bKQ6//9sCkAA
CM4ZHD/1P2JVIewYfgpA14yRFs+49D9Ot+7FSqAKQHBrHy4wvfM/RGjVsmOx
CkCUxOlI3kfzPzoZvJ98wgpAeWS2bTXY8j8ne4l5ruQKQJJ3VtXeCfI/Hixw
Zsf1CkA46ykYMavxPxTdVlPgBgtAPqX/ZCxS8T8Kjj1A+RcLQEOm17vQ/vA/
AD8kLRIpC0CY7bEcHrHwP/bvChorOgtAnHuOhxRp8D/soPEGREsLQGFQbfyz
JvA/4lHY81xcC0Bw1pz2+NPvP9gCv+B1bQtAuppjCNxl7z/Os6XNjn4LQKPr
Li4RA+8/xGSMuqePC0BOyf5nmKvuP7oVc6fAoAtAGDXTtXFf7j+xxlmU2bEL
QIItrBedHu4/qHdAgfLCC0CtsomNGuntP54oJ24L1AtAlsZrF+q+7T+U2Q1b
JOULQAVmUrULoO0/ior0Rz32C0AQlD1nf4ztP4A72zRWBwxAuk4tLUWE7T92
7MEhbxgMQCWWIQddh+0/bJ2oDogpDECwaxr1xpXtP2JOj/ugOgxAXs0X94Kv
7T9Y/3XouUsMQKm9GQ2R1O0/TrBc1dJcDED0OSA38QTuP0RhQ8LrbQxAPUQr
daNA7j87EiqvBH8MQGrbOsenh+4/zgFayc2PDEDWqADSY9juP2DxieOWoAxA
7cjRMgk07z/y4Ln9X7EMQLA7rumXmu8/hNDpFynCDEDgAEv7BwbwPxbAGTLy
0gxAjI3ErDhE8D+pr0lMu+MMQJ/DQwneh/A/zo6pgE0FDUCnK1PDhh/xP2B+
2ZoWFg1A+l3jIIpz8T/ybQm13yYNQKQ5eSkCzfE/F01p6XFIDUCZ7bU7UJDy
P6o8mQM7WQ1A9MVcRSb68j88LMkdBGoNQJRHCfpwafM/YAspUpaLDUAmR3Nk
ZFj0P/L6WGxfnA1AGcUwGg3Y9D+E6oiGKK0NQGDs83oqXfU/qcnourrODUDy
N4s9w3f2P0RjfWis7w1AcKEn1Uui9z+arrUo
          "]], 
         LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAAvJyCl1MQDkByu5+RpNz4P4QEKPUn
mA5A9HNzyO0a/j8W9FcP8agOQBF5ljyfw/4/qOOHKbq5DkBWUzNF72z/P83C
511M2w5ArkLtibVgAEAWgafGcB4PQENwb9PouAFAqf0mmLmkD0DCu99RLXgE
QGf7kp2lWBBA7w9w/C0yCkCUTuzDeWAQQCQWvMIXigpAwKFF6k1oEEDHMoWG
RuIKQBhI+Db2dxBAOKyOBnOTC0DIlF3QRpcQQFKjfugH+QxAKS4oA+jVEEBu
oNIzIdEPQFaBgSm83RBAoAD4aK0WEECC1NpPkOUQQPg7xbbsRBBA2nqNnDj1
EED8UpvO0qEQQIrH8jWJFBFATwM27zxdEUDrYL1oKlMRQCFrJfSI2hJAGLQW
j/5aEUC0yByvzQoTQEQHcLXSYhFADrHS6DQ7E0CcrSICe3IRQIkiethqnBNA
orE+NNZ3EUDUDXS6y70TQIZjnHE=
          "]], 
         LineBox[CompressedData["
1:eJwVU3swnHcAPNSj9eh9v+++H6riEUNPPSa4dHqGrjRIL2VUNN6HTJDB0ER6
ZJo2nE57lSGOtuGSuh6iVUKQeLWESmUaUkwSqWdFcKEjbTAxEqWXP3Z2dvaf
3Z1ZhyNZ4cn6PB7PT4cXLA3tGxQqGKD4tveaowDvP/vywqCSgfg/oWAkVoDc
kAd96goGCd9NrLopBKj5XvwoW8Mgoq3Lb7ZFgK2gFZ/XmxnIIl62khhweEMV
FPtvB4Op8ZwfeEIOESvq/Bu9DDT3uWrzEA6Xy8L/yBhh4I7ZGdcSDhOL9ev4
k8FYnZmdbxMHI7GhDTfLgC06NqgZ4uBVJA1Y0jJYWVp7KH3EQTrbntr9DwPH
643HTuhTFHozxcoNBgcsKqKnXqNo+yLtavIOA/2xlraLeyjmxvsn3jYmaLDc
OtMaRGHhbqtn8SrB8ujJa/YxFOI8mcscJbA2so2cT6dIuTMc0raLYE/r+tHt
TyhKnYUnC50Josafz2QWUvSckqukHgRruV6/ic5TLA9N9nrtJahUllseqqKg
9iKtkT/B9d0eYwP1FPuyi80nAwnaPdZ4ylaKrAGtd1MIQWyr9nxzJ0UvGtLd
DhNcPZtS8nEPBf/nj6rrpATj1aH2gX0UiSLRpHMqge9zdbD9rxRXmjZJTRZB
d2mMkbHO57n2SBxyCUzTPovb7Kb4oEYur8wjcMo3lWx0UFTtCu6y+Ypg5L7e
MK+FYrXcdLVcSXAgM+lvrk6Xjx0RUhXB1ruu6r2VFGVFXyeVVen2iY5bPqKk
mDeOruDXE5xt2hhSySl85LajRa0ET/dvBc0cp/h864GJ6S86bZ0W5Z5AcU9W
C8UNXX+PAD2FhML5SVqu4W0CUUF+wGNvClm65xX5PQJjyzetE20oBhbWtDvT
BM+W/RTTPArLxA67TxcJOrc7i1PmOXREBJzL2SBIXFhJunCJg8mw4c31HZ3f
fskjuIBD1Hu3to+bsMi4NVC6LeWw6XcoM8OaRX/jfocSPgdJh2XtkgMLdZ7m
YNqiACqvqekUVxadylTzsC4BxC7JIUm+LDazPSP94wQ4zc9xOxzP4oRPo0Gt
gsVQoe/RO8ks3nrpw6WpUBa2hryLYZkszrHJKXYsi55NhenBMywkT3qdb35D
wHuoWn5Hw4LWpfZqChiExSc4dtexKJJFJYnEL36wO0bcwuLbgpaKu4/52DfU
8LtPP4vTcVUjonA+Cq71/ChcYBFoNddoZGCBu54Fs7UrLE5djkzVhpnD6adg
K6enLOL71aF/qcxQ1ezvM7bBwiVvePQVmRn+B/xvlS0=
          "]], 
         LineBox[CompressedData["
1:eJwBoQNe/CFib1JlAgAAADkAAAACAAAAXk7ByykIFEAWlHvBxg4LQAaI4mYT
KRRAkXDk2HtYCECKWgYl/WwUQEawThOeWgNAPjAM9ul0FEC12BwNFdMCQPEF
EsfWfBRAIeiU2GJOAkBYsR1psIwUQH25guSCTQFAJQg1rWOsFEB/Vqqgqdv+
P9jdOn5QtBRAKQ/lrgT6/T+Ms0BPPbwUQB+Vc2ANHv0/8l5M8RbMFEDuCIyt
J3f7P8C1YzXK6xRASYqq739t+D90i2kGt/MUQCOrgxhIufc/J2Fv16P7FECO
mLDkvQr3P44Me3l9CxVAj9oFZ7K+9T9B4oBKahMVQJYwLh0xIfU/9LeGG1cb
FUC8Uap2XYn0P1tjkr0wKxVAMvudE79q8z8OOZiOHTMVQIKDFVf04/I/wg6e
Xwo7FUBy2eA912LyPyi6qQHkShVAeuty9aVx8T/cj6/S0FIVQD6oOcaRAfE/
j2W1o71aFUDaMFQ6K5fwP/YQwUWXahVAXFUJGc6m7z+q5sYWhHIVQAQ3NdUS
9O4/XbzM53B6FUCyrwjYskzuPxCS0rhdghVAMMWDIa6w7T/EZ9iJSooVQEVy
prEEIO0/dz3eWjeSFUB+u3CItprsPyoT5CskmhVAv53ipcMg7D/e6On8EKIV
QEAZ/Akssus/kb7vzf2pFUA8L720707rP0SU9Z7qsRVAst0lpg736j/4aftv
17kVQDAoNt6Iquo/qz8BQcTBFUAKDu5cXmnqP14VBxKxyRVA0IpNIo8z6j8S
6wzjndEVQNqiVC4bCeo/xcAStIrZFUBcUwOBAurpP3iWGIV34RVAcp5ZGkXW
6T8sbB5WZOkVQCKEV/rizek/4EEkJ1HxFUD0Av0g3NDpP5MXKvg9+RVAXhxK
jjDf6T9G7S/JKgEWQCTRPkLg+Ok/+sI1mhcJFkC6HNs86x3qP66YO2sEERZA
VwIfflFO6j9hbkE88RgWQBqGCgYTiuo/FERHDd4gFkAdoJ3UL9HqP8gZTd7K
KBZAt1TY6acj6z9871KvtzAWQOajukV7ges/L8VYgKQ4FkA7jEToqerrP+Ka
XlGRQBZAYA520TNf7D+WcGQifkgWQDUrTwEZ3+w/SUZq82pQFkAV4c93WWrt
P/wbcMRXWBZAGDP4NPUA7j9jx3tmMWgWQPygP4M+UO8/ZDwmTvZvFkAT5iv+
lgLwP2ax0DW7dxZA4PKtvINi8D+isT401ncWQE2Ft6LaY/A/xvuaoQ==
          "]], 
         LineBox[CompressedData["
1:eJwBIQLe/SFib1JlAgAAACEAAAACAAAAXk7ByymIFkDIlhZYsT7xP2uFetTO
lhZAmLAPRnYT8j9ub8+jWKYWQA1JwvydBfM/cOR5ix2uFkAanxESB4XzP3FZ
JHPitRZA36mv+KgI9D90Q3lCbMUWQO7R1zmXHPU/ehcj4X/kFkDRf9iLHXf3
P3yMzchE7BZAmGidK00Y+D99AXiwCfQWQIICsZy1vfg/gOvMf5MDF0A7TsTy
MBX6P4a/dh6nIhdApD+bbtH2/D+INCEGbCoXQD241ZjHuf0/ianL7TAyF0Ct
5l6U9oD+P4yTIL26QRdAI6quf/8NAECSZ8pbzmAXQHxDhdJcwgFAlNx0Q5No
F0B8Sd0suzQCQJVRHytYcBdA8Kfc7zWpAkCYO3T64X8XQK1v0a+AmANAng8e
mfWeF0CyLJMXa5AFQKq3cdYc3RdA+lh3hpPlCUCsLBy+4eQXQHjwRGu4eQpA
raHGpabsF0Aw37m4+Q8LQLCLG3Uw/BdACMqZjdFCDEC2X8UTRBsYQOzLMR/W
wQ5AwQcZUWtZGECxQOFwmRISQOajLkrZYRhAi5X8CFd1EkAMQERDR2oYQIpB
U7lS2RJAWHhvNSN7GEBimrJiBKUTQO/oxRnbnBhAXlo52FBLFUAdynLiSuAY
QAMNZ06O0xhAQmaI27joGEDTxzdqLUoZQGgCntQm8RhA8thDngrCGUCisT40
1vcYQOGAp5T7IRpAEULsew==
          "]], 
         LineBox[CompressedData["
1:eJwVjH001XcAh81LV+iETL7fH9fvR0JbXhYtDfu4IsfLldfZNHfMjVO2nIsr
m9diMU6GzVsZtrtsaWd1aRPW9XJNhdUZk0UXF0VzxpzGaqe72R+f85znnOd8
uIST4WJtLS0t7839zzhh75CjPoG650aucBuD++MqRaoBQeGQQE+0l4FW2pMO
lSlBXkyyx2Azg6BW69ZOWwKji2Yug3mWSD3sLnN4maAl8fxa3JIlqucCG6rd
CLpVNfOxoVZQM9JyiR+BXHctusiYD/2O0uKZEIJ98tB7V0/w4RTZXCCMJogn
tmd9+/nIKhtO25NEUEpeyqhOssbnDuqU2pME0W2itjfaraFUboi3nCK4zTPg
cp9bw/i5TYy6mECzKvLLEbDYX3cg7EgFgX672PfreBZH3YWBN+oIOiN3/6aX
x6LlvSzP+ksEJ5wnhmLaWQxvLXfXbyOoT77lIBxmsfaVzEnaRaDIz7CSqllY
CDrt5/sJIjKmvrm7zsJbdYcNHyawCdCMvL2VQ+IHC6RnjODWxv0SK8rhY/N/
TJ0eEHxWJHmw3ZHDFbmx0YUFgqFV5U23/Rx+Fe7WM/iD4NzBX4LKfDg8e/ya
JnOdoP+d+mPmQRzYs2EbCxoCRmxFRsM5+NsmrUbwKKb9Y9/ti+GQoshe6t1O
4cKL9Js/yqEytlLtbEGxRcZTHBBx6NhomWxgKZb50ruKTVdV/Thm6Ehhn9mY
lRXHQcdldCTLleKHy2c6xbEcHIYXf3rkQaHVa1NVGM1BmKxRRAko0uTZOuOh
HNJ1za73B1J4FlQYvnWYQ32To9w1guL9vfGtxl4cejxfb22Mpajp+F391IXD
w4lI2bZECmfWVf6iLQejjOMNH6ZQ1IpdSeIODq4m+dVL6RS+xcs7F17g0Kl/
z2EwmyJnQHH5zxUWAi2nLlkhRWplfnHKFIuhjcKQ02Wbf2tOrVGDLCJXJqdF
n1I8nb1t9u0VFlMPX5F4XaC4mRA5IKllIVaV6DIyisWMoe6LuSykI686jrdR
3BGezn/Tn8W/ynNdbV0UD836gifsWRR3L4RU9G/2KSuiAR6LutYqSfAohU2j
3fdjRdaw+fKx7p5JCv92k48OeVrjUr1PDW+O4tDyxNwnK3x0l6x09a1RrCn/
DlAE8+FX4C9sekbReCzsSPO6FX4+1TCTo82g3L5oQdRghemkID0PUwYDO3Kv
S2Ytoe3fIvzOlYGs5BpvxZdBqZdmpsyDgaHXo5xrYxRm7lFpx30YnDF5UhCT
QGG3S6fWLoyBclfjPrd0ggBt0ez5VAaKxYNeAslOfHHV2208k4G0tK/J4i9z
/AfX+51u
          "]], 
         LineBox[CompressedData["
1:eJwBwQM+/CFib1JlAgAAADsAAAACAAAAXk7ByymIG0Cl5bREkNMVQGvguioS
kBtATcbgcIJJFUCOvhZ0iK8bQAsldlKMOxNAF7ZtBma3G0BbfmT04L0SQKCt
xJhDvxtA3wzwpolCEkCxnHK9/s4bQGnE3j3XUhFA1HrOBnXuG0CaRzVmxh4P
QF1yJZlS9htACzzls7BIDkDmaXwrMP4bQEyXzyJDdw1A91gqUOsNHEBshlNk
YOILQBo3hplhLRxASUgYdnzwCECjLt0rPzUcQPZ6m82nPwhALCY0vhw9HEDU
FllGe5MHQD0V4uLXTBxAMoeDmxpJBkBg8z0sTmwcQFxHldQ67ANADRIA0NR0
HEC0Zj9IJVUDQLowwnNbfRxApsX+dYjDAkAUbka7aI4cQGlIvf+4sAFAwYwI
X++WHED+arxbhi8BQG6rygJ2nxxAlc/QccyzAEDI6E5Kg7AcQAm0cpiFmf8/
dQcR7gm5HEB6BBsh5sL+PyIm05GQwRxAXtXtHTj3/T/PRJU1F8ocQAop6457
Nv0/fGNX2Z3SHEBW/hJ0sID8PymCGX0k2xxA5FhlzdbV+z/WoNsgq+McQNgt
4pruNfs/MN5faLj0HEDOaVuS8hb6P938IQw//RxAAsxXvN6X+T+KG+SvxQUd
QGqtflq8I/k/NzqmU0wOHUCAENBsi7r4P+RYaPfSFh1AjvdL80tc+D+Rdyqb
WR8dQDhg8u39CPg/PpbsPuAnHUAnTsNcocD3P+u0ruJmMB1ADrq+PzaD9z+Y
03CG7TgdQPyp5Ja8UPc/RfIyKnRBHUAvGTViNCn3P/IQ9c36SR1Awg6woZ0M
9z+fL7dxgVIdQIuDVVX4+vY/TE55FQhbHUCWfSV9RPT2P/lsO7mOYx1AAvgf
GYL49j+mi/1cFWwdQODyRCmxB/c/U6q/AJx0HUDGcZSt0SH3PwDJgaQifR1A
dnMOpuNG9z+t50NIqYUdQMT2shLndvc/WgYG7C+OHUDs/IHz27H3PwclyI+2
lh1ASYJ7SML39z+0Q4ozPZ8dQHCKnxGaSPg/YWJM18OnHUDcF+5OY6T4Pw6B
DntKsB1AqCVnAB4L+T+7n9Ae0bgdQHu3CibKfPk/aL6SwlfBHUArxti/Z/n5
PxXdVGbeyR1AO1vRzfaA+j/C+xYKZdIdQOhx9E93E/s/bxrZrevaHUDYDUJG
6bD7Pxw5m1Fy4x1AwSe6sExZ/D/JV131+OsdQLHFXI+hDP0/dnYfmX/0HUDn
4ini58r9P6KxPjTW9x1AJ8MOdWMY/j92M7LS
          "]], 
         LineBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAAXk7ByykIHkBCU9OMLKX/P33SZYQT
Dh5AxcMhVUsaAEAq8ScomhYeQDtzxmF7gABAhC6sb6cnHkDi7vSJlEgBQDip
tP7BSR5AZl3mFavHAkChnsUc940eQF0PGxxpgQVAnFws11WWHkA9m895v9AF
QJgak5G0nh5A+PhTFrYeBkCOlmAGcq8eQD0rzAuEtgZAeo777+zQHkByZHro
otUHQHVMYqpL2R5AKH+tPPsZCEBwCslkquEeQFNssM/zXAhAZoaW2WfyHkDY
vCWyxd4IQFJ+McPiEx9AfjPOaOzRCUBNPJh9QRwfQEDef7NGCwpASPr+N6Ak
H0A/WgE9QUMKQD52zKxdNR9AQMpzDBevCkA5NDNnvD0fQGq8ZFLy4gpANPKZ
IRtGH0AigCXXbRULQCtuZ5bYVh9AB34WnUV2C0AmLM5QN18fQEy3Rt6hpAtA
Iuo0C5ZnH0BZw0ZentELQBhmAoBTeB9ArlC2GngnDEAEXp1pzpkfQNZCU4Wu
wgxA/xsEJC2iH0DYCwK9DOYMQPrZat6Lqh9AA6eAMwsIDUDwVThTSbsfQJ5S
7dzoRw1A6xOfDajDH0CoY9sPyGUNQObRBcgGzB9ALEeZgUeCDUDcTdM8xNwf
QIOChCEntw1A1ws69yLlH0Co2rFPh88NQNLJoLGB7R9A9QSvvIfmDUDNhwds
4PUfQGwBfGgo/A1AyEVuJj/+H0AgzxhTaRAOQOKBavBOAyBASm+FfEojDkDf
4J1NfgcgQNriweTLNA5A3D/Rqq0LIEBYJ86L7UQOQNqeBAjdDyBAJDyqca9T
DkDY/TdlDBQgQFckVpYRYQ5A1VxrwjsYIEAU3tH5E20OQNK7nh9rHCBAXmkd
nLZ3DkDQGtJ8miAgQM7GOH35gA5AznkF2skkIEBq9iOd3IgOQMvYODf5KCBA
k/fe+1+PDkDIN2yUKC0gQBzMaZmDlA5Axpaf8VcxIECWccR1R5gOQMT10k6H
NSBAnejukKuaDkDBVAastjkgQMkx6eqvmw5A0VgfGus7IEDoeCmbq5sOQKqh
Rps=
          "]], 
         LineBox[CompressedData["
1:eJwV03lQ1GUYB/DlCBtYXgEXUbTh/SUygmSARw0Mw7c4SnILueNUrkkcUeRc
iENYZVlWklEuExAQWCckUCzUBTLLhaFkkSAEJ3FzOQaQo8Ti7O2Pd975/PPM
+z7P9+EiTnpHa/N4PLDz//1uw6hG4EbxpLFctlhG0Kbqp4meFPsGao/FlxDc
KnQceexNYbF6eN7zIkHE1+SNu/4U5z493qUuIjCRq/dUB1GYTOYoxBcITt2X
5pyMoNDMNi6PnSeweBTW6B9DcTms06NBRvBo2GHQOZaizFjVFF9AYPv3sDX/
NMXLQ9MDlvkEI7xvff5KohAPvr5kKCGQGuZmDIsoHtdrxfPyCCasdvfJz1CM
mRll654lKN27vvTVWQrre4JbpmICD/RbpuRTbKkz07HPJbj2eXqqexHFLuGW
pbNnCHxiPquxLaZI42+u7swm0E7Y8cumcorNRibROswtWa9fLV2hqA7mexzO
Ijgi67FQX6VonNZ1u55JsLG86mD3NVa/aznMgLmjLiGhWU4RpJkrSckg2N65
TZnZTOG/PBAa9yVBT8/sXHQrxfLMz9P/pBOkDT0wF7ZRPLRuLTvPbK0pddun
oKiQXz1qyzw0fzxu2w8UgoSCjwbSCPLWXMq0f6IIzkr0lDAfMBD8OKmk0B0M
jnVn1phNTKl6KCITPmjgM1+yVJi29VIY+u3U+kNE4Gp/waWqn0KdtSH1DvOC
c9Sxc79TtM+MG1QxV3u+f/HECIVW/UNFIbNXAL/d9xmFpKZWKmFejxwdc/qT
wnEiM0nG3HSq1WjHOEVlYmDGZebQDImj/hSFt7tdzU1mvjQkav4lhU243ovf
mO+V2BUOLVAYKYY/1GLvi63VbetcpAiIvNHxHvPW5qHn9UsUll6ZAanMXYpG
g8I1Vj9XaPiAOaU7e3+SNgfjdfNRM9Yfq0Hf8BA9DrL2sd5k5gH1rnxXfQ71
yuanz5jFsys3bQiHPoFIz4f1f++K6qmxCYfR6y5CFbP6zTq9f005pIl1WwLY
vIpMRXajWzk4ypX2k8x4WxikfItDi0l+r5jNd3YPJ27iOJy4/7HUhuWh0unV
jeKdHHzu6EUMM6/4VmhFvcPhiijji0CWr2+Oxu/+xJ7Vcz1QapVDEBTn7uew
nwMCZtRrzG15M3KeMwc3oX/fryyviXedvSoOcXAo2KSvYXm/HaTUfuLFISZC
8ny7lGBxyeu2wI/9t6es8gjbF5FTlLkslMNYuKzboJAgUyF9kRbHwSqlQz3H
9rMzRFD63WkOOrMbx/OKCXirFQcXkjl8v7qisikl6Au0MJ9K55CcpbfBqpzg
P3mZrUs=
          "]], 
         LineBox[{{8.75797193877551, 3.826423701404302}, {8.914212269913424, 
          3.8419794832552774`}, {9.178786833513525, 3.8655287973780004`}, {
          9.186503941204453, 3.8661629783102898`}, {9.194221048895379, 
          3.866794171772993}, {9.209655264277234, 3.868047596289082}, {
          9.240523695040942, 3.8705185956869332`}, {9.30226055656836, 
          3.8753171959422543`}, {9.36702806122449, 3.8801458507696514`}}], 
         LineBox[{{9.38297193877551, 3.881304689104685}, {9.67268172573286, 
          3.903497045711079}, {9.99202806122449, 3.930551293728655}}], 
         LineBox[{{10.00797193877551, 3.9319712620462783`}, {
          10.216062795819099`, 3.949690970939981}, {10.224272596421976`, 
          3.9503581103917744`}, {10.240692197627729`, 3.951685111962196}, {
          10.273531400039236`, 3.9543100057723795`}, {10.339209804862252`, 
          3.959443356069105}, {10.470566614508282`, 3.96924430736684}, {
          10.47877641511116, 3.9698362477136935`}, {10.486986215714037`, 
          3.9704257622828187`}, {10.503405816919791`, 3.9715975140881934`}, {
          10.536245019331298`, 3.973911908368573}, {10.601923424154315`, 
          3.978424259604682}, {10.61702806122449, 3.9794400468056175`}}], 
         LineBox[{{10.63297193877551, 3.980506776077134}, {
          10.748598140162947`, 3.9887608805005565`}, {10.763916046525548`, 
          3.9899259386694297`}, {10.794551859250753`, 3.9923062904982785`}, {
          10.855823484701158`, 3.997267936119365}, {10.978366735601973`, 
          4.007994995217118}, {10.986025688783274`, 4.008701019883489}, {
          10.993684641964574`, 4.009411230840626}, {11.009002548327176`, 
          4.010844211628077}, {11.03963836105238, 4.013760408693789}, {
          11.100909986502787`, 4.019793744788452}, {11.2234532374036, 
          4.032664184833805}, {11.231757133979652`, 4.033575095259819}, {
          11.240061030555703`, 4.034490926697558}, {11.24202806122449, 
          4.034708590161586}}], 
         LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAL6fg5RSEJkC2QpNPWiUQQGI+ubpr
lCZAxMkneucoEEDe0fz+brYmQGVRcGvuLxBATkSFZ6+6JkDowXVkxjAQQL22
DdDvviZAOkpzY5wxEECcmx6hcMcmQPqTVnNCMxBAWmVAQ3LYJkB7KL7adjYQ
QNX4g4d1+iZAHEsRyIA8EEBEawzwtf4mQNYOmCA5PRBAtN2UWPYCJ0B95hZ/
7z0QQJLCpSl3CydAjNr8TVY/EEBQjMfLeBwnQOm7aTMMQhBAzB8LEHw+J0D2
dsccGUcQQDySk3i8QidAoYzP1LFHEECrBBzh/EYnQGC7z5JISBBAiukssn1P
J0BFU7ggcEkQQEizTlR/YCdALIAqhKdLEEDERpKYgoInQIvXkmm3TxBA5Wa7
zXqGJ0D0K2WIKFAQQAaH5AJziidAjGYY7pdQEEBIxzZtY5InQAOAIY5xURBA
zEfbQUSiJ0CFTr4gEFMQQNFYHxrruydAjYQgonNVEEBglJfy
          "]], 
         LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAL6fg5RTEJ0B+1frxKFYQQFbJyL/m
0SdAmxL2GmlXEEDaSW2Ux+EnQB447jPyWBBA4kq2PYkBKEBfC3pkVVwQQANr
33KBBShA5xtqYslcEEAkiwioeQkoQJu8UhA/XRBAZstaEmoRKEBoug18L14Q
QOpL/+ZKIShAzZMqkyRgEEDyTEiQDEEoQB3Q/79fZBBAE21xxQRFKEBQDHm9
7mQQQDSNmvr8SChAndzqan9lEEB2zexk7VAoQAkzuNWlZhBA+k2ROc5gKEBP
wPnqBmkQQAFP2uKPgChAt2UYFBpuEEDIvlUjdIQoQLulYbbAbhBAkC7RY1iI
KECL6db3aG8QQCAOyOQgkChAenNFWL5wEEBAzbXmsZ8oQP6rMo98cxBAgEuR
6tO+KECIkU3VRnkQQNFYHxrr+yhAXGhxFtGFEECNhYg6
          "]], 
         LineBox[{{12.50797193877551, 4.132429776594373}, {
          13.117028061224488`, 4.204693263188902}}], 
         LineBox[{{13.132971938775508`, 4.206722353723963}, {
          13.74202806122449, 4.274879615510157}}], 
         LineBox[{{13.75797193877551, 4.276418332406355}, {
          14.291499263200366`, 4.329028984986811}, {14.36702806122449, 
          4.336662316492782}}], 
         LineBox[{{15.00797193877551, 4.397834794625814}, {
          15.075154031433062`, 4.4041415994307584`}, {15.090427511703506`, 
          4.405642648446119}, {15.120974472244399`, 4.408719467409776}, {
          15.18206839332618, 4.415171989064264}, {15.304256235489742`, 
          4.429272567284581}, {15.312537919019714`, 4.430285962746501}, {
          15.320819602549689`, 4.431306681094037}, {15.337382969609635`, 
          4.433370086447599}, {15.370509703729528`, 4.4375847717864385`}, {
          15.436763171969313`, 4.446365640988939}, {15.569270108448883`, 
          4.465333373495598}, {15.61702806122449, 4.472629286773417}}], 
         LineBox[{{15.63297193877551, 4.475114737212538}, {
          16.242028061224488`, 4.563641039650847}}], 
         LineBox[{{16.257971938775512`, 4.565788761992464}, {
          16.81408697238361, 4.649015739157801}, {16.867028061224488`, 
          4.65779142730033}}], 
         LineBox[{{17.507971938775512`, 4.763311325783919}, {
          17.831444452007148`, 4.818745626799082}, {17.83976207700067, 
          4.820249855949223}, {17.84807970199419, 4.821758036804445}, {
          17.864714951981234`, 4.824786253626577}, {17.897985451955318`, 
          4.830890107723168}, {17.964526451903488`, 4.843287497725784}, {
          18.09760845179983, 4.868841004969483}, {18.105926076793352`, 
          4.870471688659249}, {18.114243701786872`, 4.872106324052008}, {
          18.117028061224488`, 4.872654407864733}}], 
         LineBox[{{18.132971938775512`, 4.875804887044387}, {18.164149451748, 
          4.882081488485141}, {18.23069045169617, 4.89602102661961}, {
          18.36377245159251, 4.926121166914139}, {18.371539229164455`, 
          4.927969295170965}, {18.3793060067364, 4.929827509981826}, {
          18.39483956188029, 4.93357419927365}, {18.42590667216807, 
          4.94118861653194}, {18.488040892743633`, 4.956901605747101}, {
          18.612309333894757`, 4.990264202971}, {18.742028061224488`, 
          5.027844567586649}}], 
         LineBox[{{18.757971938775512`, 5.032656821133935}, {
          18.87607527037529, 5.069395293410319}, {18.89130432455358, 
          5.0742717514218185`}, {18.921762432910157`, 5.084120026765017}, {
          18.982678649623317`, 5.10419801472262}, {19.10451108304963, 
          5.145879739723226}, {19.112125610138776`, 5.148552393719337}, {
          19.119740137227918`, 5.151232994325344}, {19.134969191406206`, 
          5.15661803536679}, {19.165427299762786`, 5.1674834767677265`}, {
          19.226343516475943`, 5.18959579684146}, {19.348175949902256`, 
          5.235346186077374}, {19.356435420386152`, 5.238521406201789}, {
          19.364694890870048`, 5.24170597608697}, {19.367028061224488`, 
          5.242607260555848}}], 
         LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAAmFPwcgpiM0DNfUd0y/4UQAL4emYM
ajNA1cv/1S8MFUBSlGaxKWwzQBTT8IHwDxVAozBS/EZuM0DORVlTyBMVQERp
KZKBcjNARneQZr0bFUCH2te99nozQFAImE69LBVA2HbDCBR9M0DNgUQmNzEV
QCgTr1MxfzNAA2toI8g1FUDKS4bpa4MzQLyLFo4vPxVADL00FeGLM0A39Qsl
FFMVQJKfkWzLnDNAwZZbWTR/FUDjO3236J4zQEz2fogghRVANNhoAgahM0DE
zhndI4sVQNUQQJhApTNA0sS19m+XFUAYgu7Dta0zQA7mhusdsRVAnmRLG6C+
M0A3343b0OgVQO8AN2a9wDNADjUoYi/wFUBAnSKx2sIzQOn1OQ6l9xVA4dX5
RhXHM0BRyMPW1QYWQCRHqHKKzzNAqY9wKU0mFkCpKQXKdOAzQJT0LtWSaRZA
0hxB+23iM0C9mIR2zHEWQPwPfSxn5DNAHopNQRp6FkBO9vSOWegzQCdWOVPy
ihZA9MLkUz7wM0BjkXholK0WQB62IIU38jNAX6JoVW+2FkBHqVy2MPQzQE79
y2tevxZAmo/UGCP4M0ASp+wUedEWQGisD431/TNAUgPYD8HsFkC3TsdE
          "]], 
         LineBox[CompressedData["
1:eJwBUQGu/iFib1JlAgAAABQAAAACAAAAmFPwcgoCNEDroxSlXgAXQOYotKLs
BzRAMRsGFUMeF0CM9aNn0Q80QMg3q1KVSRdA2I6D8ZofNEA6DDBVSKsXQAKC
vyKUITRAASwuEoi4F0ArdftTjSM0QFbTUscCxhdAfltztn8nNEBwyw8aqeEX
QCQoY3tkLzRAy3JYYbkbGEBvwUIFLj80QNRbJHfomhhAmLR+NidBNEAGWou2
16sYQMKnumcgQzRAEuYY7gG9GEAUjjLKEkc0QFKjp0UH4BhAuloij/dONEBy
1ZOW1SgZQAb0ARnBXjRAgtamv4DFGUD4sJiO5GA0QOX5v9Pb2xlA620vBAhj
NEDi07YnfPIZQNDnXO9OZzRAX8g9j4wgGkCa27fF3G80QEJ8sFzsfxpALsNt
cviANED2CSnxp0sbQGisD431nTRAMvYMx2PMHEAFvoV8
          "]], 
         LineBox[{{20.632971938775512`, 7.256228012442861}, {
          20.645801629943236`, 7.30163861418599}, {20.654155196400307`, 
          7.331064653971508}, {20.670862329314446`, 7.389582287364091}, {
          20.704276595142723`, 7.505279769434329}, {20.771105126799277`, 
          7.731323594741344}, {20.90476219011239, 8.162006689988122}, {
          20.912963506086662`, 8.187504457411608}, {20.92116482206093, 
          8.212894769446025}, {20.937567454009468`, 8.263353027342003}, {
          20.970372717906542`, 8.36298007845336}, {21.03598324570069, 
          8.557076321924516}, {21.16720430128899, 8.924637373897692}, {
          21.17540561726326, 8.946696568826798}, {21.183606933237527`, 
          8.968648308363987}, {21.200009565186065`, 9.012229421272183}, {
          21.23281482908314, 9.09810218239631}, {21.242028061224488`, 
          9.121909985509479}}], 
         LineBox[CompressedData["
1:eJwVzH8s1HEcx/GLcUZp1jAr4j7f7ByytHeiunt11fptN3dbP45aWtHmukRZ
bRcm6Q9HonX5cWOz6xyZDFNdqTC/KuvOKbV+oK2WOWWI/Or647XnHv+8ghLV
cWeceDwec+x/dfJfF92lBKXIGhInF6Dg75h3ZiyhTl7Gy78lgOJLaJFORljy
cM2+UirAV2NtXp+C4Nf/JHfxgQCz22rTNyUQxvON+hqrACGJpthFFWE3L8/z
th9Dd0VMw6Sa4OSfsQpBDGeHer1+pBKe+sneDggZqmVjA5ZLhJ2vzPcboxgC
JWFKo4awcT6rUKJgaLtqNldkEizS1mamZDjRciigOJugy3hfaT/FUBauGtbk
EmLyrZ1b1Qw+6+qT5FqCb07TAf1NhuYj4p59hYS9y5G61gIGRfEbkbiIYFKW
mh6VMBS5T4wL7xBsFhZwoZJh5VxE+lI54WVBEOpbGJwGH2bV1BHShN1q9WeG
Ki/piL6eEMq3ecyMMOCwZVdJg8M9vSmnvzNoOiZdM5sIpS6pmskJhtnGzVqF
mWA4aBwaXma4a2+3739GOHZ0oVzvzGGLSCGTPCdExEVvkPI5pFWlrxF1EIJ/
q67v8ORgL2y+t9xHkC680Lis5aDt2zM/9ZowGJOQPOvPIYw/GP+znyBOHPa1
BHI4d21mvc1KOJ9U3RkdzMHt8Y3sXhvBTTza3iXkYJj2GW17Rzi+wiNveyiH
bylRBtNHwlS4d/yHCA45xi5+5SfHv+GPyjmSQ3Ldau20w3PKy5KTDv8DDQX1
JA==
          "]], 
         LineBox[{{21.882971938775512`, 10.106583487122531`}, {
          21.919276399837923`, 10.12472322757587}, {21.927571811785363`, 
          10.128805770499472`}, {21.935867223732807`, 10.13286513488945}, {
          21.952458047627694`, 10.140914328065582`}, {21.98563969541747, 
          10.156734572020422`}, {22.05200299099701, 10.18726249031803}, {
          22.184729582156102`, 10.243868048455887`}, {22.193024994103546`, 
          10.247208878303756`}, {22.20132040605099, 10.250526529618012`}, {
          22.217911229945877`, 10.257092296647219`}, {22.251092877735648`, 
          10.269945688296195`}, {22.317456173315193`, 10.294539901986504`}, {
          22.450182764474285`, 10.339278050914345`}, {22.45792732900015, 
          10.341705294754739`}, {22.465671893526018`, 10.344112336144935`}, {
          22.48116102257775, 10.348865811574374`}, {22.492028061224488`, 
          10.35215257247346}}], 
         LineBox[{{22.507971938775512`, 10.35691207095716}, {
          22.57409579688816, 10.376486873407426`}, {22.69800882930203, 
          10.412622651986343`}, {22.945834894129774`, 10.482756184825282`}, {
          23.117028061224485`, 10.529538246814205`}}], 
         LineBox[{{23.13297193877551, 10.533826327040522`}, {
          23.439980250323842`, 10.61460451662277}, {23.44821750776166, 
          10.616725108931343`}, {23.464692022637294`, 10.620958964875001`}, {
          23.49764105238856, 10.629397362065697`}, {23.563539111891096`, 
          10.646156897682108`}, {23.695335230896166`, 10.679206933814571`}, {
          23.703572488333982`, 10.681251796494939`}, {23.711809745771802`, 
          10.68329421628731}, {23.728284260647435`, 10.687371727198563`}, {
          23.742028061224488`, 10.690765898683743`}}], 
         LineBox[CompressedData["
1:eJwBcQGO/iFib1JlAgAAABYAAAACAAAAmFPwcgrCN0AprPUmrmMlQHhSUeG+
0zdAIe7CKwdsJUBLMEZFfPU3QOHZWBQ8eiVAANXVAXT3N0CoMa6N/nolQLZ5
Zb5r+TdA7TiHFb97JUAiw4Q3W/03QIlcxFA6fSVA+lXDKToFOEBVyGp1GYAl
QKp7QA74FDhAyJlod3qFJUBgINDK7xY4QJjo+NgdhiVAFsVfh+cYOEDd5gxJ
v4YlQIIOfwDXHDhAgfi/VPyHJUBaob3ytSQ4QIw5UhpfiiVACcc613M0OEA1
vCdex44lQL5rypNrNjhABQLzp0uPJUB0EFpQYzg4QBf+QQDOjyVA4Fl5yVI8
OEAA92rczJAlQLjst7sxRDhA4BrpQrOSJUBoEjWg71M4QJpclsgiliVAHrfE
XOdVOEBzmZz6h5YlQNRbVBnfVzhAjYwmO+uWJUBApXOSzls4QIpsxeerlyVA
aKwPjfVdOEAW0kf9EZglQF0nmPo=
          "]], 
         LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAmFPwcgpiOEDuXK+XzpglQMddL2lr
czhA3uMbxwqcJUASY2i7nXU4QO5F2Al3nCVAXmihDdB3OEAne3Ea5JwlQPZy
E7I0fDhAU4w6pcCdJUAkiPf6/YQ4QFHTJmGDnyVAgLK/jJCWOEBaR2hyL6Ml
QDoHULC1uThAadKO+iGrJUCGDIkC6Ls4QLNq5vinqyVA0RHCVBq+OEDe8RrF
LqwlQGgcNPl+wjhAOYQaxz6tJUCXMRhCSMs4QCDRc3ForyVA9Fvg09rcOEBk
Yo9f4rMlQEBhGSYN3zhAAK60O3W0JUCLZlJ4P+E4QE/QtuUItSVAInHEHKTl
OEDUn1GjMrYlQFGGqGVt7jhAP3/hxI+4JUCci+G3n/A4QGOf7Q8puSVA6JAa
CtLyOEDAi9Yow7klQICbjK429zhAMws/xPm6JUDMoMUAafk4QOGMvkaWuyVA
F6b+Upv7OEAy5RqXM7wlQGKrN6XN/ThAtRdUtdG8JUCusHD3//84QDsraqFw
vSVA9UmwYQ==
          "]], 
         LineBox[{{14.38297193877551, 4.338278702437457}, {
          14.830778347105934`, 4.381708647727177}, {14.84605182737638, 
          4.383122053832987}, {14.87659878791727, 4.385935434301837}, {
          14.937692708999052`, 4.391508468272888}, {14.945329449134274`, 
          4.39220006061609}, {14.952966189269496`, 4.392890533647472}, {
          14.968239669539942`, 4.394268121774462}, {14.99202806122449, 
          4.396404793336224}}], 
         LineBox[{{16.882971938775512`, 4.660461398294484}, {
          17.355738192883358`, 4.738598204883747}, {17.371083556080897`, 
          4.741099031848365}, {17.401774282475984`, 4.746094010229566}, {
          17.46315573526615, 4.756057264809358}, {17.492028061224488`, 
          4.7607314227643815`}}]}, 
        Annotation[#, 
         "Charting`Private`Tag$651010#2"]& ], {}}, {{}, {}, {}, {}, {}}, {{}, \
{}, {}, {}, {}}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Epilog -> {
       RGBColor[1, 0, 0], 
       PointBox[{{0, 2.52}, {1., 2.83}, {2., 3}, {3., 3.2}, {4.1, 3.35}, {5., 
         3.47}, {6, 3.57}, {7, 3.66}, {8, 3.76}, {8.5, 3.81}, {9, 3.85}, {9.5,
          3.89}, {10.1, 3.94}, {10.5, 3.98}, {11, 4.01}, {11.5, 4.06}, {
         12, 4.09}, {12.5, 4.15}, {13, 4.19}, {13.5, 4.25}, {14, 4.3}, {14.5, 
         4.35}, {15, 4.41}, {15.6, 4.47}, {16, 4.53}, {16.5, 4.6}, {17., 
         4.68}, {17.5, 4.77}, {18, 4.85}, {18.5, 4.96}, {19, 5.11}, {19.55, 
         5.34}, {19.7, 5.44}, {19.9, 5.58}, {20.1, 5.91}, {20.3, 6.27}, {20.5,
          7.14}, {20.6, 7.14}, {20.8, 7.81}, {20.9, 8.32}, {21, 7.75}, {21.2, 
         9.07}, {21.4, 9.49}, {21.5, 9.71}, {21.6, 9.83}, {21.8, 10}, {
         22, 10.18}, {22.1, 10.21}, {22.2, 10.25}, {22.3, 10.27}, {22.5, 
         10.3}, {22.7, 10.42}, {22.9, 10.47}, {23.1, 10.52}, {23.3, 10.59}, {
         23.5, 10.63}, {23.7, 10.67}, {24, 10.74}, {24.2, 10.78}, {24.4, 
         10.8}, {24.6, 10.82}, {24.8, 10.84}, {25, 10.87}}]}, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 25}, {0., 10.869999927721087`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"qFunc20", "(", "x", ")"}], 
       RowBox[{"qFunc40", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.780099101658539*^9, {3.780099195922229*^9, 3.780099294215307*^9}, 
   3.7800993300685472`*^9, {3.7800994120969467`*^9, 3.780099424027326*^9}, {
   3.780099521098658*^9, 3.78009954449407*^9}, 3.78013103280479*^9, 
   3.780138406700757*^9, 3.780330692098466*^9, 3.780334155913598*^9, 
   3.780336806196104*^9, 3.782464212162521*^9},
 CellLabel->"Out[5]=",
 CellID->1834468673]
}, Open  ]],

Cell["\<\
We can see that the regression quantile computed with 40 knots is \
\[OpenCurlyDoubleQuote]over-fitted\[CloseCurlyDoubleQuote] between 0 and 8 -- \
the B-spline basis knots are too densely placed between 0 and 8. \
\>", "Text",
 CellChangeTimes->{{3.7800996485279512`*^9, 3.780099691426304*^9}, {
  3.780126237678001*^9, 3.780126259908255*^9}, {3.7801284201169167`*^9, 
  3.780128481249892*^9}},
 CellID->1455168527]
}, Open  ]],

Cell[CellGroupData[{

Cell["Intersecting regression quantiles", "Subsubsection",
 CellChangeTimes->{{3.780095545924274*^9, 3.780095567447674*^9}},
 CellLabel->"In[6]:=",
 CellID->1838844664],

Cell["\<\
When regression quantiles are over-fitted then the estimate of the \
conditional Cumulative Distribution Function (CDF) can be problematic -- the \
estimated CDF is not a monotonically increasing function.\
\>", "Text",
 CellChangeTimes->{{3.7800957698971157`*^9, 3.7800958396952467`*^9}, {
  3.780097201736813*^9, 3.780097320068289*^9}, {3.78009738747053*^9, 
  3.780097388842738*^9}},
 CellID->1747003077],

Cell["Compute regression quantiles using \[OpenCurlyDoubleQuote]too many\
\[CloseCurlyDoubleQuote] knots:", "Text",
 CellChangeTimes->{{3.780097421513631*^9, 3.780097428455377*^9}, {
  3.780337210501627*^9, 3.7803372406291533`*^9}},
 CellID->1017504490],

Cell[BoxData[{
 RowBox[{
  RowBox[{"probs", "=", 
   RowBox[{"Sort", "[", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Range", "[", 
       RowBox[{"0.1", ",", "0.9", ",", "0.1"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.01", ",", "0.99"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"tempData", ",", "30", ",", "probs"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.780095580631732*^9, 3.780095586258113*^9}, {
  3.780097397924281*^9, 3.780097403141781*^9}, {3.780131038566514*^9, 
  3.780131040071447*^9}, {3.780337269000065*^9, 3.7803372693058643`*^9}},
 CellLabel->"In[1]:=",
 CellID->1158853262],

Cell["Plot the regression quantiles:", "Text",
 CellChangeTimes->{{3.780097432707963*^9, 3.7800974426420507`*^9}, {
  3.780337243092594*^9, 3.7803372444763193`*^9}},
 CellID->337716033],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"data", "=", 
     RowBox[{"tempData", "\[LeftDoubleBracket]", 
      RowBox[{"1", ";;", "300"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"qFuncs", "=", 
     RowBox[{"QuantileRegression", "[", 
      RowBox[{"data", ",", "20", ",", "probs"}], "]"}]}], ";", 
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"data", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"#1", "/@", 
               RowBox[{"data", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
             "}"}], "]"}], "&"}], ")"}], "/@", "qFuncs"}], ",", "data"}], 
       "]"}], ",", 
      RowBox[{"Joined", "\[Rule]", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"True", ",", 
           RowBox[{"Length", "[", "probs", "]"}]}], "]"}], ",", "False"}], 
        "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Prepend", "[", 
        RowBox[{"probs", ",", "\"\<temperature data\>\""}], "]"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "4"]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Time\>\"", ",", "\"\<Temperature\>\""}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.780095611394575*^9, 3.780095636402513*^9}, {
   3.780095752631534*^9, 3.780095753059123*^9}, 3.7800974495692263`*^9, {
   3.780131044432066*^9, 3.780131068488615*^9}, 3.780138425360815*^9},
 CellLabel->"In[3]:=",
 CellID->1243742461],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwl13lczPkfB/DZ6IdSTWGd1SRSuqPkiPk6SiETuqjMUkhZHY5CTNuWKzWr
WpJdRdumJZObDrPFaiU72Ngk26Va342xKZLj95r3p396PB/N8Xl9X58rszWb
l4VpCQQCmy8EAs1vzc9gd57T/cnL26ndUgw6OMEjE+8Mte230lgaBI/jrq89
lTRZY3kK/PBMj2VQOlmpgLsPBjiZ2JHVT+ApBRW+is30fpG2B895VQ0Ir19L
ny+xh18VDZgrHTNJY1kg/GTCscu6pyZqrEiCq96dPH5Sb4LGTWfh4Jd9v/Ph
4zUW/gWH1u4YXnxbpLFYayHPjS7VypduMtE4ygY2qX2giDk0VuNcP3ie1Ljf
1GC0xioZnNVZ19VjOFJjwS/wk+SzgqAzIyh/HRwX833StLrhlP8zvNR0uqxg
F1lu5clz4o9ugtuHycrlsG3CEr0rg+j96gT4nYGwJLOGLCqEEy3sehLufUn5
H8CFjpJWuWAU5f8ALztpksz70PgUFl7I+w/X9sv5MZRfAp/ZvkZHbTSO8u+E
TSssv3i0xpjy/wQfsXV7sPMwy/8H3OeycO/n70wpfx9ssqHAXGlJz0tlvojn
at9UOsSsJQu84a6lU/J+3EV2iIOvHMrYFhpPlp6E11fuOd8SQpbfhadqZfq5
OpGVvZrXV/5VPfg1fZ9atJjnHDo9S2s2kUWL4AU/XNj7to3GJ9kKR+p4O96R
kmUn4NEBPqWJPOVR/A4rizXzi9zUDde7xCYc8SMLTZbwXN0orbLoRSz/Qtg6
4UmHZRw5KgZeZH1v+Lt2cu5x2HjltPD+4/R9qt/gljn2ryccpvEJXsNFbl0S
S5bPYaw3nmednevZwWaUfwE86spLy/QqsnwzfMDxhnHZfpqPymx4caaT4Xg/
c8pfBZfbNXwsNqf5K3oJT5cseibpIktGLeU5s4UjzvacpfkumwurwmpCD0ot
KH8kfPrdZ/yQm76HtSUL4rm9tF6Ev8IepbY1bq/JYh6+ZiQKaHel9RU1QsJz
1zO/3f1pFTl3DrwvccuWzBCyKhx28rUOky8gCzJh5cG2nU9GsPVfAc/La2hd
+Sd9vrQTrjRcXN2XTJYb+WA9B0avOGFPVs6CO7pTLkx5RONVr4Pzg6uFJ3aT
Rd/BaUbRR363JUtK4eK0spicTpb/OTzcu732wwW2/g2W8Vz1Xas/6zLJTdPh
RymVCn05WRgK1x/9afaBIrI4Dc7XSl5f2E6OugpnWsSHdnL0fbktsK6f3dvp
18iqoct5bl2LpDnVk8YvmAZrGx9qU70iO3wFe/qnV/YU0vOQHoTlLQPc+Gja
z+SX4OnCIyPyPNj+9zec59ijN2iSNeUfsoLn7I7e6RiqZ0P5p8KuWVWhJ3vJ
khDYfEeq+5UmW8q/D15y9L73zGo7yn8eHs7NmWNSZE/5n8J64l9sTnMOlH+Q
L8/d7HI/cauQLHaERWdkNi1DHCn/Krh0SFJ4aig5Nxm2y4rjfa6SVefgYY0H
PZQDnSj/E1gQ1WEU5kl2GOjHc+lPL7XUJpOldnBgidnifdfI8gC4d5dvm1kb
WfkNLLi3U2ypPYXyn4H1ptzosRxHFj2Gr8zwyi6xJEu+8Oe5o7EeyqWTyTJr
eGFk82e5iKzwhXWeFZwfpEtu2gN77e1qn/+Cvk9YBE8zMfVeriSL/4RdaL8g
R32CT8+1vrovkJxrGYDxtsfP0jIjq5bBSQU5va876HkIEuCLqV6TEhVkh5/h
l/lig/pdZOl9OOv9tFfjl5Ll/bAw+8WgfVZk5cRAzfoxOuaoT1YvhYc+C29f
+Jn6Ee2AV+YU2b79RJbka/7+R5oizIBeL7sHfz953JASJ7LiHRzlckmgE05u
Gr+S5zaVWe4ez8YnXALffpR/KVGb5d8OXz7h31C8juXPg6MdN5s73mf5a+Cp
BaMr0+fS81T1wM6jcNxcJQtEq3hOkff3w0/2Uym/F9wQ5H/O+GeydAv8au2Y
885jnSn/j7DlfT/hvf1kZTVcXjHj0yY1Wf0f/Nz9zbnji10ov3EQzz1NKgls
ziFLPOAX1Y6XHjSQZdFwRpbXOZXuNMqfA+fMXjFpvi256RZcZpS6/DxHFqrh
Iqn9xlwvsnhMMO4n23fmZXiSo+bD1fln7Q3F5Nyv4bWuAxb9aE9WHYULZNes
lKPJgirY466e1ofPNB6HLrgv3E3ncStZOjKE57YVJsc9+o0s5+DoR+ZJe4rI
ygg4f66v1F9OVmfBv870d2+NZ/mV8II3/YIfN7D8L+D5I7bdNQpm+YevxnlY
EeDb6EdWzIadu2sa03zJTRtg/Stvf74aQBZmwJv1Bvbyq8nicri6b5TO9Y3k
qA44bU+IxcU4cq6hFP2f/JAasZ+smgk7hI2VRR8nC9bB/9W0cP4lLL8cVtdr
7lcs/3X4+GHdGYP+Zvnb4Mi+sjfdvSy//lc8d9/wSoq2AT1PtSsck2ldr7Ig
i9bCXQfT+mxnkyWH4GchHi32vmTZFdjQ/dkhPoL13wwH7mjo3foN6193Dc+l
TL09su0o698F3nDWivc6x/qXwveMD0bcuMX6PwDvr4jN8HvK+r8Ib6yOCJ7Y
zfp/BnNb+qvEOq6Uf8hanmt8X/RruRnZYQpskKXlUzKdLA2GC3ceiHRYRpbv
hbd33NGXRJCVJbAyRBJklkxWN8DLs92H7zpBFv0vFP1sbfhN9zpZ4gAvzfRo
3vEnWbYSNs2qUsW+JCu+hSNH7dPKGzSd8hfDGypqW8+YkoX1sOek2mbOhSwe
EIY83RXhOovIUbZwSmVDpyKYnOsPL3IOuvv3JrIqEb7JxyVyO8mCM/CElI1b
Zclkh0dwbn74CI9UslSwDuPpKL43J50snwx3xjZbmKaRlSvgcWYLQr/cT1bv
hidb2b8ukpFFp+HMgOiatVvJkodwy85G9e31ZNlH+PvVC1aHBJAVk9bjvFRh
/nmw/D7w4mNL9WezvMJdcMCBLK+sCSx/AdwSaXJ7xjCWXwVH6pclXtJi+d/D
u2eK41K76fmqJmzAfFbuKnRvZ/0vhZdsnCeMaGD9x8PDtdedlT1k/Z+CJ6Vs
KP18j/VfC+/X1xtVXcv6fwt3vb9dvvoP1r9ZOM+tunUyYRF7v2gx/LSjwFJY
z/rfBsc8bUx3amL958JWxj7fTutk/d+BB07QeXxKTW56Aw+NMAr88I4sNN3I
c+6RsQ23BCy/J1yW52KfzOZLVCwcnRw28cZQlv8HePN3Q9LfGbD+b8Plc2zc
LgtZ///BITqPBQn6rP9xEegrbMaK5sGsf3f402vNfZTlj4LnBlX2z3zD8h+D
XwzMfvjuOct/E05ZnDPsWB3L/wrOzWjySKpi+UdH8lzNDNmHkQqWfx6ccfK7
8tIcln8TnGJtM/JBCst/BHZyWZ9VEc3yV8ITzVfebAsii/+FXy0b51C4kBz1
5SaeG2NxKzTSmZwrhl0/RrzMNGf9b4TrXC0Dk4ex/rPgG7O+zc7WZv3fgC9F
fdjb00f7hfQf2G2apg+yfNjXPNdcUT3m3D9kpRvs6LK8w+w52//Ww9drbqr+
18r2v8PwkGLXiA3MkjL4jO4dL592tv+1w07DMgfc5dn+J9yM87W7xKqV7VdN
M+AxT2b75H1i+18YnN3rq284lOVPhx23G/XMGsfyX4M3H0jPtrdn+VvhlpDO
9O75LL9eFM/NKOoP3hrM8rvCneVGra3bWf418C75c9cJGWz+p8KjZ7Z6jy1m
/V+Gux5pzgfWfxNskjA2/tdnrH+daNzX3adGzviP9e8Mz14ytfEjm6+S1fDu
0wdK1UPY+t8PK7cU9L7VZev/Amxb3ZvwTput/0b437IX4se9rP/BMXg+ka/t
4htZfidY51X8tKqrLH8QfD2k2/PYXpY/Bc7ediwy2JPlV8CbezTzmZ3/DbCB
TXPe8mKyg3Ysz3XrNIyZ7M/6t4czvjkwxfcjO/8C4a+TUi8WnGLnXxL8/mPC
OjW776jPwhdb+g0HfqD7kOgveNj4U3suXCBLtLbgPnlGGKfaRpbZwCUxzVU2
C8kKP7gt9Lz1scnkJhn8c6wo7oWILPwFjk2vjn5lSxbXwTcLcZ6sIEd9hp+a
tzjPyiLnWm3FenOOEb9tJ6uWw8Xj87emubHzfzdc/+aGc1sqO/8L4ZOX9Zqf
VLPz/wEcFFP3eMVzlv8D7O+0esfURyy/xTb0I+jG/Zvll8CbOv+aVzyQ3X92
wrbdAdZ6LI/kJzjRunTOqm52//8DLs/RjJ/uq4o+2MnbPcqb/b/TZL4d9+Fj
n7KjVtH/V0JveI771nPOYyeK/w/lk/nU
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4tAnL/p8qj4fzp9Tcdb2m5Hw/yor8Vw=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
2/0XGoELqg==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw113lcjF0bB/AhhdbRU9FTmGwtkkm7yNxeDC2aFhHRSCstQ5QtjZKlUkPh
iVJIPC0MQhtGWUJqSCXrhEpuMkqFLO8113nf/unz/TRN/c7vPtc5YxQQ5Rk0
lMFgmA9hMBTfFV8jFtCUrknOH5PLlhwgewb48p0vfRUhaL4feFKXV3+WClq0
G5z7gKtvc4itsEQM9i/0iB3UQ8ufgTmJtEfZuOkKs5S5NOVwTLA/VclCYd50
MEvX8bHHW3OFhb7g8DAvj45bUxUWJ4IzmNWOJufNFJaVgFUT06v7zpoqzHwK
XuhwS29auYnCnKELaaqmKDSsuMNYYYE5uNczifawR+f5gF3OTKgfLJ2isFQI
Xp4kYe9dg2YUgdXuMy1WLESzm8A/OrTZHv5o/h/wBGl2q+AkWmS6iKa2b9n1
UKKG7y/xAg9tyT3HPYSWx4HFL26NV3fA/491Fpyw416Nzhc07zFYIE6cHXoV
8wh/gjcF35uusRvziqc401RKpmC26lJcDxkPXGLhPjJ4Eq4Xcxu42cTR1vg9
mnMa/CdGNcQ7exrmbwBP0shw+joT1zvvO3hMY1e1xnW0dKILTcWXbIooNMJ+
GIvBa+c7+tSFoNmbwQYFiVaiDDT/JPjRsyOV2mfRojpwXbckX0As6Qe7feKe
vnMELWe50tShtk3RlltI/y7gtuaM2w/d0bxN4JinH/7/fAhzwZlfauo1uvD/
E98Db5oW2vPhAlrWC+YfYUWHb0czx7nB+8+0HX7eBc1ZCPaY0BPYMAEt2ACu
DGi70zWM5M8Gf4tg7537FddHegc8qthBs1eOZnwBl6i4PKj6gWYbLKap2JCL
lqtH4e/z54MNyq5dOmGNFkWB57ypqJkTiJZkgVMaBhp/5qLlNeDisGqfo51o
Vjd40dHQ660zSf4x7jSl7mIftz2L5J8Lrr94Y+jJIbh/xOHgxq7b7745omWH
waE3mnJObUMzb4LXmOh1JkjQHBr8c+QQs1hV3J8CXR5N0StvPBnni86bA/Z1
LhuXVISWhoH7NbW8TzBmYP5McATdIVm7FM2+Do4cv+bC03No/ntw/oeC9W+U
rTC/tgdNXU9tcotfgZbMAofO1z5YcA4tDwbzvIXJ7r/RrAPgid/nJq5fZI35
K8Fp0XG1SuloYTuYo+RV8OshWqzlSVPvOjtCfZRtML8D2HS1n5+yNZoZCO6t
fKih5IvmpIHvJ/5943U0WlAG1gyivT2T0HlvwM2Cgf1WaWipuhdN2ZX1mfil
oxl24IWuOe/y96HZq8FGTqfjO+LQ/BRwy/FbZd/D0aLL4MT4i4uvLkVLXoMd
v0xmfHNCy0d6wzxVbk7JnIhmWYNN67aIg1TQvFXglKW15vPek/x7wUvKNt8Y
cZ/kvwg+/ocyTi1Gy16A+2YIIwtEaObwJTQ1fgd/7PcYNMcSnM246XPPHy1Y
AY7P4Dl7uaDzksDNWteNGx3Q0vPgssXwPExFM56B2abdq06z0OxhPjTluVlz
jEAfzbcAW+jWbjHSQ4uWgVue3rvURyxJAPtlV/eZGKLlxeAG+9VRA5PRrBYw
Z483L8ea9D9kKU1V811qfRaS/FPBIce/qvBXk/xLwCuTfPf3xpP88WD110LN
nlMkfyE43kZr9NU6kv8JePiTuREZ30n+3+Ae5eUtLaakf5NlNHVQL8OgyY/0
7wm29TBnvDhA+o8DWwwJdJldS/o/A65bv7lm0R/S/yMwv/uMhaetLeYfBM+s
ZnudCUdLJvvSVKG9x0DWCbTcHczI4bZtfYJmbQWnz/RsOTrMDvPng/P9zuc6
W6KF9eAN7VcvvfRFi7+B0/iR8cwdaNmE5bCfDTNrjI+jmW7gS1MCV66vQHNi
wWrJ+maOjWjBCfBYr88qje/ReQ/A2mmsR7sH0dI+sA73fVC+mj3mZ62A8zF5
58kt+mi2M/jVGuNA78lo/kZw/2udvQnT0aLj4GuqivMVLakFr5BfXMfkoOU9
4IHs1nY1Lpo11o+mqgyt7Q66oXlccPXLcH25F1q4HlwiVqrgLUeLj4Gd/2pV
L+ejZbfB0YmxX6aGoJly8JD4MG5xBJrz90qakiY6dM/aiBbMA1dobbgt24rO
iwRn5+UUH92Jlv4Ddi9dkBixl+SvARfVDsA8IPk/gdNXOMaFHSb5R6+iqScf
jvn/k0PyU2Dvr6fO0/kk/zrwh76XrsHFJP8h8IaIJ3pqpSS/BKx80X/Py0qS
/wP4n1yfvu4akl/Hn6Y+H07LXFVH8juBdR+bWbk2kfyhYO2Uxbktr0j+DHD3
oOEZVhfJfw18cVX5GO5Xkr8THPJpQfVahgPmH8WHvt+8X1+kgZY6gm/FKPYr
mhEM3tHeb6BkjmaLwC6h/170nY3mV4BnOPza48pDi96B5xzUXTsYiJZorobz
skTXePc2tNwerHbYxXxkJpq1Bhy00+1hwDk0bz845qrfy5n30cKrYO8ADR+7
TrS4DTyyuJf9e9hMzK8WAP1cPxViMxHNtAU737rQm0ChOXxwX8eF+lR/tCAZ
fI1n3/NtOzqvFHxpauvSiCy09BW464TJ9/RSNGPkGpqKelnRoFKPZluBvUdM
aoptR/NXggtdvw3d9wMt2gNOePLAU6buiPkvgNOPKtYTLX8ODi/rN/czQbNU
AmkqsNTK47wlmscGz//wa4GvPVq4HCy73NojmoUW7wKrRLs47HdCy86B98a1
/N5FzGwF21gONTlPXs9RCqKp113uWXMd0IJp4CVK8+1irNF5S8GhrUEdQgu0
dCe4865tSpYxmlEMPmU2S3VgPJrdDI5c+YMrHY3mM4Lh/lgF56UWWmQGtr57
ZHO9CsnvDZ49r6Dc+jeuj3wH2DeoMjuhD836F0yZ5PoUfUTzGsHnkvUNT75F
C3+B/ZJ7jJY/Q4uNQ2hq2OSe7DtS0r8HePUy2c1nd0j/28HmE5Ju76si/ReA
JwjPvrhzgfQvBQ9Gac9KKiD9/wBv/Jw8puwo6X9SKE3952drgWca6d8dPCnz
rsHCnaT/LeDHpQbFKdGk/1PggDnGXL0g0v9DcHrVVIahD1oyAL69aGp97wKS
3ygMzme1LIM+O5LfFXx10nvPWFOSPwZcVJHy6pEByZ8H1vvSD+tL8t8H637M
zo743/P/FVzdID+1chD3B3P8WpqylwT9m/gVzVkEPtIWOdpOjhZEgweWxi9r
6Cb7Pwe8iavacor8XHoXbP4k4ZdaP9n/PWDHCX62/n/I/jdcB/M43nrca3WS
fwF4X69mitY4kl8ATr2tma09g+Q/Ck62OXZi5EKS/xZ4SaLBR12yH1mfwTe6
+x8siyH59cNp6tjVzAO9qST/f8BVY/32Dz9J8keAe/ilWlfI/pQdAWvfHBbG
ukX6rwZ/iivtCmkg/X8EL2kxe1PSRPrXi6ApQ42Gk381k/45YF3/EdsryOul
a8HaGk7Xa26S/g+BdVwV92PS/w3wxHa31Jb9JH8XOOLh70RqLcn/VySsb9wq
b+e5JP9scG0Uw3XLaJI/BCwz2Fy+hCbz7yCYC5eG4Btk/lWBh+yxZVsfIvOv
A6xjn988L5LMP2YUTQn32ExjuaJlM8GLu+MS3Nik/yDFz9uZk73J/Oakgw07
dq6pHEX6LwdPDgtMVdUm/b8Fn+h06a4dR/rXEMB9R5P3cbQD6d8ebBAUWXfI
n/QfAK6ZKCvsSCfzPxW86tNWnXN3yfy/Ah4XpHM4nTyfEhnYziKhymIeya+6
nqae01k603eR/m3ATpTlVOtq0r8/OPPR2P1tg6T/fWBtjs3dZ2Q+iS+Bu6a7
BdcsI/PvJXjxPMcBp1gy/0ZsgP3MalL5sofMvxlgUYjcKG4vmX9+4KaqgKbd
MWT+7QbXGU2y8+GR+ScGRznpuZWQ+cZ4Dg6v5B7fQp4PtnI0Tb2oSaPPbiX9
Twc/TrgJ85307wsOnXglrvMKOf8SwVekc+c9diPnX4ni9Zdnq7a8Jef/U4V/
bRe93UbO/6Eb4fNeY/OR9jHk/DcHvw4wart/jdz/fMD6zTOm7Ywg9z8h+NCy
tln9ZuT+VwReq6v0aPR3vF9ymsBiu8jCxmdowR9w4YFsQcUjdJ7pJsV9fo2W
Sita6gUeHbzdVf8DmrED/JGbJfP5jWafBd9UDd9lpIV/j/8YvO9Ygfy5Llr0
E2zV+ePlezW0ZEoMTV149rdyEXk/OQ/8NUCxn8j9dxv4U3jS21YumncanNZu
pa5ejvdrYQP4bvkmjx3fyP3/Ozi5+ee6jD/4+VE2MZam7phsg+cPP48yF4Oj
ck4qWTpbcv4LRpf0wg==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw113lczNsbB/BRoawjZbvJ2KJNSRvCzFW5yTKilKZMCqFuE+3IiKSfaIgU
UYmiSLcbspSRLUs1RNwU2SJTjG4hod+n5/x+/dPr/Wqamc95nvM95xm9Ishl
pRqHwzHpweF0/+7+0XRUCk7WFr2bJbTkg+YW8FfnKuWi4indFovgOSWDlXOH
kGU74JH7j64ZHmjRbXkBrG6doMy7Ornbqlp4q2ZHm4pL5vWcoxToBffo88TX
vNtCM/hC7jav1DCzbks94ESrM5VSy0ndLtgGK+YXBwl6m3a74Qy8o7T+j+I2
425zn8LXXNxWlKmR+Wp/4P8fL7thZ2PUbYkJ3DVoXLhGimG3M9xgXvWHmC9G
ZIUUvtr/U/2n9ond5uTBFi6h6bN/kM0fw/7Jz/fvsKXXi7vgZFF4z4AssszQ
SSn4bJBgm2NFnydfDJ8OXxOqfEdWbYa/KzzVmwvp+/FOwtrnzhqKEk0o/0PY
IPsvs0+hlE/6A15nkC9yX87yG8xVCnSKP3+da0/r0yCE8/70G1cygNaPuxG2
6Me/dz+YzD8BX2qfrJN/myypgr0CGo5d6kfrn9EB73TT8Jk3g6wY66wUcJJ+
rp+4lMxZADsvFzk6i8jmEbDi2p3qiIVk8TH4k/zj4NApZNl9eIBvSJd6X7L8
C5yUr57Y9JQ+X8WbpxS8OOVwuSmdzHOGXT1fbypfweofCnvfib3vNI4sTYeL
2vIcfCspb8EdWNTUoYoTsfz/wtGb5yTEf6P14erPVwoaSho1VTlk/h/w3AuG
7rMlZMl6OOGr1cw+S8kZabCuTt8BpWx9Fbdglchj4d6dZM5nuDDILbyhkmz+
2wLUr8mms7c5fb7YARatmSL0O0WWBcEXHa62T9Sj7y9PhZvDJmQOCWT5r8OD
hrb4Gd5i+T/CX9pyNw40oPUSDluoFKx60TkqfBdZ+jtsfiIqYUA7uSAAHqVb
1rnNh/ZXQzL862fAydgqMvcanDZpSMW1GbQf+Uq4MaGtqTGXLNEVKgV3JsSM
q9el/ZwxC66rSJ/VP5qsWANvGGK58vMrMmc/3Jgy/qq6vRXlL4V3Ny8LL80g
i9/DV05eunD4G1mmvUgpuOtnnKvrbE357eD+xUkR2QfJqlVw/dTaeeX1ZN5e
WLb1rbBdz4byX4Y3GaTl5ywhS9/CX66+SfTYTi4Y6KIULH17Qj82j9wwFW43
vbX9+B0y1w8ezY1XWDwn8/fAnNVDOUObyJJiWFpaW6ilJGe8gnUmaB599oas
6LdYKTD661GY1xMyxwa2DgxtXX6dbO4D56wbdevvU2TxLlh1pXeO4S6y7Bwc
E+w7d58/Wf4CrkxdvbL0d7JKa4lSMNvR6Uz0CDLPEnaLm/EkS0XrIfSGQwMj
U37dJEt3woO1LLKXHyYXFMKZa9POHQwmN9R1/71PyIMwJzK3tyv6ua0kOnUs
mT8ZPnZNo8WeQ5Z4wnbjDWvOvaB6ZcTCPg/6tk0sIyvOwskRuznPcsicWti9
Ys85zb2s/hpuSoFxjOr+x82s/pPgPU5JnLt/svq7wxo1S/E8J8tj4L61+sdd
vMiq0/B4zTtxkZ5k3hP4sbZN0E5vsrDHUqUg9bSTzpVVZKkx3B730nxRCLnA
FdaZPrIrJo7csAWepWVXaMf6kZsL90j3r2ktIfMfwf4pV7y4DWTJL1i6d9E0
Ti9aj4yJ7shnIPA2NSMrXODO1uOX1TzJnM1wVFKyvXIn2TwHfpllhvOPLH4A
z5DHZ2a+J8s64bTtpR4Ow1n9x3ug/3e/63nSidV/IXwoVD/FMpLVPwpeXLtJ
zS2H9f9x2H6pnk14Nev/Snjbr6iRPX+y/v8Gmy0olhePtaX8Y5YhTz8Hnfw5
ZO58+Gv/mzm915D54fBvE+r6vI8jSzLhIJNJFcHHyRn34MhW7+jbpWRFOyyf
r53f9wmZw/NUCsq1m5XiFrL5XHjwENntph5TKX8IbGRyTFGuQ5YdhWWGt5J5
BmR5OXz/VfqpwdZkVSu83KQ65YY9mTdShPOkVr3N1YUsnAOf/sc+t8mbLA2G
j17Tn5y4llxwGDY20P/MDyU33IRbirNNv0WTuSpYaqxnlB9H5o/wwn3D7BXO
V7LEHt4ZJpJ0HiBn/AlbFH7kxx4mK1LgEft/PG9NJ3Ouw88qmnbPyCKbt8CD
Bo3Y632C5R/qjefRwM/GC7NZfgE8J+phpiazfB0sVR9jvf04y38APiiabXI5
k+WXw4G3/N1OHWH5P8AbxYs9Y1NYfp3lSsHriYvPy/ex/DNhrTM7gqsSWH5/
2Dmq38HxLC83Ce6jrz7ZJoblL4Gzx8c7RbD1kbyDpfolH0SbWP5BYpxnB0r0
PZgV0+GQ4ac+NbDXc1bB862PrvbfzvLL4MbIyzLf3Sz/JTgjeFSo4yGW/w1c
n/sez2eWf4AP3r/QKiXpGstvCx8t+1FdV8fy+8JvvqzNHfeT5d8NC7zOOqeN
nkb5L8BjVnu3BDmRC17Cqth+N+9tIDf0XYH7m/ECzbp0MtcaHlZ+ofn+fTJf
DP9RWZ9zt4Ms+Q884uySoB4G0yl/EcypK4g4IiQrnsO+t3Z03I0gc7R8lYKC
F2snnD9CNp8Cu6Z+ttlVShZ7wVf9zorDasmyONjjb1s8z8nyv+DZv9Ti53Ps
KP8zeKBPZk6UFpnXyw/7udjZX9GPLDSHR6wu537rQ5Yugx0f1Dce0iAXbIdN
l7mYr/hO79+QDwtWNlt8bSZz/4E7XddbqteT+eorlYKqxNwos3tkiSlsG+bp
PL6Y5V8Knwpwbt59nOXfCh+q4Wdp72X5T8MxQ9XOi6JZ/hr4yT7XtbqBLD9n
FfbD6R69Gr1YfiP4yKu0onWLWP4lcKLDFjyfyKpouDZYo3Ehn8w7Ba8bVNOz
dRpZWA2bVR4RWtmQpT9hbZeeWZcsyQUTVuN8mXP+nzFTWP5FsMpt2YMBFiz/
Jvi68eFVoyaz/NlwQNCYsHYzll8B19xLrZs8ieX/Dv/7ITcs1JjlH+eP9Qjr
4vlMYPkXwi3DBMUHRrP8kfCJjcOHFw1n+bPg79YPfdYMZPkr4FpbN9uXaiz/
V7jE5fW7vW3Uf6rRa7C/t/5d2PqGzJsHf7zGeRb1iCwMg1u4PbMyr7P+z4CF
677Pe17I+v8u3Fox4reTx1j/t8G5VhkLw5JY/49ai/Mk/YaJPJb1vxNc1rus
7Uck6/8N8IN1D5uyJOSMI7BHudkCk7VkxW3YcoSOX//VZE4rPM37YmAps7ne
OqWAW5kiyQogix3hO/771SJDyTIJbHPRa9uJrWT5IfiTKz9tj4zlvwFvfhz3
JTWT5f8Eh1RumW5axPIPD8D998kGzCss/2z41Y6zRjHPWP5AOGJD9ISBn1j+
g/CVKSZFl3qw+pcFdH9fjagP2qz+zXB8vMsYjTGs/kMClQKreSvcAv9Xfz5c
Zbfl6i7Wb4q18IfPbb1u2rH6H4DfV7yyOzSD1f8qHL3Vq92N9au4CU4QDo3P
ZP0oG/wn7ueVXqU8I1b/GbD97mjPjfqs/1fDvUbfNnAfxPp/HxyiF9vopc76
/wqcqt3LZ0o7y98IxyQfFG15x/Jzg5SCmdPj0t/XsvzT4EdJY1S6Clb/lbD7
lAv/Xz9+Ivzw9L7qpWWs/hfhBUlq/16Us/q/husjl0zdyPpN0V+C8/mo8ZEh
91j9bWH1/b7HWmtY/VfA0z+8nd2nkdU/AVYO65jp/pXV/zzccfC18IkWy98A
O71QWsfosfx9gjGfr3LPX8zWn2cFz8kOCnGcyfIvh0t0Ixxdndn+j4c1TYtf
Ri1h+/9veKBfmHqhO9v/9fB5iw7/djdWf8316BduXNWsBaz+FnBE2Kq2Xax+
EhHs9ax+/6OxrP474PVDDau8OKz+BfBtfasT36pZ/mfwW41peZ3sfDHvuUEp
KJZaJpasZPnN4MlOo7v2G7D8HvDvuj9PPn3Nzr9tcO3hG9NeHGXn3xm4KSlk
RZc7O/+ewuIircrEwez8UwtRCiYVSY3fVdF9S2oC28+tmShKJBe4wftMe4c4
LGb3Pymsqcu93KHH7n95cPKFlryqFjb/PO5+v/tpbSNvs/mnC44va3LMZ/NL
hmEo7t+DznReSmLzz2J44D678fIYNv9Ew//pnaeYGsLmn5PwQeu+fY+vZPPP
Q3jH6yDUh80/P+Cch0rxtJns/msQhvtD+d5kbx67/wrh8p0hib7f2Py3EV7z
NNv95nU2/5yAt2yc3tW1hc0/VbDY2kGWaMTmnw7YraJmmErO7v9jw1EPDfXs
I3x2/18AV2fU2evkWPL/C3kZ93U=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw113k8lPsXB/BJF23WIlfKUCiRocWSmEeiiIY2lWpIKsRURGObUqQULZbc
q0YbJZmipFualKUV3bYrMaXVU93JvUqr33HO7/qH92vMzPP5nnOeOWMSHOW/
UoXD4Vj143D6fvf9DPBgmcO220pMxJP4QJ4dWOd7Oet3YWKfhYHgVrddoweq
obNSwSsWPp5mt8Kuz3IZeMDOQLMLjbZ9VraArWyeXd/mjeaqerIML9taPfUh
r88CG/AGzYGPjojQkkXghe+cjG/+ipalgMUcvez6IzZ9VpSCB9snpVXaorUf
g02M+azj0wl95qvMZBnJkrfZY46jRVbgzt0DlvpkoKULwCMDrfR3ZKKbJOBH
k8v3yMrQnBLwoGdbfnnConkPwDnFQ+ML+Ph+wl7w3MH1vZyT6Kxxs1hmiHuy
r7ouXq98Lrjt7q7Tq+ajlYngjJeuZuYFaG4xWOJZZ+/5mvLfA5tV+IU32uL5
SL6DOzt1Z1wTo2XmXixjX+LkZSFHKwRgccWX3t5etHY8eGSdhPVzwPPnHwNn
HOLsNVmFFjWCJ3JOxm3YgZZ+AZdPavGZLUU3jfZmmerENuvUIjTHFxynYh8c
U4jmxYFVVd2iOzLRwsPgjPql7w9Eo7Nug+0y3iwI9qP6fwKPzOY7qY1FK7mz
WSZ6zHXunK9Uf2/w4oTmfWo30YIY8Je2OqNPeZT/EHjDbpUZr1dT/htg5e3n
2UemUv5/wDmttXn/6lL+UT4sk94L/aPE8+TPBH+M1WgRU3+J1oP//X3xfbc6
tPR3cMwvBQnWV9FNdWBDO8MRr+lxzkdwRcsxfhs9nzfCl2U0yocmbabXF84A
/xtlH+I6FN8/Kwo8pe5FSqoLWn4ALA37e23tOur/a+CfOuPLw05R/g9g7rrw
Fy/eU36DOSxzz3nr3sOT8bwkbmDFuFm+uiloWQTY4P2u4sMP0Ioc8Myp5nY1
Vjh/2lfBU2+8jG9PQ/NZcEza7I+rX6FFegKY10fxw0574jxLXcGnIxqjqk6i
m9aA+S/POGRoTsb8+8Gdil1HLdajedVgTu+dNxn30cI34Ja2VqfLk6Zgfl0/
lrltbNZUtQctdwbzgnTaUjrRylBwgNuQfCMXe8y/B3wwWOK4bSda8Ad4YdDj
j9XNaMlL8OOnST03tRwwv5Y/y2yKbdty0h2tcARn3QmqWxaF1g4Bm16Ldenc
jebvBt932Jf09jBadAF8nacjHHMKLX0OTmm6OmpbCbppyFy4nmkxn7oL0Rx7
8KGCb6ZBWWheENhI30whi0ULd4ILb19d0xiAzjoHrnpV+O34JLS8Hdydnt1s
MgStHDiPZV49ibCwVFD+SWA9lR6Hk2co/7I+m6q7ZWym/NvBoqCwpIsCtOws
uOrlx3HGXLSiFSxV6kO/4/lqq89nGdeAuM6fNWi+LfjiT4sBWblo0RJwyNuv
Eacj0dJt4B0j6+afmYluKgMnSpf1/m2G5rSAt8ceOH5VDc37ZQHL9BZ5b09k
qf4TwBPsvZ6JqR+yAsAhlmEftGvQ8i3grlTJu5wKtPIU2Mw/2CDkFJr7COyz
58XpxhNoQb+FkG9W6zteKVoyvs+SUVrt59Gy+WCBQ+58m3q0IhlcGztCMaQN
rX0SPGbSupjar2j+fbDvlFPcfCPK/xNs6ql4d8uN8o8NYJmtNiYvf4ug/P5g
wYUtw7wPUP5EcNhJg1TDBspfBJbd/eTu3YMWNoNVPvACR43DemR9A09vbnl4
fxFabraIZfyYAfKydLRyDlhD/Y6pspLqLwYHsM6DHnVQ/Y+CdSvDNx+jfpHc
BddHV9w8ZEv93wO2mBlineZP/W+6GO7PNxYEXPl///uASzR77p9Pp/6PBZda
V1i1Sqn/C8FRzp/fFJyj/r8FVgis94U1UP93g5WSmgrZX9T/3CUss/u56aO2
t9T/XuDinRdTVnyh/o8GT9jbPb10gCPmPwjWGcIvtDRAyxvAfC01M6+xaGUX
+MSZ8gCxI5o7MpBlnAaeqx03Gy3wBFu8erb9mhAtWQdOW6rd4ROLlv0GVgZ+
GRuYiVbUgkeodUTGF6O1leA/xENvONSg+YZL4fmtTd4mrWiRO3iiT9Dgmm60
NBIc+2GQUbGmE+bPA6s+H7pXaI7mXAPnzKrZHOeM5r0HKzwCexMEaOHwZfD4
Nwvjb0HoLAYclR7enSxCy8PBXN21OXnxaGU2eHnlev17W9BcOfiD0HKMfBta
0AkuurrfZ/dWtGTYcpZJWqgKf6FlLuDIUPvp7XFoxWpwgt2rUZ+i0Nr7wId7
b+drhqL5l8HPdIqqu5agRa/BDqU2eyP80VIdIcsc0zMd6eFF+aeCx2Y6rprl
TvlDwfKltnF8hvJngcNrry/sJgsv9v3/oDINO0/K/wLcE1VSKPej/JpBLPPQ
KWZEeDDldwD3qynU/bCJ8q8Ab0xPM9DKo/y7wHcWHOm6+AflrwQ/G+sK80H5
n4Ezfh5tmKk1FfMPDoZ+fzgqt9sZrT0FrCf71FYTjuYLwUXpGwfm5KNFO8DO
wW+S5zWgpRXg0w45JR3/oJvawI8G3+wea+SM+QeuYJl9LXfqB/LRvIngy0fY
HeHL0MKlYF7o2uKJG9FZaeBabkG6ZypafgZcubJftnQXWvkE3LnW3GtFBpqr
FsIy2pn7V+WnoAU8cPHPwXkLotGSxeDJXbNTi5ejZVvBToeGP5V6oBWnwQ5T
rTwFlmjtv8BnvnlF1Q9G8/uvhHnSn8QZ/o7yW4ON5EVH59ym/AvBOjah6ltK
Kf9mcFqezZ/VWWjOKbCK3fWz+rFo3kNwf9sXgvwgtJATCvv3rTkBi/3QWZZg
qca+WD9PtHwemPW5VRY2Ha1MAluu2V37lzuaewLcsb1Gs9ELLfgTnPvQ55l4
HlryA3wrXn+fBr2fzGIVfP4Uqogro6j+fuCq9T1scTLVPwEcP7zNRZeun38c
XF91oGG0lPI3gU1SdNo1yij/V7BmwfjHnEuUf8xq2N9t7w60rqP8c8BHV7ff
qKHz4m0Cz1s7I7LrLuU/As6Ydul7P3o86w5Ydkhl2fDrlP8zmONzKLO1kvKb
rIF5EBq7/yii/LPBmZ+0JphlU/6N4C3jfvb2Uh6JFDxELzbCcQ3lvwlOu69u
nkjnrfgX7JsyrX2jI+U3DmOZS87HvO6ZUP5Z4PFGtw2nDqb8G8CfnV1Vln6i
+S8Aiy/uLO+g+WqqB2vJXODznOa/q8+OL6fdbaD5NwpnmbzJtsdirtL8e4Dr
f+2ZEVhN8y8Cly1yCx12heY/H+w670emzTWa/+tg4Wp9H9ebNP9/gzndYosH
f9L8/xoB3xcXGZzY0k7zPx0c+s+TJX+9o/lfC1YdXX4j7Bvd/3LBzR47ExoG
Uf4a8LnLfj9TDCn/O/DBV/88nmBJ+fXXwv2euzxnMZ2XlA+2uimR51G/NoWB
T7h5/Nd/nGxw15kTVYeWU/2vgH2rk8+pUz2Eb8Hmqz+rtYuo/kMj4fo7Ruj5
07zIp4FTgns8diVQ/VeBzQ3z+l+WUP33gpOmqZ3V2Er1vwQ25PhWlaRS/V+B
07PFkmvbqf7aUbAv2OZGbt5B9XcCD1Mv69TJoPwrwbO97iwp3EX5M8F7J/yA
z0vKXwUWvZ5VFbmH8neANxZXb1DdT/k1RCzjH1Jt7pJL+R3A0cyK1Ba6f/KC
wV3uxhviDlL+DPDbiCcXzhVS/vPgTZWS0byjlF8BvmTak7TtGOUftA76/5Rl
7lwydzJYMbefg8MRyr8c/FlvpXUzvb4kHezy0WX6JboeWTn4bkfsjFzKp3gK
bmB7/psX7QHrWWaGeonL/kjKbwcOnxR752MA5Q8EC9Z5xJ13ofyp4J78K4rf
jCm/DJx45tcpXdRfnCdgrYad/s40DzzVDSzjPX2o4Y9i6n8b8O20UlGlmPp/
Edju60KnD7Oo/1PAer1aS8YMp/4vBRt8u3e+9TntP4/B9/wP2uaX0v6jEs0y
z8Oiytpp35FYgV8VTR/Gc6P9ZwFYHGngrqlB+48EPHU0a/rjMe1/JeDrllX7
k4/T/vcAXPE2OdFgI+1/veApYr8A7kza/8bFQL8U7Ui0NKL9by64o/H5gD0f
cR/lJIHvjUgYdroezSsGd56Nu/ikAC28B1a5/HVY9Abaf7+D2aAxLs2etP+a
b4T95MZwgY8h7b8C8PYRn0Pc6PsgNx78PPlFzqBKtOAYWDhKBZKjJY3gh6PW
X0xwR8u+gPVPLFC09EcrRsdCv7xo3hl9mfZ/X7D3V9VHR0ST+f8Dmzn0wQ==

         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw92HlczNsbB/CRomyFxtZ1G5UWorElhWbQIqpJKVKMkMhSuQxRTZZEaJAt
pShbCxEViZSkrmpItHBN5QpzZUSuXMvvM895vX790+v9mqnpc57nnO9zGhGw
ft4KDQ6HY9mNw1F/V39pOyqFF4o7zf3ibQQgfzw8os5r/u3Rk9UW+8EvHr/b
oqWapLYsBjatNY13aJyodnEO7PxBsv/QmwlqqxrheIHrWs5QMk/LCa8ruGZp
q8arLbKCi9oEuQfqx6ktXQjbhkzr9WwZOWcH3PtwuIlMh6zIhretWvmtqpyv
tl493NBnw870JLJAw1kpXHO0T6FZDDnEEt5umHY0eDs51RsOvHtWd2c8WS6F
G+cV/L4rk8zJhPWlR6z2PiHz6+C5p5d4P9Cmzxf/gvMmzLYMdyTLLGYrhTHX
dro0xpGLPeH21Fkuxs/IqgjYaFPhvXhTysu7AHtfMfD03czyP4aLao4dKKok
S7/De90C9D4b0HrlmLoohR8zskNtVpMVItg0IGtOWS5Zbyvs+1E2ue4LWXAW
Lq3bX31mHNUjpAZO2Fd3MSiAnNoF94m+u2PpbrLceI5SuGSI5MOGFDLHDZa4
q9eDzN8M39M2zqzPIovPwDdM54+9mk6WPYTL4v4Rzk9g9f8C+w7bHaUVQVbx
5iqF766VSHuIybw5cOu0aS9PTieLNsIFxxIm6gwjS1PgpvTAYYc+sfwV8A0n
j1HhD1n+T/D9gI4fmudY/t9dlcKw+raxm6JZfmd4TFyNd38xOSQMTsyOahk6
k5yaBJ9wQb7RZPl9ONlikzSK9SfnI6ydufICty+Zb+CmFNpb2U326kEWO8Bn
B6VUOWmRZevhpLvCPj90yMUn4F2yR4el+qz/S+H7rd81X5qw/m+HSwzCOCPt
yKIh7ui/4y9Nl/iQpTPgkMJPQxK3sPxr4HetfpKW0yz/UTgjrKJllpzlvwsP
eND2X5UmrZ9ACRu1Deu3157VnytSCjUi/UqmS1n97eF1VwIt9O+z+q+CC11/
6zZcj/YzJwG2MxT3XONP5t+GHTv0vw3MJovfwJaHhx8z+8n2/wAPpXBWtV/S
DXdryj8Vbll/vfx5KlkVCPvO6vUsTUXmHYR/DZ4eO2I6nSeiQtgsf8KJoFiy
9G94ZHtVeVw1OUd3nlLotufDo2RdOo8UU+BOr60br7iQ9ZbDie81xjZGkgUH
4P2e6v4lhxTAR5Md91bJyaktcMfTB9da2snyPp5K4dNevi2ftKZQ/slw5Cyu
D38Qmb8UNozn+pQbksVx8OfOjaZvjMiy67D1Tg+dEvZ68Ut4iEPpzJ3s51U6
XjifZr4eurgnmTcRvhRXVxPZQZ8vWgxXm2Vd5NaTpbGwxHiX0qOAnHMVfr5n
a0PAYZb/ORz23aJy8yqWv+d8pfB8zaReg+1Y/nHw5cc2Ma46LP8iOMe+o2JK
Ha1n6i64VjRiaVcKWX4ZFgh2Pbu4msxphH93flEQZE3ma3pj/c68kXlqsvN/
LCzfE6jcXUf1lC2AOycP8jLOZPXfDlu05XnPjGH1z4KPP+oZpRXE6v8MDhr3
YMFuD7Komw/2gyB//euZZOlouHpKgrtAQM6ZD79ShOtfciIrouDkrLPafr5k
vQxY0jPXe7CELHgCW++fdEeWRA75CSc13NHYUkFONV+A/o991Sz9TpbPU3uS
9fCFE1n+CFi8zWnj1fUs/3m4R1dGxrRslv8RbOL0KSJTSZb9B0dp5F7OsqD1
Lh65UCmsv7+N07GCrHKHO6xa+ZYpZF44LGvY3K3PE1b/dFiyRD5+RnfqD2k1
bCxSn0/knK/q33e9q3T5XLLCyBf74XtOU1wgWc8VXt5iolkQThZIYI5ZUtO5
PeSQ03D3Pf6cQQnk1D9hj/LLeqWJZHknXJXakBF8ivU/b5FS6PdkxNqqFNb/
LrCCV9N5lln8B2znYN56lb1fdgr24PxReyWZ9f8DWLN/13Ixs6oDtrX+OWkb
ez9vuJ9SWDe28lXJabLICR7/3vbw+/Msfyg8L8pVMO4Ky38SznuWuMiyiOUv
g4eO+s94458svwq2znCsP93E8g/zx3kbNz/f+T3LPwveTsONLeVfB5vO+P2j
/0Cy/Di8JjK24qspmVMK91IOehBoS+a/h4sKT4+e7koWD16M/WLSbQJ3CVkm
hOcs6Dt8+3pycTB8Iu6UuUEkWXUEbvm4L2HTXjKvGPa7v3oeP4EsegfbqKQB
K0+SpfpLlMI0jZraolRyznTY+Xi/oKZ0siIIls/pUqy8QNY7DLfkO3N6Z5EF
RbC5JG/3mhxySBvsYvLdZmIey99frBSqFtbW6dxm+e3gsqudhkcesPyBcEjF
bw0RT1l+GXzSRqM0+A3LfxP+kLgkpccvlv8VPCCu3erLMDvK328pzpu0IOuW
qWSVDdxyJ37r8hVk3jL4ZWxtOzeBLNoPx7zB/i4nS/PhYf0zKp7/JOc0w60T
cR7aTKX8vQPwvIjh+xSFkfWsYcvJ8rfVWWSBGLYJj5Va/00O2Qsfio74mjZs
GuW/BkdH1Y4tn0OW/wXPPneJI5KQOTrL0I/mE+a0nyTzJ8DRk9XnMVnsD0f0
qLg96k+ybDccXG50xryWXHwFPvMwVsqtIauaYM3oKcOFd8i8HsuVwqnpbfPN
zpJFfHiZzc7iOdvJUl94tz3n07gF5Jyd8K3CuTv8zcmKSzD3sm/PeZ9Z/gY4
3cCAe7iI5e++QikM7x41I30Xyz8Gzg6SjNRxI6f6wG6unZ4OQ8jyaHhd7ttl
z/+m9eZkwYbJDshL5j+FJX2+RVkcJIs5gahX96/5r0PJslFwSagvp30Rq78X
fOKa9k0jd1b/SHif6vih5S6s/hfhRqGD74G5rP61cPE9p+ZwL1b/H/DWI43/
ai5l9TdbifrIJ6/ryT5P4QEHHTyh77+DrLcN1u+cUqg4Shacg+MHe45fm0EO
kcN6XEOXF7fIqd/gRp36x72ryHKTIPTTgIKk2gaW3x22cemS6Law/Ftg5+q6
iYmvWP40eKCDV+U6BctfBZ+YzjV4Usfy/wsPLQ5qfFLG8o9YhfP3ZMzMyCss
/1y4OvXcwRcnWP5N8Nsz6uQsfyp8P+xhRcdylr8SbmwWjiqdzfJ/ho/dPe4X
acXyG67GPNCqnTRuMMs/G24cUmn8rhvLvwGeOUHf6rqK7f9kmKdp2JXyiu3/
crjFz6go/y+2/zvgn/2883QUbP//FqwUPrkxr2zbW7b/HeE8hejrxW9s/4fA
XL5sa+QAlj8RjrO/qPua/X2qe3DuuYkbH3qw/B9gqx+Va4ZLWP6hazAfNGrm
3zvF8s+E9z39/3mQsxbOjC1zKFOx/MfUr8dG9P7C+levBJavtTO1tGf9/w88
UH7M2zOA9f+gtbg/OY7294lm/S+AdVYf+GZ8kvX/aviLfOGH9EtkzhE4YqoF
t/0mmX8HllVsOGVXTBa/hcP6xsnc7pBlA9cphf0yTA6+KSAXT4NFwi8Of2aT
VSthw43XvQpOkXmH4BVtg5eF7iOLbsF9bWsHFUjI0tcwRzeZ67aUnKO3HvOU
9mitztns/LOFQ8vHx60bz/KvgEvaV7luM2D542EtXszHl1os/w3Y5MfU4Ys6
WP+3wr3MZ2263Mz6v28Izo9s7L8nrP9tYOVin/NbKln/B8CKZld3vVLW//vg
g2kFY9KKWP/nwVr9Rx47eoPVXwHPPsZTuOWx+vcKVQqXptn483NZ/SfBfme+
BaRcZvVfAtt3++zAyWT13wPrj7nqm5/O6p8Ltx0q6TRPYvV/Ad9OuRp8Q8b6
XzsM97Fi3f5V0az/x8NpASttH6xj/e8Hl3U4TtX1Yflj4KL52pWjbVn+HDj4
v4L80CEsfxMc5vj85eYO1v9aG5TCaUbcUQ3s+Si2gseF94gclcT6fyF8c4pn
qeZa9vzfAQvnnmr+Zcee/9nw2OS9xbk67PlfD78dXOhU8JTNPxp/KIUvzj9e
fDaNzT+WcJjNH+8HhLL5xxvWvT6j6bg9m3+kME+nWbdGl80/mXBfXkeYawub
/+vg6X8P+Sczn83/v+DC1i0Gs2Ts/mOxEfftEj8jt2B2//GEF2Sq52syJxK+
nTelu7MJ+//PBVjn5y98sfn3MbwoccJvNxvY/PsdfpRuu8o3h1xsugn3L+ut
X+9tJ6tE8JWgRU0v3Mm8rfAiL6HxnkHs/ncWzhxwuDmD3SekNfC9W3lmZvvY
/N8FlwUP6Nliw+Z/YwnOT5s+B+800v1Tzw3+MRX3y5BJgv8BnWztcQ==
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
cS1SbRa9/7qA8/2g/kIr3n8BicQA+w==
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw913tYjOkbB/ARUsROStgcJglRmdISSb0kKjJKSeks2aRmk8MWFXYrCcUS
cphIpGREG6KG2sJahooOZFqE3qRYyrHft/u5rp9/8rnqmnnv5z4892sQGOEa
rCYQCEx6CQQ9P3v+aTjw3PWWrgnLd1vZgWILuK1MozXs+7Qe+y+H/xm+VmoR
Rk5NgHcKvicm1E/tsUIO+6dE9JnjTG6vh9ff31nEKX7qsajvPJ4TPB+1drk1
WTIZNq19pbGmxLLH8ctg8Y3zTgudyfJt8LQ/bfs/ejalx6qz8NqbnsOfbycL
a+EhA8scXWzJdmrzeW7hAfs1b/uSpSawc+wJ98ynFj2WecBc1clqm7tkZTx8
3XNC4dEqsiAXzt824NGJdrK4BjZsiXFXjqHP8++Gd5yzGdW2kpxq7Mhzrp26
oysvkxVucPPzv+YaDaPnb98MyzN04x/EkkWn4VG2fxUfaCFLHsCH32U0c550
HvFf4fS65W3p5WT5OCeeix56R7HChM5TJYEL7p11jkwhC2PgHKOKTclNZLuT
8L2ZddyGCZQf6T04xSo3Sc2XLPsET//qG/cxlqw0dOa53TNmdoduJwtc4GPp
r5YsjSOLN8LHp9f/GBrE8n8cvuuQyC+2Yvm/A3u+CA64JiArPsK/WrfqeZey
/IsW8FxwRGp23XqyyBl2PXXzzEtjsmQd/KvmgJIpDSz+Y/Cgq/9Eh+1k8d+C
HV8kxNjNIavew365eV6+3XR+wlELeS7RsrAgqpxsNx/uytYbZbGPLI2Eo/fm
Z9hHkWWHYcPIXRedgsjKCvjP2Zd1jQPIgg64z+CYe+5hZLG+C881to7ucthG
9p8LD1G9z4zMIqdGwNFds1Uud8mKgz1/P3tZxWL2fO1lsPadrSEdP7H6b4Ob
ZagvKav/YYt4zuyu7YSnZ1n8s+Ei/9Xhw1tZ/GGwZ3D91ZvsvFT74cevascF
BbP8X4eHdBWU+h5h+efhH13CpRZKsnSIhOcmfqwerf6NLLOFaz+WHUgZy/L/
M3z25Tbd/Hks/3/AYn+fO64hLP8lMN954FPgbyz/r+AVDnE1FcdY/gcv5rmx
zzwPrrzC8j8TLggOj51YQ25fCacHa5R8bieL0mCv6Ii00kE0XyTFcIJ1q3nA
ZHL8C/iYXWVtpRtZ/oMrnsfAsbRhE1k1HVZEXRn1ey5ZuAK247M3nVGR7XbB
I65JQleMmE7xX4K/JaVFW/uQZf/CPvEezsmZZKWWG/JfnRKd+5IsmAbHFxlk
fzKdQfEHwJZeamH3Isn+O2BJm35o4kVyaiE876T3rE0dZMVTOF2en6AxwZri
11zCc5c5taYED7LIEjZKnsMvjiFLfGH3Yr855X+Q45PgMnX7RKtMsrwAbjny
ZInmMbLqcY+nmb3al0IW9nPnuaHrLUqP/0y2M4e3NiSgP8lSb/jM1b3jBV/o
+WS/w/3Cr5v2Z8+vPAcPt9946U4wWVAPe+4Vbc0azOLv44F5KR8zt+0qnY+/
GbzwbXOxegg51RP+klUjc9IhK7bC5UZL8/XKKR/tebBhRdXRyhiy6BG8v/6C
yZWZLP+9lvLcgSK/wc6aLP+T4OPne+Y91YvcHbasqTW4cJesioM/pW84deg2
WXgGjngfGPya1ZtdNezf5fj1Vhubf9/h/UUNWiE69PmyCZ48V89VTuM5stIV
/u9U8cgtG8mCzbD8c4ifWyG7/07BNU4xR1I+kv3vw6Y5WRuXzmDxf4G3jtub
1hjL4jdaxnNHqz4kLbhBbl8Ez7se0/23Gp2nKBp2FFTvS5xFlmTB4ZlnW3PW
kuPvwscaFC0rZGR5F9yx++fpfcvJqjFePPdv1v0HDk/JwoXwsaYtNt/fke02
wIsH9sZ/Wf4zYdHbJzJRP7Lsb9jKJSPbUpOs/ABXdJSlC9nvBSJvfJ9M9Tmp
F1nsBDePifaI/MTqPwq+M2u4eeZbVv9H4apiB+2W56z+b8IGATs2G9ST29/B
TR8ivuorWfwjl6Nfuc26+ZUs/nmwWd3N+aevs/h/gU3cpc9XlLD4M+Ccwiex
RddY/H/B9s/3eIeVsvjbYdlt7ZJFZSz+H314LtD18WvTW2SpPTw+OGpMFft+
WTh8oNU7dwB7PuUBePED3Zsn2PMLyuCP3aKrIe2s/t/Ak/zU/jb8xuIf6stz
qXUzrLL60/mkcnCl54J5hcPIitVwVMUla8PxrP/3wVZaasuu/MT6XwEn99mv
nG/P+r8FFpgOsbzlyvpf14/n3LJd1wUGsP6fBQu3DoyykbL+XwVfv99HuC2O
9f9e+H12J/Y11v/X4Ck6J492sHkhfQlrTbgjCTvP8q/tz3P9OyeN/lDG8m8N
X0vb9vriI5b/lXCe5p7d1a0s/6nwSqlex6beMyn+K/C6R/fePNQnpz6HQyWb
gwdMJSsGBaA+Wp9Mm+NKbreCeSMh7juyKAjenzlfrpNGluyE9d5+beIukOOL
4IWJ73MaHpLlTfCwZ+/m7vpCVg0IxPyOuf5e3cCG4p8Kf7hp1PHOgWznD1fY
N8d0h5GlyXBeyK37dXvIsotw8pl94smXyMpG2DZB+2HeY7JAMwjzcm1P/8yi
+KfAebx5a40B2d8HHhcSVNvAkVMT4S5fX7VSP7LiPBygW+FsHkNub4ANqs36
TPyDLFJfgfvDPv1NzRmyRAxfyHhvHFRKjveCh2tbNXTfJ8t/gx0aPA3r/yWr
8mF1c6exondkYR081rHnyW0p/t7ByJdXRO0pLbLUFD6QsePe3GFk2VJ4yxzH
fhqGZOUW+E3S4cwRpmRBHpx1/FfF+alk8UM4vLL69w+2ZH/BSjyf2XEdPUdy
6kTYIk98dJorWbEEflzwOqe3N7k9FjatLPmiDCSLcuDYfx/8/d8qsqQKNv4+
37U8jBz/Df5Nx77yjzVk+fgQ3Hf6LwOLQ8mqxfBFobvPziCycBM8g5e3+S1l
8WfD1VkjFyXNZfEr4capJX96s/hkn2H5oUKfyYNY/GNXYX7cGrfJ8yWdp2AR
POCapZPJJZb/X2GHcLwdxbP8n4D3B5Ycl8xi+f8HNmvz1Z/6H9WPohNuU3Vf
vnKC3G7wM89tP3G7nXchixbA+UdfmT/qZPW/Htax3vZ2u4zVvwxe1VSWoe3M
6v82HPC56nTMJ9b//8HytsdJNWdZ/48ORT2M18g3CWX97wgP1YpL3iVm/b8W
TlNfnarRm/X/Edgs7oP56Wds/lXChxrnNUVXs/n3Dk7auUO46xGbfyNW89zg
weU5B9vY/HOAV3n5Ga1h8y5VCn+7ezjPk80vxSHYpbXMJucgm3/lcK3ZiEe5
PJt/b+HhOm/Wn53L4h8ehvePIbH6X7JY/HPgSwV6ZU3qdF7yNbBOyPfV+avI
qnRY/9wm3B+s/2/ALv3qrpiy/rRrhU1bvXyiI8lSvTWYh/WOn1UsnzI7uHHh
m935HWRlKJxXljJC/COr/32wW9I/bsPErP5LYaltyUFNS1b/r2EfF0vrzvGs
/nXCse+m1es/HMjq3wbWbPYencHqqT0E/j4+yNi6iPX/HtjYMmNkbizr/6uw
0cv8p09tWf83wykjHd3ufmXxCyN4rvOC7vLVRSz+GXB3wtUnub+w+IPh2Wv5
4t9M2fzbDS9xX1Df0krnKb0MV2kmj6g6T5Y9g5etWbTSIpasHCjF+aYJd8rd
yAIrWNu20/QHC7I4EC7c2afcdRib/ymw78T7PnF92fz/Ew678UHzYBfLvwq2
7t3z/szy3/8X1NuhnKoT7D4R/QRnWoYOOsLqQeIHv497sW8v+338dnir8cWN
O9rY/XcBPt8Y/lcS+zzVE7hhQX7y7g5W/xqR6A+D/3+fnQV8THPU5Vvs86TL
4Y8FcbZ9X7D6T4AjxcY3k2rZ/SeHY0+ITbZUsvuvAbYSaaZFFLD7r+9a7CNv
V5nUsHr2nwy3eqpbToll9b8MVs9Of9Lfn8W/DdYaXeX7xJbFfxZO0Yp4M2kU
i78W1isyKN3A9nGJWhTmV0im5uxatv+YwInBWWpahWz/8YB3fVY99djD9p94
uDF8IO5Ttv/kwv0GqEZGSdj+UwMfHPpDy3wLtv90w7VZn4ud9Nj+Y7wO9eJh
Utz3C3v/cYPXj1zmsauRvf/EwkYezV1dJWTxafib9/RBXofY/v8APpdc1Ksi
nO2/X+EWm4pZi9k+rBi3Hvm4f1ss/ML2fwl8QzZxztBzbP+Pga/2c26KXsL2
/5OwIDBt/aLXtK/H34NtBwSF56xm+/8neIKfkeWROvb+a7iB51Zftplia87e
f13gonXa9D79P0RlCD8=
         "]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[CompressedData["
1:eJxVWGl4E2UQXlAU8CAqKihHEIGWFgh3OQpbD3q32yvpkbbbpk3vdtOmRUF0
FcFb4oFn1SigaAHjXe8IKt5EBEHwSMW7qCuKiqKYzJd3faZ/+rzPfN/MvDPv
TL/tuOq2/NqBkiQlDpCk6O/oz+Al/Slrth6Oc65JkiPQNiOCe8es6s/rnRnF
qjOCx0bhmKlR7Fttnp8cxcFABKf1LRu+ZfuUKDb2meenRbF1UGp/ynoteege
ly2KlWkR7InAdRphvcS0T4/iwErgAxQ/vDmC452RiBvjo9iyNxXxrFEsD0xj
di0xLZZ/0qQo9tsjePiW1L5luyheSI/gg5HsVvUQlnrSYvkYM4j/7jTkH0f8
j8GuTST+8en9Kdui9LeOJv4FESwqSXZjRTrOUz2sG9NRr0TivzOCo+mn9o0g
/kcjOJ8SHkn8J2b0p0QuJw91JBB/JQP+KT/L8gzwIyxvyEA9iI+2IwP5U3/8
RzIQn/oRGp8J/rOJf46JZxH/SzJj/lLnEP+HMhFvLvF/LzOWj07xgr9ngs8E
4m/NQr7UD2tmFu6PJ/6dWUwf+gNZuE/9CrydhXypvuFfuT/LmGz0i+LLadmo
F93X2k1MevV3Z8f4JZCeQm9ms/ylX7KRH+nPdm4O4tF99eIc9JPy9bVFcFRu
caME/7tNTP6NbTnQL9XT+pN5n+qtjMhl+tMvyEU9iF+gORfxiU/4jlzcJz1a
Xstl/OR+8zzF085U0D/C/sUK4hG/UINpp35KtyuMr+0V0075qd8pbL59p+eh
fqS/4MI81I/4Ge489If0Y70lL1afbsLKi3nIh7D+dR7i0f4JDMuHnfILzzMx
2S01+WxfyTdzu9abj3kX/L/k9tDJBbgv9D+3gNXPVlWAfSLm/4YC8KN6+J4x
z1O/g18A63TfGFII/qL/swpZPZSKQvCdT/yvLcS+FfyfLMQ+pPvhT/l9y4lF
0NsC4j+9CPkR1spg7yZ+/lWw94r+P16EeSD/0r4i1EPwP97O9KNOtaOe5M9X
bEd+hINX2ZGP4L/JzubBuscO/RJWBjhQL+qvnuDAvBAOFDnY/glf4QA/wf8x
B8tX3mVi0qP2rwP5Ujx/XHHMPkzMf34x04e0opj5tz0C3Cv234fF4Ev98f1d
zPQcnFDC9Z9bAv9C/8tKGD9lfQnTt/4BcMI84v+neZ5w+LxSNh+W7FKmZ3lp
KfQo+v8gzm8X+n+3lOUXOlzK/r5L1jL0i+y2jDLEF/y9ZfBH2Hd/GfxR/OBb
5n3CxiHTTvlbRztxn/SupDoZP93jZPsocK8T/RT833Ci3oQthumPsHxOOTuv
XVSOelA8f6tpJxy6qxzx6Ly0rZy/f34s5/zPrmD98aVUcP5NFdC34L+2gvMP
ViBf0f8fKlg8fXgl5oHyCyziOFxfifknbLmtEvfF/L9cGdNboej/t7gvUXz/
aSr8EQ4tUNEvwd+tQq+Cv09l/VZfUDn/r4B7CAdPrWL+jaQq1GMh8XcBG2RX
bqqCf8pXf64K9Rb8+6pQP7ofPqka8yv0P6ea5Sur1chP7P/rqxk//9PVbF+G
Pjcx+ZeGuFCvRcR/pgvzkUz8y11Mb75rXOBD/oJPuJh/Y7+L9cd6Qg3yJ6zY
alj+emkN61fg6hrwEfy31KAelI/lE/P8YuJ/XC3f/1NqEZ/u+x21rN6hK2uZ
XqRNuN9L2PYx96dKbpa/b7KbzW+w0I15Evwvd7N5sz7q5v3/yM3i6/+4WbzA
pDo2n+G8OlZfy2V10B/5lx/m57VQHdOj/6867G+h//PrmT8pt57Vy3ZpPe6T
HtR19agf2X3v16N/ov9/1EPvlI8xrgF2of8sE4v919UA/4K/vwH1Ffp/pwH1
In2Ef+N2y9hGxldOb4R/wb+jkeXjv6+R1T+0vZHlIx1qZPq2jWpiWF3SxPTp
05qY/+A9Tax/xuvAvWL//dzE9//IZob1C5uZPgMtzdAH6T18p2kX+t/ajH4R
lg82s32hndWC+SF/frmF6SXU2ML1v5bbba+2wB9h9fsW1E98/5zRyvoTTG7l
+6+uFfoS+r+1lb33lJdg7xb9/8a8L95/lja2v8LzObbUtrH6yWva2L7Rnm+D
3sX8H2hj+yp0isb0KyVprL+2ag3zTfmoN2p8/z1rYsE/rDH/xlAP+3tlne1h
+0Gp9LD506/zsH4EnvKw+oQ/87B5sQxuZ/HkGe2cv7Odz//qdravQgHYJcpf
2t/O5ss2qIO9r9RpHayfvpIO9h4Pruxg82Vs7mD1s+7tYPVVBnqZvvREL3sP
BOxe3n/dy+bN0uNFfym+vNuL+tH7TTvmZe9Zf3wn4pN+QwWd7D0pXd7J3ie2
jZ2sPurOTvgX+j/ayd5HwYldyJ+woXSx7zvr8i7cJ3/Khi70R3z/7TDt9H4P
HOli3x/h8UuRn/j/R87S/7+n/wOd+5Qa
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.571589, 0.586483, 0.], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.915, 0.3325, 0.2125], 
         AbsoluteThickness[1.6]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         AbsoluteThickness[
         1.6]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.6605952*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Temperature\"", TraditionalForm], None}, {
        FormBox["\"Time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {Charting`ScaledTickValues[
        ((Transpose[{#, 
          Table[
           Directive[
            GrayLevel[0.4, 0.5], 
            AbsoluteThickness[1], 
            AbsoluteDashing[{1, 2}]], {
            Length[#]}]}]& )[
         Part[
          Select[
           Charting`DateTicksFunction[
           Automatic, DateTicksFormat -> {Automatic}][
            SlotSequence[1]], And[
            FreeQ[#, 
             Alternatives["", 
              Spacer[{0, 0}]]], Head[#] === List, Length[#] > 0]& ], All, 
          1]]& )[
         SlotSequence[1]], {Identity, Identity}]& , Automatic}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
     Method -> {
      "NoShowPlotTheme" -> "Detailed", "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6605952*^9, 3.6864288*^9}, {0, 31.428051427955793`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"temperature data\"", "0.01`", "0.1`", "0.2`", "0.30000000000000004`",
        "0.4`", "0.5`", "0.6`", "0.7000000000000001`", "0.8`", "0.9`", 
       "0.99`"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.647624`", ",", "0.37816`", ",", "0.614037`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.571589, 0.586483, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.38105933333333336`, 0.39098866666666665`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.571589`", ",", "0.586483`", ",", "0.`"}], 
                    "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.571589, 0.586483, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.571589, 0.586483, 0.], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.915, 0.3325, 0.2125], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6100000000000001, 0.22166666666666668`, 
                    0.14166666666666666`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}],
                     NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.915, 0.3325, 0.2125]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.915, 0.3325, 0.2125], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2672148173956843, 0.34800444289592275`, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    
                    RowBox[{
                    "0.40082222609352647`", ",", "0.5220066643438841`", ",", 
                    "0.85`"}], "]"}], NumberMarks -> False]], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Editable -> False, Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.780095596718647*^9, 3.78009563735933*^9}, 
   3.780095667722831*^9, 3.780095755041131*^9, 3.7800974062910633`*^9, 
   3.780097452682261*^9, {3.7801310607153273`*^9, 3.780131071087816*^9}, 
   3.780138410183511*^9, 3.780138457954232*^9, 3.780330695657902*^9, 
   3.780334159546816*^9, 3.780336809703507*^9, {3.7803372596255283`*^9, 
   3.7803372731456013`*^9}, 3.782464215931747*^9},
 CellLabel->"Out[3]=",
 CellID->405357707]
}, Open  ]],

Cell["Here is the estimated conditional CDF:", "Text",
 CellChangeTimes->{{3.780097456818009*^9, 3.780097477337779*^9}},
 CellID->946362831],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Through", "[", 
       RowBox[{"qFuncs", "[", 
        RowBox[{"tempData", "\[LeftDoubleBracket]", 
         RowBox[{"100", ",", "1"}], "\[RightDoubleBracket]"}], "]"}], "]"}], 
      ",", "probs"}], "}"}], "]"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Temperature\>\"", ",", "\"\<Probability\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7800956799194183`*^9, 3.780095718970303*^9}, {
   3.780095759921752*^9, 3.780095760729353*^9}, 3.780097492541576*^9, {
   3.780138444883692*^9, 3.780138450347896*^9}},
 CellLabel->"In[4]:=",
 CellID->848282469],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{18.891142149802327`, 0.01}, {18.507880348960835`, 0.1}, {
       19.09154468121103, 0.2}, {20.093763584249608`, 0.30000000000000004`}, {
       20.0896866195479, 0.4}, {20.207374597816546`, 0.5}, {
       21.390000006145797`, 0.6}, {21.75807085124906, 0.7000000000000001}, {
       22.668507819580515`, 0.8}, {24.650708290568996`, 0.9}, {
       25.075357486876765`, 0.99}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{18.37105790858759, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox["\"Temperature\"", TraditionalForm], None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{18.37105790858759, 25.075357486876765`}, {0, 0.99}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.78009568572816*^9, 3.7800957194275503`*^9}, {
   3.780095757072919*^9, 3.780095761708688*^9}, 3.780097408698379*^9, {
   3.780097479376872*^9, 3.780097495600556*^9}, 3.780131072912237*^9, 
   3.780138410761408*^9, {3.7801384461571302`*^9, 3.780138460171474*^9}, 
   3.780330695895813*^9, 3.7803341598656387`*^9, 3.780336809866415*^9, {
   3.7803372609898443`*^9, 3.780337274192107*^9}, 3.7824642161004333`*^9},
 CellLabel->"Out[4]=",
 CellID->1028853265]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rescaling", "Subsubsection",
 CellChangeTimes->{{3.7800983797415447`*^9, 3.78009838610944*^9}},
 CellLabel->"In[5]:=",
 CellID->2047156370],

Cell["\<\
For certain data it is beneficial to rescale the predictor values, predicted \
values, or both before doing the quantile regression computations:\
\>", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.780099788392171*^9, 3.780099846433564*^9}, 
   3.7803368719907103`*^9, {3.780337293561132*^9, 3.7803373161519136`*^9}},
 CellID->1164751688],

Cell[BoxData[
 RowBox[{
  RowBox[{"finData2", "=", 
   RowBox[{"N", "@", 
    RowBox[{"{", 
     RowBox[{
     "10532750", ",", "1342440", ",", "714972", ",", "1289802", ",", 
      "1302765", ",", "814231", ",", "830680", ",", "416649", ",", "80017", 
      ",", "24343", ",", "1808", ",", "1939", ",", "25848", ",", "32532", ",",
       "21807", ",", "26108", ",", "12581", ",", "36315", ",", "34544", ",", 
      "3827", ",", "7631", ",", "7259"}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7803339189893503`*^9, 3.780333921248558*^9}, {
  3.7803340504709787`*^9, 3.780334063102565*^9}},
 CellLabel->"In[1]:=",
 CellID->286552493],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{"finData2", ",", "4", ",", "probs"}], "]"}]], "Input",
 CellChangeTimes->{{3.780333607509145*^9, 3.780333619024104*^9}, {
  3.780333720715125*^9, 3.7803337346525583`*^9}, {3.7803337919422503`*^9, 
  3.780333797473864*^9}},
 CellLabel->"In[2]:=",
 CellID->2008431976],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming","lpsnf",
   "\"No solution can be found that satisfies the constraints.\"",2,2,4,
   32626005501538997296,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.780334059854391*^9, 3.780334064426833*^9}, 
   3.780334160008482*^9, 3.780336810007806*^9, 3.782464216249426*^9},
 CellLabel->"During evaluation of In[2]:=",
 CellID->398499211],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming","lpsnf",
   "\"No solution can be found that satisfies the constraints.\"",2,2,5,
   32626005501538997296,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.780334059854391*^9, 3.780334064426833*^9}, 
   3.780334160008482*^9, 3.780336810007806*^9, 3.782464216256895*^9},
 CellLabel->"During evaluation of In[2]:=",
 CellID->1722227931],

Cell[BoxData[
 TemplateBox[{
  "LinearProgramming","lpsnf",
   "\"No solution can be found that satisfies the constraints.\"",2,2,6,
   32626005501538997296,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.780334059854391*^9, 3.780334064426833*^9}, 
   3.780334160008482*^9, 3.780336810007806*^9, 3.7824642162614594`*^9},
 CellLabel->"During evaluation of In[2]:=",
 CellID->1700242051],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"LinearProgramming\\\", \
\\\"::\\\", \\\"lpsnf\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,2,7,32626005501538997296,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.780334059854391*^9, 3.780334064426833*^9}, 
   3.780334160008482*^9, 3.780336810007806*^9, 3.782464216266398*^9},
 CellLabel->"During evaluation of In[2]:=",
 CellID->1550744175],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}], ",", 
   RowBox[{"0", "&"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.780334059878559*^9, 3.780334064449662*^9}, 
   3.7803341600325813`*^9, 3.780336810035555*^9, 3.782464216271969*^9},
 CellLabel->"Out[2]=",
 CellID->1495809233]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{
     RowBox[{"Rescale", "[", "finData2", "]"}], ",", "4", ",", "probs"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Through", "[", 
  RowBox[{"qFuncs", "[", "10", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.780333607509145*^9, 3.780333619024104*^9}, {
   3.780333720715125*^9, 3.7803337346525583`*^9}, {3.7803337919422503`*^9, 
   3.780333801784809*^9}, {3.7803338483374233`*^9, 3.780333880480809*^9}, 
   3.780333940659783*^9},
 CellLabel->"In[3]:=",
 CellID->548846758],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.00015787694520718755`", ",", "0.0001915280685741305`", ",", 
   "0.0021398845421425785`", ",", "0.005329747618365703`", ",", 
   "0.024255305437048826`", ",", "0.02274344097492073`", ",", 
   "0.044362490389467775`", ",", "0.04349069209603882`", ",", 
   "0.03223548317684101`", ",", "0.032235483176841`", ",", 
   "0.032235483176840996`"}], "}"}]], "Output",
 CellChangeTimes->{3.7803340659928083`*^9, 3.780334160095544*^9, 
  3.7803368101025753`*^9, 3.782464216344358*^9},
 CellLabel->"Out[4]=",
 CellID->1622207249]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neat Examples", "Subsection",
 CellLabel->"In[5]:=",
 CellID->540091361],

Cell["Compute and plot regression quantiles over symmetric data:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.780141644766632*^9, 3.780141664271969*^9}, 
   3.78033687661491*^9, {3.7803373316668253`*^9, 3.780337344322551*^9}},
 CellID->218835221],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "20", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"distData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "]"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", 
           RowBox[{".15", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"1.5", "-", "x"}], "]"}], "/", "1.5"}], ")"}]}]}]}], 
          "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"tempData", "=", 
         RowBox[{"RandomSample", "[", 
          RowBox[{"distData", ",", "100"}], "]"}]}], ",", "data", ",", 
        "probs"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"data", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"tempData", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{"-", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}], "&"}], "/@", 
           "tempData"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Rescale", "/@", 
            RowBox[{"Transpose", "[", "data", "]"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"probs", "=", 
        RowBox[{"{", 
         RowBox[{"0.02", ",", "0.48", ",", "0.52", ",", "0.98"}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"qFuncs", "=", 
        RowBox[{"QuantileRegression", "[", 
         RowBox[{"data", ",", "5", ",", "probs", ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"LinearProgramming", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<InteriorPoint\>\""}], ",", 
             RowBox[{"Tolerance", "\[Rule]", 
              RowBox[{"10", "^", 
               RowBox[{"(", 
                RowBox[{"-", "2"}], ")"}]}]}]}], "}"}]}]}], "]"}]}], ";", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"data", "\[LeftDoubleBracket]", 
                  RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"#1", "/@", 
                  RowBox[{"data", "\[LeftDoubleBracket]", 
                   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
                "}"}], "]"}], "&"}], ")"}], "/@", "qFuncs"}], ",", "data"}], 
          "]"}], ",", 
         RowBox[{"Joined", "\[Rule]", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"True", ",", 
              RowBox[{"Length", "[", "probs", "]"}]}], "]"}], ",", "False"}], 
           "]"}]}], ",", 
         RowBox[{"Filling", "\[Rule]", 
          RowBox[{"Prepend", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"i", "+", "1"}], ")"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"i", "+", "2"}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "probs", "]"}], "-", "1"}]}], "}"}]}],
              "]"}], ",", 
            RowBox[{"1", "->", "None"}]}], "]"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameTicks", "\[Rule]", "False"}], ",", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Small"}], ",", 
         RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ",", "3", ",", "3"}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.780138739321136*^9, 3.780138936471183*^9}, {
  3.780138988317029*^9, 3.780139028963311*^9}, {3.780139157948969*^9, 
  3.780139185085074*^9}, {3.780139258945857*^9, 3.780139356023046*^9}, {
  3.7801394983153954`*^9, 3.780139661647541*^9}, {3.780139703975629*^9, 
  3.7801398960178423`*^9}, {3.780139948737138*^9, 3.780140131308938*^9}, {
  3.7801401750969067`*^9, 3.780140215832244*^9}, {3.780140253186075*^9, 
  3.780140366748221*^9}, {3.780140399159771*^9, 3.78014056233453*^9}, {
  3.780140614062415*^9, 3.78014061412796*^9}, {3.780140787227269*^9, 
  3.780140927092432*^9}, {3.780140986092477*^9, 3.7801410827976923`*^9}, {
  3.7801415266891336`*^9, 3.780141614706965*^9}},
 CellLabel->"In[1]:=",
 CellID->1208248389],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvflbHNmVNtjPzPwwP86/MH/E53Lb7aluu213t912j+3uz1/b461W1+5y
uaoAISEJiVVsYhESCLEJgUBsmUBCspOQbEnuyZqJAAG5kOzkBqkJKiNvBHsu
EXEjIs/7vPZTdkkQy70nznvuWf7vP336i3f/t7/7u7/76/9J/Ncv/vjVP33+
+R/jfvl/Ef/jPz/565/f++Sdt//1ky/eee+dz7/9p/+d+D9/9n/83d/9lvjP
8T+/BgAAAAAAAAAAAAAAAAAAAAAAAAAAAMQq3gUAAICQAdYGAABwA7A2AACA
GyC7EY3ZAQAAsYMozQVYGwAAECLA2gAAAG4AmggAAIQL8FIAAAA3AGsDAAC4
AWgiAAAQLsBLAQAA3ACsDQAA4AagiQAAQLgALwUAAHADsDYAAIAbgCYCAADh
ArwUAADADcDaAAAAbgCaCAAAhAvwUgAAADcAawMAALgBaCIAABAuwEsBAADc
AKwNAADgBqCJAABAuAAvBQAAcAOwNgAAgBuAJgIAAOECvBQAAMANwNoAAABu
AJoIAACEC/BSAAAANwBrAwAAuAFoIgAAEC7ASwEAANwArA0AAOAGoIkAAEC4
AC8FAABwA7A2AACAG4AmAgAA4QK8FAAAwA3A2gAAAG4AmggAAIQL8FIAAAA3
AGsDAAC4AWgiAAAQLsBLAQAA3ACsDQAA4AagiWIQW5sHr5Y2fb4j3BcCECrA
SwEAANwArA0gFOzvuldeOpcXN4h/wH0tAKECNFGswP/aurY9JJ95nDeQ8nUr
wbQESVn+gKxJp51cdth2/X4/7ksECAbgpQCiwe9uSgnivgqAMADWBnARfL4j
y5y9p834OLc/4NgEmHNbVlWs6GjSTgxbFhccbrcP95UChAHQROKG/8i/bNno
lhiK0rvpFuMss5La2+o1trUd3JcMEADASwFEA9BEgNAB1gZwChv2PeXA/LNS
ZcY16eWODcGAtWl6Orlk3ngNoV/ApQBNJEr4fEfzJmtbgyY3ufNKi3GKtY+V
Dusu7jsA8BrgpQAAAG4A1gaA4Pf7R/rn0+Ilobs0AU0U+Ocn+YMvzQ7cNwHg
L0ATiQxry1uN1RP3rrefaxwK73Z01QwuKlU7Jv3c0ORAw3BdUU9uUtupP5aW
IOnrMHm9h7jvBsBTgJcCAAC4AVgbQAC7266nj0ZOuSupcZIn2V199QrCsfGY
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
neGo18TutAHF9rulBo7XQOyAVWvjP/LnBksAxljrnRvS7jBT/Qy5L5re23Fn
Xm/juqjKbNhOfZdKmXv4hdAFESmLNBK6XdotS2ZEFnktxifZpNedn9Ll9Rxy
uUJiBBFroq1NqnflqwnuUtmJVVGeQ66K3OROl4vrFhwtz4LlkHFcN+0EhsK1
Saovdw8POoOJEmxropH+efIMOpOjM+hwuTRK9UedNXA6Su/oyF+SQ45sK7zb
4ZoXQFjGrezYufex461zcuEc73/P/vH37Vnv2R98bitPtNel2CS5NnmJdbjG
NtVsm5Zbl4atNs2xs0H4S0vDNmWtrSHdnvex4+vzj5k23v/ezsNEj5qLKTPd
z8iGG5mJbQd7Hi6XQeyAVWvz6qUzmhIAZrk0pib8ikAsolvCqcqW1JEGLeOa
1MnVc9gpvkYJovsfCTVl7lzO9jr+8iMqia78LiNPbOWbFRJ4U/2yaS5XSIwg
Yk2EUnC575S7qlKnBmucZdy24JjWrSL7Ka8Z4vKugaET1Z2lxUucDh4N+RUN
2NZETTXkWEzJE/5WylTmksGZiqKhaJ5GuBgdXEBWiO9DWi1GV2/DVvIfzyoX
e9Kv7bV3bOqWqIqp11U2ZZ29NN7+8T+dzanbzvjArWB33OSWSZ+RQH6M+jvB
RWEFrFobRc9sQIMUJrfj3y+LJmlFP0qLXVvZiubGQ8fyInXu3Fev4OZO9+vy
KGtw67/JuIeYONfr+PSf0T3u1+Yw8txQNevx2BF87TjEiog1ESFRU1APWM7t
Rmd1sNlCnGTtFUd2Y3/XjfrsFafJXBy2qQSGxe1pPRry+7x8jJvlEVNgWxM9
yiLPQZStOLNZLud0P1W8tmzZiOaBhI7tzYP0a8G1/SDyChrWx9ObDQdt5ZvX
/uu0VPnkB/aqJOuigmH3w6m3Tjbas/9sf/fvT/3G7fT3PVMsKmtZNdWbnfu8
hVgAq9am5tFIYC/InnJxsHgld6cNuUlkDltpbv/RIet5uYe+I2Rv82+3c1MO
cND5lDo1/vIntpVR/BKGA1nUXBL9oyPcGzR2pB7cG6YRsSZC/fw7cViSvTnD
/WALjvKCQS7y+f2vGyrI4c6p8RLOKhCBkZFer7owbWV9ecQY2M7wR61xzcP8
TU/1WowP08kgCeFZRfNAQoX/9fMnYyjFxaHTRnzx7Gki77x2v6GQPmqEDAV/
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
sqjYS0ejNrLaolA00ZJ5I/BbUuMkB/OUYeSPKMBCPoxvcw00bd3+/Sk1dDyP
viGN5wdDF9KhszVkOt6ntad761vExvfORRhAiPKVbRn1BbfJYuG0BMmSJezE
D1GCcS+lqYYcf9ZWcXUCEjB07lWmUlvpLz+yzkE1NNN0GmxlCVTw9uZvLjFW
ARO0N2soSiGPYDKvt/GrB53/9UjvHHItiI8+U9M3up5SssikXQ39ikAT8YT7
L4ooN6PqBv6tF5t06OjlBqGPAzjFpdGpLJosOm5QwCZWXjrL8gfoSW7ZN6Rj
EmXoaXJXcnfWgDKTCcolhghkUSiaaGzIHPgVD9MhrYVdhu60e8blW3feOn02
9OVPjwse2WupzRkXFfbcD04cGH3x7wweGIXFVZUaRVRybsk2HfsRmwXRgHEv
pbyA9JcUTSPYtyH325ml37JXfpfaRJ/+s3W2B//WFiWdenvBp/RySJ9Zf/nL
ejWpSQ9WFj/K7vN6eNHFxe/3dzRpkVOReU0y3X+6ZuGS9Xb5giecn5IMMpCb
m9zp2veGeFWgifhAz0T3xnvfJRf59f88nj+Ifd/FKm0ro/Yv/pWsMnjnO25F
hF+Z5bEpesoZS3Pqt7cOmp+p6GdDqfGS48aVM8w3Gd6e1j+kTUkbks+Ee7Wh
aKKWWjL/uaWMxbJ3YIj0GEZ3Cr50vPXGCTX09c9s8hKRzQiwDVYRjhztwOiN
3bLbWE4nCccApY8+vNfrcoX6NRcrGPdScoODqvXd49i3WIAhpt9H7CIye52n
/3+LcfdJ8glBNCPHvqPFTIfOkUGVc+7kfnblaEVV+yj6drfWTWFvzX105A+4
LqRsudm+MqZmdsETPxC13Jc8V4d4YaCJsNO7oN2M/yVKy4foCn4aZI6gRHV+
9iOPPsLD3JUJdXYSJYuePVZGOU2MDrfL19tmzEgk+2YH7ENVnnxdxUDaz0Xc
NOrRKTxBy6wtrGsORRM9zCIbLIy2iCeEK0R65zR7lWkb758ce/qXH9l6H4tM
DSHaXo3bCz6j3y+ujE1lywjaZTWlyij7PTIIv9/vtO8tmTemdasq5eJQ92y3
1NDXYRodWJjRr1nXttloJM6sl+L1HKJne64bhoXRayJsPG67fYvaNZ/9yDrT
jX0vi582tf3Wb06k+l/eQdFiaqEVFqnHOa10PgXCoDVWTaCLyU9ud+hY6W8j
rxmi3JU5eyjXhlETCdUCMMfA3dEHPds7HuDfa8BA38vgS9m88d8RN6RanVSj
OfWBdFnpc/V2dCNQCa9D2T+ffYvSJgQL73QY+ybCaFwZKTf0OsqU3e0KK4h9
pSY6dleCEfLFEXHOUhSATbMY9ltKnJ/9+IQa+vSHNtkDsaqhE3t/sIoaHH/c
nP97+62lnL8Ck7SCyoaNuIKPEfi8h4QIGu6dq3syesrsnGJgbT/JHxzommGw
bIFZL8Xt8hEirvFRb1lWFxvn6bFFQhCVJNFjJta5XuxbOFa4OmFPoGau7VWn
X/6yDuaMKNMj45rUurod3b6MEIe+o/pyaiJbSXrn9vT5uX/R82DeWHiXNFlF
ad2hBJdAE2EkvYe/A5pv84y2p1Tsazv/i4uCMFdyTaUpTDnhSKQnSOUSw8Fe
2APFPG7f2OBCVlI7/afdS5QqGoddCxFeXgRbbHaAivC01k5FYC4uMjvLi2SD
BUIZRd8agp/kuU1z9TduJvznqZ5ytmd3rFYV9i3JHZeU9NSUYwuQ91fvLKdn
Ch6z6el9OVWTOMRuTeJZEKKG0EGVRYqzM84u10RoC/d2mA4Pj6K/EshmuYQh
2hNWzI7FeCKi+/m/wIh5zi3VsP2Lf6MqoBsKL39l1ikNGhfyILOH+4lFPt9R
XRmVxXccl5hm90M/r6Ay9EJptgDWBiM9hlHnxz+gAiy4p70DT9Cpt2e+Q1mb
+vyIX7TbbByXKvNoB0bHWuZG+1D3rMdztVHyeg5fLjheVE1k3TihhtLij/sm
bRqjirFc+a089w/IqqmmLjP6UAdkX6mJxhVkg4VimBvCOT2q3u2090+oobe+
ZS/6PEYH0DsNNul9x9tUIZXzq//wTHDaunl3xvAglargU3TPcnBaREihgc7p
h8EZYRcxP7m9NLOzJr+7PLvrWUF3SXpn7s32s3+s7P7Ahi3aAyPwUi4hNk1E
CKJiqgHa8RyiBZhDhINzfY5Pf4As9kFb+eUvTtNJndE0Vk9weQDt9R7WlFBZ
weU5XXuzYQiiiNcwCi5VFSuuvEiwNmy8gpBoMVCtnN76lnXiBf7NBTzFtQlq
gsnbb7j6G6N54wdzxqEXw/R+dCnfdESZGLacjaZubx0YNa+6WvSEU5EafyZO
G9faXNrn0HAxYvLcRPeDeeOD4OHX/btdntDCTVdqIkndVOBnEneHd+8LgpEZ
qLN/yzs7tfvoBt3/P3ZyUn5n1bfj34N4qe9wfPkTWh7dP+xLy9h4KReR2OM5
SVQspe7J6FZ0mbcXYXNjf7h3rjSn/3wRFNf6KF0mrRhQd445tNqLcnR3pw0z
A5NtlSd6YGYmth2PaYvC9QIvhXckBFERNbfiuCE/DGbFa6Y++H/Q6zjoenb5
65NWUNuccD+i2Vyhg3ASCEmCfm9lble4qSARm1ZTH5XZYlu7oqabY2sT2WxT
XNkmrP7evZp7aA3bqm/h31bAcznT7fjgTdIj+uj7Hs1glO99Z1ovrxlKP5mO
ElhpHY1awud5UTmen9J1vmfyzdlQS1n/GpuNFELcCC+VU+iquiWGsMzFRWan
JJssAlVCg4VI30t4f8tiPJA+cX76I7oaOm4rp6iGPF6SVtWpxgs7RfG+hQtn
rDP+1Tg1BpqQGOMK89ERM+HdnW3X2ODCk4LBc61N7s12WfWgsXdiN5xwLsEt
k762sJv+o+orxvfDzxYOALsmCved8jM/lrGrshh2Cr6idsSXP7FahvDv0xjn
ZKPj3e+gfrmunueXvEHXghFN1khLkKwub0azv0KBy+UtpxmZp/nyg7nIp7KG
S6/ZWJhMnmK3N2ovv1TQRFjoVkhQVNZ+89dimPEhYg7XON76liM4uMQ7c/Xk
6Cu5YdBJnvSjRpEn8vDPI/EnCSPWW6eIMlOOWbYFy8DTE6S7O+7QzcW5dsPr
PUQPxCzSBgu8omeie+vW706oofe+a2vJBXN0mk6Dra3A/u7fU31XEn/t0So4
e1N2jZY+NJmMG/TPR6YyCD21urQ5OrhQUTR0rrUh/IfOp4PLY1NX9my57NNs
MY1LlRm04E/enU7zTHidKi8xF1H+9bCeP2gi2ms1bOd/QVmMr34ao7m1PCTh
qLzzbVIWvfsdV9+Ly00KSlkpTJWHPr4nAhzseR7nUWfHdUU9EZc/R0xF0wiK
KV3eGAq7tYlBeqcnnX8hJ+A4PnzTttCPfzcBL6WtIQN9BbaS/3BJlDgsWtWa
hocX5u0TJqumoHugXjE/pOJnw4Edkx5dbW+7MXRzca7dePXSiX7aHi/vN0B+
Ojxh0Tur3i296Xj72ydKhx59aVsZw77X+EtdG72c2fnRDy73Opilx2wiTEH6
yTTa9ARpc43qpdlxeWYa4QMsmTcmFBZpvbrs/kD6tfPDL3m32mTVgy9Hr5ZC
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
RJfIgycXfqHy8SYUtEy5jTZwRV06Gmdoj79SEEYTmY2Ogmxuh//EvvKinN6J
YZ3PJ9LrYy1R9xgOvDuTn5kP27U5JscuHK6MDM3FD2rdTh/tyaJEoInEQ3M1
VwdGsGYBSs6ja7jPXoQ/daDS7YL/STnCeJuCW2wIWpVL+abMnUvsfizzlRJ5
8ORS/XCErf9wpBK7xELYwkT+lUYSM1twgVEQUq2J1tc8VQ+Gj71TRn61+cb8
ppTcG5iZWAkERHRGrFu2kW9YktTSCrCk2Gz7ABmgott9aCsvPNBEImFpznx0
D7sW8i7XC9ZURcmayD4xQnqIoAamAAjjbUj1gMFqyiWmVTU9pJqQy+lN5NmT
hcftJ9m57Q86qK9BhZh1bOR0tAtJ7tUOcZYilBmp00Q+b6Ctboqso+3tzMEq
RjqJIT173eG5fJLdpWFm4+o4SiuI0erutpHJo+pbpj1rFAc0kRhgnNXJ/ayD
PX+owj4JZyWQVd5uibz2c4erRZvtIBsE8DaM9CA/KNp+ytmnrpnxtP2s6B7o
Wkzk2ZNFb/t89BpdGfyMkNZX0UVm5mDPEu2JIH9SoYmCwRAzduffr+GrnvMH
K/orurzz4XxsVW1P3uX64+9scmzU1TJL8TaZx+PPPN9Cvk9vuUCJKLB4zTM3
fuNkDTlWNhsdtOaMMoEmok7AH8y5zHX3m2nrp74qU2IL497+BmfJDcfNI/ZT
/2vb/yPrX79lefPLlt990fLbL1j+5yvWt7+7euS/1s6+5bj+rrMw3dNZ6Z9/
om3KLo60dvxPzCNc8kN/xwLtuSBzBPA2C7Mm9mjmnVLPPLUCC8RKMtlrszfP
tyTy7EkhFApdTWMbYSS3KQlsU+P7H9/CeM65WlJ2QwwHB/ImyZoo9GhmYuX6
6Sa+0knbV9ZU0P50ey/H5NhAZXfuhXqS+xGxa6cbqdydZ2KMO9GyKozV5LYI
logC24WtDKhIBkvG2WY/dmsFBJqIMqFHFQVcK5OGvDbq6zG55psedFXnrqX/
w/Lnb5h/+em4jFFMjHpyFV/zjoY3tVKhiRgrzmB/5tKP1aEqVEoRwNt0tcyy
PyVpNdQnP2OzrVyHGpNhLZHHT5z5KSP5MpqeIeovR/a2wf8Yh1QnojswhTki
umImS5KoifTq1dxrHXx1c2xPWVl2s21sZPsJYBsfZf41Et9G7EFun33VlfDz
xUooGGI+kXw683tHsRonbBvju4u+cu5YufLBsGCzBYhTEzG6eHJE9+B239lD
1TfONBXe6m2rm9JrVuWXht3XvkBm/v3LDTs6K2lc/1kY93bXrOeeWj30hvnX
n4tXCm1iv/rs6pFfuCpv+eeTn+2j7+c06eighvaMkDMCeJvSvEE28LjRSH8h
LE745scvHWFLCdWVjiby+ImTn8Xeb8o6LQrBqEBrLeJSAiZH9XTng7xJiiZa
tTqL7w7wFQ1jeen1KwNx5OWaR4YLrjQ8ccC0v6KjYSYgQIn+0KPq4hHyuXcv
1Yvh9Bzm3yyWe+J/WZgout5IBm58SJvyqQIeIypNFAgEZycMJXkDpw5Ubnpd
8cL7NVUPhle0Mul8tzBrIolbV49Xrz91BB/LOhKV+Sb7nfkXrP94fRuBYzr2
C1PGO6aC48aGDGNbrrG30Nh139iea6q8bMo/ZrrxD9PBH5v++trT/2Hk2Z15
Z30zSb4nknc52q/hTBMqvaQOAbzNrXT2gmr7Q7H0ImwpZHeYzxysotioyGZx
kkweVU0P9deiTGMi0usnq9l7KO/XuN0od5kqEtREXq+/vnzsxN5yfgSSmVYz
177L5Pbp1v7Lx6qeSKU71ahdsib1oTfSVj9NPu7m6dqn0/xgtGzHWG59eiz9
aBW5j2ZFvUpBEIMmCgVDjDqoKFQxMcOmUohvkYmUe7Vjac6c+EdThAlRzhxi
n/fMgXLT0DD1RZqIeUe71q7us/z3P2+ig37zOdPRN4xFacaJGoN1zGAbj8kW
201VV0xn39ygiZh/sP7hFdfDK/7kJQAsdnI7gYwqpz01ZIsA3ubcYTbgHGvo
pb4oImblNSqieBBZWzIa+Q7nDlZ65rBXnBzbxSaVumeQiNPKQhWt+SB7EtRE
lUUqfuBx6UilqrYnwawzZt21P+gkdVciOXiM8krRhZHBrkXyQVeOVa9NoKaK
xEzTN0SybTPPNYut97csoamJQuHuzzUlI+eP1DytfY6/Ez6hrslt6S3rKrzW
ePV4NV8TsQfB1zvNBkkW5fB6/NfPNBGvONvav9Vvq8gPhhjzjnc7rr/7tBoy
/d+/mm68bWzPNRgGYtVBm5pJZWzMNB39zw1/3370197hpBUTvnWWLeCcc6Wd
9uyQLan2NsyyIg5E1y+i+zL50cyZ21fpzC63y0cO3xvvt1N/IbKxiH+O10Uz
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
TcE42xFBR8Yjgk6jWkm7S0GuQUTFsLbVesz2CZFfPcCfcXuFQWebTsqQ7TeW
Z9Bxt1kCNpilPbr0v1X7dzsFy2WcVk4RG8UozHDhu47KlurDbxraykIwO7BI
zKrjlKXRPKf2rA+HK3tIpzxhiig8WCj28kzWD6w/yaoo4K74VXuB0EQ4YK2i
gsPwK+8SG7nBBdSY6rSdIu3BeoFphyS1j9pdDohjrzRXFfEGB+a3WEAdoYnC
EIaGR+qovYgmgm/+pJzs3shACE0UIox2qI69bXdgjrzldl+3pQQVQTcW0gi6
pUUDmq96g1qY2kteRbo15SS2r7o7Kgo62zQ/7bf9xuaiTtzNlsCz8YGV8kR0
8qOVvm78AAkb8bffMIRqACq86nhW+3evlCf51K0+EBjHpLN9QiGFR69kNhZ2
VmczStNoJalUoH3q8zqoT5jsejZQQGMsgUYygJ0IcoGNaiQ0XtJ1hzJKu0NR
zPocRxcRmmgrwTLSr4077FjPh96AOorwt7KtCKjiriPN+cq33gTfBiqO5IMD
9N6sB2Q3GyY3yeR68dyUJgTV/kMwCE3kJUKzn2MZE2vTzzt5FLkXiASiMAH6
5E599hOzzHV/Rj8qRRqfZYYwgk6nNWbF0RFN1F3HxmXxT/f0Izw5KJpbf51B
Z5snj9i2X9dVE+RbJuAb5DID5Ynm/Odo7lKd+hfUlkPU3fUMmJxtyxGwWZk2
7ZytkAsuCJ9jC9WAuCjFUdw7MaZ1Wq72jy62jJcSPrOzHmYhU3PpG6KiQoig
kcL5l1HVn36xjIpCsXjkg3JOf3NRp0v2H4K6sj5O59jkuMpkDIsCvH6MyNJE
/k1r+NTt9wyzoANIfnThSoj6CH/rI7AGp2hGQETRPwEN6zKJY92oGnS1okCM
y8uxsmzKSXSkCdAqukO2qbseSLPIvJSO9YkAQWebrHj7yZSwzVP8AAFMYeZR
lu786aSGovZa20kvCHC32cgAvx4+8S5CL4s3fl2/3xIaeH7NhdgnN08MUsoc
J+8J11tmp3zoIBkOmii4vkfYaiJjV736+HtERYWQQiOBHzq6G2jvH3g2IQnd
jI9JxTReRQYd6YG4HsAtaawQ9HZPzEyqLR4bF4bVIDRRmEDfmKs+vM/BKhc+
h2Rt+NsdgXWAHl9zEFHi8Wdy1zpL6GbQI1JFIPa16TCsmPNQXULaypg4CqJn
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
GheYXJHgO8gd7V1k1+x4DzZzog0dqcK9E8A4xTBjeLpSAIi5FV/SOveqwlaX
bjpV22bI+hybb2dImBd7Pm2ovE0Oj8b5wWt7VQn7azQrCOEeBlxGz0+jDujQ
wYS3cbsOUu90x8MYMqIdIvUWnhRKDg84cbi/tUHemknaJpj44o7BZlIlMu6v
UVIJc4yqHsrY+tfsoic0PFidtiSZuHyseTwOex/xHv5zorH+JeJWLr2XTacR
bbQJy8h4oPg6fMtlnyaVIfNT8BAs8Zf2VxmfQSOsHCFq/m9326wcOq/jPtjM
iYZEPhXulIA02zmSEXDkY3CUOo1dWA5uxkFuYiiJxdZG2HA4ujFDyofU377z
4H9dSppj42bUAU0HmPA2ilmiRTExtpOhOxE/HGocAwlIv0AdzrejB55XeHYG
pHf9D2kNjS7VhPnzdwhz++KdCNdV8EOF0Oi7Ezd9+LpjqCX8Z6vsI7NsrhVk
8g7+c6LG8mnvcxZV0zncGTo5Fa7gL2JwUmqIeV+PyeCbLQxiBoUx+RKZFqVe
2dcxq/2+rVYm+2Zv9Xao2LU8foPNnKg0awSpcEcSnZOi7Tv/czwb+sHRCPv1
cbZ9zmC54fO3yTq6K+84+utp/KYb0/OoAzp8MOFtqgqIFKD5MYQWRfeapi63
H+wNrfxFOF8wfKhlz8GHUfQx0Fq1pt659zdg7NhUI/R4A2aoM9MMbotMn9Aw
n9G1ps2PJ8rLqwvHUVdROPCfE2U/IiaczvfAmQnOEDmUE+k0lngyEdAru6Ab
LExiMmPcX8HTsBbdYfr5A3moxBuCHbONXePjMVjLifZ2nWSx9CRS4eY33Ytz
uwWxxg9eO14p95l+eQiaz3kqMcT9jZKdvUZj+/M+tQM6F3VAhwjavY3JsOeN
AfB1WRqBMJnd+9vBnMSU210G/W443zEcOBzu7Dix95OUpfUyMY7EWvaQbA2o
i4MfacDm0dh6Xxmh+eq7Lnm4lw6K3mnwotQtYbD2UgTAT05kt7nAQ34Bb4Zp
JPF0LmZvf0zGBo0J0E0VPl9KDddJJV5b8xmjn2mkdVGdfpvoeO1smGfd/vgK
1nIiUOKCVLj5TZ3G3lNl/uJfj10P3fkjJuuA73NMKkN9HPWD7RbeDLa96Lxz
NjzkBq/RZ6vGcKwmakG7txkWL3jXK+teF2vqCqd3y/NZWZKvUKEwdRCW1A/Q
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
3mZ4JjBLu2g3n/VXlj3JtYWasYR3GJVHhbVPfGRDs7PpHqaXfg5/IjktQnro
HRs5fYQTIhyzMVRjagI4W1FF+0w8Ijs+4lGeY2YUXbxi5mB61t9G5S9JSY0g
REe4uiJ0+H2TS6nLRhScQD4Xt77osHSv7XelFzaJ6Y9DghOZIaw3FYmafQlx
5O9dppavLoPGsYHmBtbteNJ6p6f/RcseuuSzaORRdwm4hXN/xcgk2Vpa714J
1gt7RcWBERBqguL4J7MMec9KzePTri8ZGXhsSVcpgLizRNxJFHUSRJ1EYWex
kFsEVI7fUajqq573drNjTsTjmv/FVTbLH58j0YeQvLumi/lN+SD4Nx09yFtM
YQzSJu+jIU15SGWC4slxxeVt9o1vADP6/VM9KeXlYOeLWEuntry0RjfDDPcF
+yjFCqmS3dOcZJ7VnpMr5b96TDDdpJwQ/UeX1f69LD9u+fPybyrarnKG8qQq
P+Tl4pwoLGHRzBOzY4ndy4V3vpdQo3yKmWvjJKRbsvjfkWvfKw7bd/syA9m9
nH1mWemDpfFZS1NpX5NbLrXysoQKp/zdoRKKlM113U8sR0gowoXsWSGM3Suu
nXWe5b67WFjexvL4N3ehpxd4G8rdpU8L19AqDwmY/mRDKMTRK49EFi97EbvU
HBaaR2K6H40TIhxzAKyVSTzSddrxy0u2dyX/+DsD5z/su7WpL2YHL+2wsOCS
uCISWLGw9FZf2sHuh1t7Ln7AP7JK4fxtKDywnH37Uzb5klDeEOjHESoac6t/
BgF/YnrE0CHbLiVy8hMJ5b5rdxFsv9FHU0QdnL1rulLz5KzDS0aaflZ1/ZXH
hNV2vAYw0+zSr2qov/fV3Ec7AVFtrKA2Zqjm0WBNdH9NZF/1/XbGtYqKvU8I
a+y+gVxzUsdrsRGiGgKsSGOaN2IU5iqKA2Mo2AgxUnn0Q7Suqn5drYk7N85t
sCfUg5yWpigXR8m2HImStS+oOxl1F7vakrX9ji/eohPkjLVETdxfpitCDvdb
jn+iSDhrOnqWeHbcYKqSVHhfeX6r3ReOXP2prdjCie6cJ02MT4ZTlCJTd3QL
S6s4t7MZu6IIK2e5lMIlCZkRBTER1NtLm84v6/t9mfS3+Y573KNI9VeWga9F
7wzbNnOKV2TSd1A5N/rEeO8zHDZ0CUmWPMyiJQWPwTvdsWpJyPfFDPciasCD
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
x/B/TeM9i8yGrK6Bs8M/FDU9Ni0b2lW3bmykjPiz58ISrYgOPcy90t7enSL4
m1qQc5TiG/ivMKMxFNzobv1bJsXoAkOl0w7LGQpX+nQ/5O720PVgPGc/n5oW
4RAdAbMfTTfAOvgrzZbfJ4ic1UYjuNv/zgmRb+AH4i6pcnMMcHtzzsY3SE++
thAtJ2KJx4TnPWw1T+WkKC5sbgvZe0/3bPmm+vZpmQv7Xw62/rb7cmG2teks
roHe0ZIjXe/ObHP23ZG1XbovQ45e4k+dG9M5j7/Ovcyu5g8QCwmReZRCWzst
FfcLsxtz2d2BCyWzzjVt6/b27LBwd5HSxqpZNGDO6efMAMYrKHhoLl1LmVtJ
u4a2LHz1OLfzyGbNpN8HLSJztdECTIy2HLxPn66BBhXKqfl0/LIemx+Rnnxt
IWZOlHCcCfuxF/lt1qPPo2mR9OYyna7veGdn7ZqZiczO2jsPt7/Zdalwjp2j
QfN47xVbc+/ovoa+v5WcenpHzeqZv6SwIa9Htz1o6yL+pLkzT+e/+Oy+9ln0
SpuG/KMUdsp8ul1c+Zf0Vsud7tYtnp7t7va/u5rfdza+xS3HCc1SkRfWN+X6
E2YMI+yOzeZ6mjqZnCPLfHPf2bQ59fKU3MFGhqRfBi0if7XRAmxwrs9fxod2
pF1YvabjFvTsR54jPe2aQ9yciIWJhm21T/NrrfWvoPMgEQvZey8M5Ve1bJq5
bZS+c3T7d8fu+aHhvvzjed8d+wWbLm2vumXWn0zbLYeaXxq9vJ/1WeJPl1ML
DJVxjdIsB9ZpvBXRrCglSokFrc7GN2dmPXMZ+2UUGjsqWS2FjJl6YbPqUdqu
1v1ZiSzDnChRDjddasPb+3+kXwONohS1UT2CSy4/8g18T9yL5WwLvlIRuLif
v71oPE16zjWH6DkRSzwSELaVZ2MS1UfRcja/tXPgwrcHTz//dfX8Kc+cqdDe
xl+39302bjpJ/FkksLC+ybjnlvQhgZsj0l+uVwLKilIoU7N5xtG4KVawzFG/
KXS1Xn7ZUBomJkzuHHUvQVRzasmQRtCndXmccpF+CTSKstRGxTCxCUtFHn+C
brbGKzChgCzgD9qqU40YLJUP4MS+9OQiJ7o2Wb/RUrGB+wYfP/VHfIMTN6+l
tUe3vbTpqevtByU6DZU0Pnqy64Ph4T1+awfxTy6Z0bZuy4H16fd2Sdh4SkSn
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
vmY5eJ9yFcnZ+Cb3IIGhUtLjChYO1Eb1uNu3Eq9+ucicaLJkxJJULFf9OGq5
KBTkRGSJBkyWA+uEQYji1mZzarS933bkWT5trH0aCZEcQJSiYjxnPxd63IRd
jvvX85tv4Ad+C75xMyqxKBqojfphYsLql67mD4lrSFYWGq0xFK5InwBczcZ1
pAcULBDkRMSJ0x6b4KaMseR/VHDTUBRL7BAJjsyx/8xEQqSnCyRAlKJmmDib
Rwhyijdke9txVgvrG41FP9GnOsHdHZ/wkx5QsCigNlogHglaKx/gK6L07iSu
JBkaZWox7VvDXSOibV2kxxIsHOREcoCJUc4Tv+fTosKV/vOFC/bQxWwBy+H2
UNJoWzfXen5yM/oJVjNJTxRIgShF3TAxWrgc4W7/ZJHuLJmw0PY+y4H1fPFt
Rz/psQSLBWqjEWJBqzC5CAyVE49DMhCcXmEqF7xUQXoUwaJATiQXmLin8wu+
RncqDlnI8qwKciLK0iFszGqtegyLvbICUYrqidMes+BYr6dr22I8Wiph0Tka
XuWvOet+ID2KQASgNtqB9WKu+mUixbh8mHg0Mq+O6Rz1r/AiefZz0uMHFgty
IlkRGD5gKLiBrydQt1G5d5wXbJTxtLnsl8KiCtghkhuIUrRA1Kc37r2d/8bv
/oq4OMxv7va/C8TzpWtMnPQQAhGA2miK8NXjXLECY+EqNiiax+UlXsWd9te5
2wSlIRpeQcNEFYCcSG5Qlg5j8W181YUD68P6RuLBhmQ2mRX+mNeZ+k0ouy1D
EKVohAnHAHc3Z3Ih9AviEjGXeTo+FRSrWR+nvaQHD4gD1EZrBC7u53zZsHs5
+69zeT3Bky1+3S4ud7NU5GHlVh0gJ5IhUb/RIjihatxzyzyaoCLTJaKagqXc
g4+ffpeJR0nPBpgFRCnagbb3GffczKdFHZ+SForpxn5C54nXecEsvi3q05Me
NiAaUBsNEhw+yGUchoIbA4N7iOuM0IIj1Vw/aOPe21FoTjUgJ5InTDQs7K+R
uF7UtlVZ1Z+yMsrSYT/ynPB5PV3bUEFXtiBK0RSshxqLb+UXK868nzstmrnw
O/9SMGVutR56ULCCdDNt6yY9YEBMoDbaJDRSo89fxpVc8J/LJx6oJG3ydN+P
uA+GQnNqAjmRjGF8/f/hlkoSpQaqn6CMp4kLgugWHKky7fupcF8srD9BevDB
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
5v8DpNJYEQ==
    "], {{0, 1102}, {1116, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{558., Automatic},
  ImageSizeRaw->{1116, 1102},
  PlotRange->{{0, 1116}, {0, 1102}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7801401244580593`*^9, 3.780140133352943*^9}, {
   3.7801401772812557`*^9, 3.7801402177429447`*^9}, {3.780140260527872*^9, 
   3.78014031714126*^9}, {3.7801403577977543`*^9, 3.780140617781713*^9}, {
   3.780140792904443*^9, 3.780140930613261*^9}, {3.780140993205948*^9, 
   3.780141085535581*^9}, {3.780141559865253*^9, 3.780141616509564*^9}, 
   3.780330697392988*^9, 3.7803341615784082`*^9, 3.780336811886834*^9, 
   3.782464217487348*^9},
 CellLabel->"Out[3]=",
 CellID->1465549173]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Deletable->False,
 CellTags->"Source & Additional Information",
 CellID->318391102],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributed By",
 Cell[BoxData[
  TemplateBox[{"Contributed By",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
       Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
       GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", Deletable -> 
     True, CellTags -> {"SectionMoreInfoContributedBy"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Contributed By",
 CellID->127820888],

Cell["Anton Antonov", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  TemplateBox[{"Keywords",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
        "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
       FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], "MoreInfoText", 
     Deletable -> True, CellTags -> {"SectionMoreInfoKeywords"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Keywords",
 CellID->547400482],

Cell["Anomalies", "Item"],

Cell["Outliers", "Item"],

Cell["Regression", "Item"],

Cell["Quantile Regression", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Categories",
 CellID->749076926],

Cell["Data Manipulation & Analysis", "Item"],

Cell["Financial Data & Computation", "Item"],

Cell["Machine Learning", "Item"],

Cell["Scientific and Medical Data & Computation", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Symbols",
 Cell[BoxData[
  TemplateBox[{"Related Symbols",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List up to twenty documented, system-level Wolfram Language symbols \
related to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedSymbols"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Related Symbols",
 CellID->161079978],

Cell["BSplineBasis", "Item"],

Cell["FindFormula", "Item"],

Cell["Fit", "Item"],

Cell["LinearModelFit", "Item"],

Cell["LinearProgramming", "Item"],

Cell["NonlinearModelFit", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  TemplateBox[{"Related Resource Objects",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
       GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
       RoundingRadius -> 5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Related Resource Objects",
 CellID->588449267],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->960273585]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  TemplateBox[{"Source/Reference Citation",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Source/Reference Citation",
 CellID->642091068],

Cell["\<\
Anton Antonov, Quantile regression through \
linear\[NonBreakingSpace]programming, (2013), MathematicaForPrediction at \
WordPress.\
\>", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  TemplateBox[{"Links",Cell[
     BoxData[
      FrameBox[
       Cell[
       "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoLinks"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Item",
 CellTags->"Links",
 CellID->521525586],

Cell["\<\
https://mathematicaforprediction.wordpress.com/2013/12/16/quantile-regression-\
through-linear-programming/\
\>", "Item"],

Cell["\<\
https://mathematicaforprediction.wordpress.com/2014/01/01/quantile-regression-\
with-b-splines\
\>", "Item"],

Cell["\<\
https://github.com/antononcube/MathematicaForPrediction/blob/master/\
QuantileRegression.m\
\>", "Item"],

Cell["\<\
https://mathematicaforprediction.wordpress.com/2018/08/01/a-monad-for-\
quantile-regression-workflows/\
\>", "Item"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tests",
 Cell[BoxData[
  TemplateBox[{"Tests",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Specify an optional list of tests for verifying that the function is \
working properly in any environment. Tests can be specified as Input/Output \
cell pairs or as symbolic VerificationTest expressions for including \
additional options.", "MoreInfoText"], Background -> GrayLevel[0.95], 
       FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 
       5]], "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoTests"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Subsection",
 Deletable->False,
 DefaultNewCellStyle->"Input",
 CellTags->"Tests",
 CellID->74308299],

Cell[CellGroupData[{

Cell["Data", "Subsubsection",
 CellChangeTimes->{{3.780337381976864*^9, 3.780337382381323*^9}},
 CellLabel->"In[1]:=",
 CellID->703442214],

Cell[BoxData[
 RowBox[{
  RowBox[{"distData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "]"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", ".15"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", ".2"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7803332428062277`*^9, 3.780333243672048*^9}},
 CellLabel->"In[1]:=",
 CellID->1337665581],

Cell[BoxData[
 RowBox[{
  RowBox[{"distData2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          RowBox[{"x", "^", "2"}]}], "]"}], "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", ".15"}], "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7803332428062277`*^9, 3.780333243672048*^9}, {
  3.780334830771914*^9, 3.780334836125193*^9}},
 CellLabel->"In[2]:=",
 CellID->318624977],

Cell[BoxData[
 RowBox[{
  RowBox[{"finData", "=", 
   RowBox[{"FinancialData", "[", 
    RowBox[{"\"\<GE\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2018", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2019", ",", "10", ",", "15"}], "}"}], ",", "\"\<Month\>\""}],
       "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780126372841868*^9, 3.780126407839984*^9}, 
   3.7801303725160313`*^9, {3.7803307265959997`*^9, 3.780330747725911*^9}, {
   3.780333365849011*^9, 3.780333366715065*^9}},
 CellLabel->"In[3]:=",
 CellID->684581104]
}, Open  ]],

Cell[CellGroupData[{

Cell["These should pass", "Subsubsection",
 CellChangeTimes->{{3.780337390515078*^9, 3.780337401262828*^9}},
 CellLabel->"In[4]:=",
 CellID->2118918720],

Cell[BoxData[
 RowBox[{
  RowBox[{"probs", "=", 
   RowBox[{"Range", "[", 
    RowBox[{"0.2", ",", "0.8", ",", "0.2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.780333283769102*^9, 3.780333285218656*^9}, 
   3.780333361587926*^9},
 CellLabel->"In[1]:=",
 CellID->418441983],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData", ",", "12", ",", "probs"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ListQ", "[", "qFuncs", "]"}], "&&", 
  RowBox[{
   RowBox[{"Length", "[", "qFuncs", "]"}], "\[Equal]", 
   RowBox[{"Length", "[", "probs", "]"}]}], "&&", 
  RowBox[{"Apply", "[", 
   RowBox[{"And", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{
        RowBox[{"Head", "[", "#", "]"}], "===", "Function"}], "]"}], "&"}], "/@",
      "qFuncs"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.780333283769102*^9, 3.780333285218656*^9}, 
   3.780333361587926*^9},
 CellLabel->"In[2]:=",
 CellID->1845770328],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.780333370608033*^9, 3.780334163060707*^9, 
  3.7803368134543257`*^9, 3.7824642196148376`*^9},
 CellLabel->"Out[3]=",
 CellID->667603642]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VectorQ", "[", 
  RowBox[{
   RowBox[{"Through", "[", 
    RowBox[{"qFuncs", "[", "0", "]"}], "]"}], ",", "NumberQ"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.780333296233062*^9, 3.7803332972002077`*^9}},
 CellLabel->"In[4]:=",
 CellID->644631377],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.7803333706162033`*^9, 3.780334163069642*^9, 
  3.780336813464614*^9, 3.782464219621793*^9},
 CellLabel->"Out[4]=",
 CellID->1959839166]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "2"}], ",", "1", ",", "0", ",", "1", ",", "1.5", ",", 
       "2.5", ",", "3"}], "}"}], ",", "probs"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ListQ", "[", "qFuncs", "]"}], "&&", 
  RowBox[{
   RowBox[{"Length", "[", "qFuncs", "]"}], "\[Equal]", 
   RowBox[{"Length", "[", "probs", "]"}]}], "&&", 
  RowBox[{"Apply", "[", 
   RowBox[{"And", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{
        RowBox[{"Head", "[", "#", "]"}], "===", "Function"}], "]"}], "&"}], "/@",
      "qFuncs"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.780333308372953*^9, 3.780333338264555*^9}},
 CellLabel->"In[5]:=",
 CellID->221286964],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.780333370660643*^9, 3.780334163147977*^9, 
  3.780336813521715*^9, 3.782464219692523*^9},
 CellLabel->"Out[6]=",
 CellID->912685276]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "2"}], ",", "1", ",", "0", ",", "1", ",", "1.5", ",", 
       "2.5", ",", "3"}], "}"}], ",", "0.5"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ListQ", "[", "qFuncs", "]"}], "&&", 
  RowBox[{
   RowBox[{"Length", "[", "qFuncs", "]"}], "\[Equal]", "1"}], "&&", 
  RowBox[{"Apply", "[", 
   RowBox[{"And", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{
        RowBox[{"Head", "[", "#", "]"}], "===", "Function"}], "]"}], "&"}], "/@",
      "qFuncs"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.780333338984624*^9, 3.7803333435628223`*^9}},
 CellLabel->"In[7]:=",
 CellID->1283738496],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.780333370713085*^9, 3.7803341632225847`*^9, 
  3.780336813584816*^9, 3.782464219768915*^9},
 CellLabel->"Out[8]=",
 CellID->74394904]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{
     RowBox[{"distData", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "12", ",", "probs"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ListQ", "[", "qFuncs", "]"}], "&&", 
  RowBox[{
   RowBox[{"Length", "[", "qFuncs", "]"}], "\[Equal]", 
   RowBox[{"Length", "[", "probs", "]"}]}], "&&", 
  RowBox[{"Apply", "[", 
   RowBox[{"And", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{
        RowBox[{"Head", "[", "#", "]"}], "===", "Function"}], "]"}], "&"}], "/@",
      "qFuncs"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.780333353553215*^9, 3.780333354485847*^9}},
 CellLabel->"In[9]:=",
 CellID->1810221430],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.780333370768896*^9, 3.780334163294676*^9, 
  3.780336813642633*^9, 3.782464219841107*^9},
 CellLabel->"Out[10]=",
 CellID->519668974]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"finData", ",", "12", ",", "probs"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ListQ", "[", "qFuncs", "]"}], "&&", 
  RowBox[{
   RowBox[{"Length", "[", "qFuncs", "]"}], "\[Equal]", 
   RowBox[{"Length", "[", "probs", "]"}]}], "&&", 
  RowBox[{"Apply", "[", 
   RowBox[{"And", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{
        RowBox[{"Head", "[", "#", "]"}], "===", "Function"}], "]"}], "&"}], "/@",
      "qFuncs"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.780333432295332*^9, 3.780333433465783*^9}},
 CellLabel->"In[11]:=",
 CellID->1686310410],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.780333434021509*^9, 3.780334163368786*^9, 
  3.780336813700531*^9, 3.782464219911933*^9},
 CellLabel->"Out[12]=",
 CellID->1146825728]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qFuncs", "=", 
   RowBox[{"QuantileRegression", "[", 
    RowBox[{"distData2", ",", "6", ",", "probs"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sepPointsFractions", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "f", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Select", "[", 
           RowBox[{"distData2", ",", 
            RowBox[{
             RowBox[{
              RowBox[{
              "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "<", 
              RowBox[{"f", "[", 
               RowBox[{
               "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "]"}]}], "&"}]}], "]"}], "]"}], "/", 
         RowBox[{"Length", "[", "distData2", "]"}]}], "//", "N"}]}], "]"}], 
     ",", "qFuncs"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"sepPointsFractions", "-", "probs"}], ",", "\[Infinity]"}], "]"}],
   "<=", "0.01"}]}], "Input",
 CellChangeTimes->{{3.78033456425807*^9, 3.780334590908477*^9}, {
  3.780334820007038*^9, 3.780334824112279*^9}},
 CellLabel->"In[13]:=",
 CellID->109706185],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.780334820949189*^9, 3.7803348420775023`*^9}, 
   3.780336813979949*^9, 3.7824642202172832`*^9},
 CellLabel->"Out[15]=",
 CellID->945764187]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["These should fail", "Subsubsection",
 CellChangeTimes->{{3.780337374731659*^9, 3.7803374066819563`*^9}},
 CellLabel->"In[16]:=",
 CellID->615134506],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{"BlahBlah", ",", "43", ",", "0.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.78033740920078*^9, 3.780337452548905*^9}},
 CellLabel->"In[1]:=",
 CellID->734024638],

Cell[BoxData[
 TemplateBox[{
  "QuantileRegression","nmat",
   "\"The first argument is expected to be a matrix of numbers with two \
columns, a numeric vector, or a time series.\"",2,1,8,32626005501538997296,
   "Local","Global`QuantileRegression"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.7803374310052567`*^9, 3.780337452835198*^9}, 
   3.782464220228619*^9},
 CellLabel->"During evaluation of In[1]:=",
 CellID->1932219462],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.780337431013502*^9, 3.780337452841209*^9}, 
   3.7824642202295637`*^9},
 CellLabel->"Out[1]=",
 CellID->564787900]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{"finData", ",", "0", ",", "0.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.78033740920078*^9, 3.7803374654302998`*^9}},
 CellLabel->"In[2]:=",
 CellID->380599863],

Cell[BoxData[
 TemplateBox[{
  "QuantileRegression","knspec",
   "\"The knots specification (for using B-splines) has to be an integer or a \
list of numbers.\"",2,2,9,32626005501538997296,"Local",
   "Global`QuantileRegression"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.780337466560589*^9, 3.78246422029707*^9},
 CellLabel->"During evaluation of In[2]:=",
 CellID->512515560],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.780337466568478*^9, 3.7824642202979116`*^9},
 CellLabel->"Out[2]=",
 CellID->292108803]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{"finData", ",", "12.2", ",", "0.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.78033740920078*^9, 3.780337473148074*^9}},
 CellLabel->"In[3]:=",
 CellID->729311389],

Cell[BoxData[
 TemplateBox[{
  "QuantileRegression","knspec",
   "\"The knots specification (for using B-splines) has to be an integer or a \
list of numbers.\"",2,3,10,32626005501538997296,"Local",
   "Global`QuantileRegression"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.7803374737722597`*^9, 3.7824642203051357`*^9},
 CellLabel->"During evaluation of In[3]:=",
 CellID->325034979],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.780337473779179*^9, 3.782464220306058*^9},
 CellLabel->"Out[3]=",
 CellID->1811977732]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{"finData", ",", "12", ",", "BlahBlah"}], "]"}]], "Input",
 CellChangeTimes->{{3.78033740920078*^9, 3.780337475230391*^9}, {
  3.78033754646863*^9, 3.7803375786894693`*^9}},
 CellLabel->"In[4]:=",
 CellID->1649473428],

Cell[BoxData[
 TemplateBox[{
  "QuantileRegression","nprobs",
   "\"The third argument is expected to be a list of numbers representing \
probabilities.\"",2,4,11,32626005501538997296,"Local",
   "Global`QuantileRegression"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.780337562178302*^9, 3.78033757909164*^9}, 
   3.782464220376401*^9},
 CellLabel->"During evaluation of In[4]:=",
 CellID->444143617],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.7803375621846952`*^9, 3.780337579097764*^9}, 
   3.782464220377289*^9},
 CellLabel->"Out[4]=",
 CellID->68613947]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{"finData", ",", "12", ",", "23"}], "]"}]], "Input",
 CellChangeTimes->{{3.78033740920078*^9, 3.780337475230391*^9}, {
  3.78033754646863*^9, 3.780337581637171*^9}},
 CellLabel->"In[5]:=",
 CellID->639096797],

Cell[BoxData[
 TemplateBox[{
  "QuantileRegression","nprobs",
   "\"The third argument is expected to be a list of numbers representing \
probabilities.\"",2,5,12,32626005501538997296,"Local",
   "Global`QuantileRegression"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.780337568247491*^9, 3.780337582122189*^9}, 
   3.782464220384035*^9},
 CellLabel->"During evaluation of In[5]:=",
 CellID->2143372437],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.780337568253289*^9, 3.78033758212857*^9}, 
   3.7824642203849773`*^9},
 CellLabel->"Out[5]=",
 CellID->1769853881]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{"finData", ",", "12", ",", "0.5", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "2.6"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78033740920078*^9, 3.780337475230391*^9}, {
  3.78033754646863*^9, 3.7803376282321*^9}},
 CellLabel->"In[6]:=",
 CellID->849536809],

Cell[BoxData[
 TemplateBox[{
  "QuantileRegression","norder",
   "\"The value of the option InterpolationOrder is expected to be a \
non-negative integer.\"",2,6,13,32626005501538997296,"Local",
   "Global`QuantileRegression"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.780337628610415*^9, 3.782464220453577*^9},
 CellLabel->"During evaluation of In[6]:=",
 CellID->1811055761],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.7803376286164503`*^9, 3.7824642204544487`*^9},
 CellLabel->"Out[6]=",
 CellID->2128446196]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantileRegression", "[", 
  RowBox[{"finData", ",", "12", ",", "0.5", ",", 
   RowBox[{"Method", "\[Rule]", "BlahBlah"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.78033740920078*^9, 3.780337475230391*^9}, {
  3.78033754646863*^9, 3.78033764276728*^9}},
 CellLabel->"In[7]:=",
 CellID->1897572783],

Cell[BoxData[
 TemplateBox[{
  "QuantileRegression","nmeth",
   "\"The value of the method option is expected to be LinearProgramming or a \
list with LinearProgramming as a first element.\"",2,7,14,
   32626005501538997296,"Local","Global`QuantileRegression"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.780337643142665*^9, 3.782464220461095*^9},
 CellLabel->"During evaluation of In[7]:=",
 CellID->12624446],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.780337643148843*^9, 3.782464220461973*^9},
 CellLabel->"Out[7]=",
 CellID->1725666516]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Author Notes", "Section",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Author Notes",
 CellID->795110225],

Cell[TextData[{
 "The workflows described above are simplified and streamlined with software \
monad ",
 StyleBox["QRMon", "Program"],
 ". "
}], "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.7801345919961653`*^9, 3.7801346266116457`*^9}, 
   3.780134690549343*^9},
 CellTags->"TabNext",
 CellID->567921317]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Submission Notes",
 Cell[BoxData[
  TemplateBox[{"Submission Notes",Cell[
     BoxData[
      FrameBox[
       Cell[
       "Enter any additional information that you would like to communicate \
to the reviewer here. This section will not be included in the published \
resource.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
       20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5]], 
     "MoreInfoText", Deletable -> True, 
     CellTags -> {"SectionMoreInfoSubmissionNotes"}, 
     CellMargins -> {{66, 66}, {15, 15}}]},
   "MoreInfoOpenerButtonTemplate"]]]
}], "Section",
 Deletable->False,
 DefaultNewCellStyle->"Text",
 CellTags->"Submission Notes",
 CellID->843283583],

Cell["Additional information for the reviewer.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->"TabNext",
 CellID->920818074]
}, Open  ]]
},
WindowSize->Automatic,
WindowMargins->Automatic,
TaggingRules->{
 "ResourceType" -> "Function", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "1.2.26", "CreationTimestamp" -> 
  3.782496402348067`16.330353512784157*^9, "UpdatedTimestamp" -> 
  3.782496402348149`16.33035351278417*^9},
CreateCellID->True,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, 
       CellTags -> {"MainDockedCell"}], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       Background -> RGBColor[0.996078, 0.941176, 0.921569], 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CellFrameColor -> GrayLevel[0.75], CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, False]]]}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.07142857142857142], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+HJQe2D6J0DtQTGfgR1u/wOo
Opj7HqCZ+wDNXhgf5i6YfpTwAZoP8xfMfpi/5dDCAWYPAFLnobw=
               "], 
               CurveClosed -> {1}]}, 
             JoinForm[{"Miter", 3.25}], 
             Thickness[0.049999999999999996`], 
             RGBColor[0.627441, 0.627441, 0.627441, 1.], StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6
eve8lMPjwkBdpVlKDtNeMcWlaUg5bLCT+/XumZKDfHH3s3cNkhD1xsoOydvP
axnrSjrM0+V9eXcqgi+2tCUhlFcFzu+V+XP9TIsKXP8jkPnPVODmg9UbqsLt
97yxfXJHjSrcfWD3LFJ1gLkfxn9jH7F5d64snA9Wby4H139K1mzizNtyqObX
y8PtN2iZ8/3/RXm4+2B8mPthfJj/YPph/oeZDwsfmP2w8IO5Dxa+6OEPAGHh
sd4=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOB35VvNh9m88Bxo+YItQUGsrtcErW
bOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfL0f78Zk/gnC+
jhfnwVVSwnC+lOWP9TMtReD8F6xHa9LMROH8SRvy1QUFxdD4EnA+l8bzeR0a
knD+koMNFkpCUnB+Qq3Nl7tnEXwZkH2d0qjyvjJo7pOF8CXFHX6IXestL0fw
jz1eFOXyR84hZft5LeO7cg4b7OR+vTulAJFPlHeo4X59bPd0BB+iXxrOR/EP
kI/iXyC/aX6cGIOFCJwPdp+oMJwPDt/PgnA+2D1PBOB8WHygxy8Abafrpg==

                "]}]}, 
             FaceForm[
              RGBColor[0.627441, 0.627441, 0.627441, 1.]], StripOnInput -> 
             False]}, ImageSize -> {14., 14.}, 
           PlotRange -> {{0., 14.}, {0., 14.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.07142857142857142], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+HJQe2D6J0DtQTGfgR1u/wOo
Opj7HqCZ+wDNXhgf5i6YfpTwAZoP8xfMfpi/5dDCAWYPAFLnobw=
               "], 
               CurveClosed -> {1}]}, 
             JoinForm[{"Miter", 3.25}], 
             Thickness[0.049999999999999996`], 
             RGBColor[0.5, 0.5, 0.5, 1.], StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYCYpfunOe/V2o6MICBjAOM//GSb5KAhKLD46Wz
jygUaDjIRKVY3+dXgahzUIPTMHGYOpg+XObKgtSfF4Xze6fnCTUf4Ifr/w8G
bHDzn15Quv2z7o89zJ4nIHUbPtnD7IHxYfbA+HJQe2D6J0DtQTGfgR1u/wOo
Opj7HqCZ+wDNXhgf5i6YfpTwAZoP8xfMfpi/5dDCAWYPAFLnobw=
               "]]}, 
             FaceForm[
              RGBColor[0.5, 0.5, 0.5, 1.]], StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/Tcg88iZOhmHGu7Xx3YXKzm03fzoEzpdGs7nS6q6
eve8lMPjwkBdpVlKDtNeMcWlaUg5bLCT+/XumZKDfHH3s3cNkhD1xsoOydvP
axnrSjrM0+V9eXcqgi+2tCUhlFcFzu+V+XP9TIsKXP8jkPnPVODmg9UbqsLt
97yxfXJHjSrcfWD3LFJ1gLkfxn9jH7F5d64snA9Wby4H139K1mzizNtyqObX
y8PtN2iZ8/3/RXm4+2B8mPthfJj/YPph/oeZDwsfmP2w8IO5Dxa+6OEPAGHh
sd4=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQLeF07vf/KwoOB35VvNh9m88Bxo+YItQUGsrtcErW
bOLMbHEMPky9Qcuc7/8vSjp80F0j/f4cP5xvEy11afdrATjfL0f78Zk/gnC+
jhfnwVVSwnC+lOWP9TMtReD8F6xHa9LMROH8SRvy1QUFxdD4EnA+l8bzeR0a
knD+koMNFkpCUnB+Qq3Nl7tnEXwZkH2d0qjyvjJo7pOF8CXFHX6IXestL0fw
jz1eFOXyR84hZft5LeO7cg4b7OR+vTulAJFPlHeo4X59bPd0BB+iXxrOR/EP
kI/iXyC/aX6cGIOFCJwPdp+oMJwPDt/PgnA+2D1PBOB8WHygxy8Abafrpg==

                "]}]}, 
             FaceForm[
              RGBColor[0.999985, 0.999985, 0.999985, 1.]], StripOnInput -> 
             False]}, ImageSize -> {14., 14.}, 
           PlotRange -> {{0., 14.}, {0., 14.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (If[
            MatchQ[
             CurrentValue[
              ButtonNotebook[], {TaggingRules, "AttachedCells", #}], 
             Blank[CellObject]], NotebookDelete[
              CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}]]; 
            CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}] = 
             Inherited, CurrentValue[
               ButtonNotebook[], {TaggingRules, "AttachedCells", #}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]; 
            Null]; Null), Appearance -> None, Evaluator -> Automatic, Method -> 
         "Preemptive"], BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{
           FunctionResourceTools`BuildDefinitionNotebook`Private`clickTime$$ = 
            0., FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$\
$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[
                    AbsoluteTime[] - 
                    FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$ > FunctionResourceTools`BuildDefinitionNotebook`Private`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.65], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[0.988235, 0.419608, 0.203922], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 2/3, 0], 
                    Thickness[2/45], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {
                    FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$}], StandardForm], Evaluator -> "System"], 
                 ButtonFunction :> (
                  FunctionResourceTools`BuildDefinitionNotebook`Private`\
clickTime$$ = AbsoluteTime[]; CopyToClipboard[#2]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          FunctionResourceTools`BuildDefinitionNotebook`Private`$$tooltip, 
           "Text", FontColor -> RGBColor[0.537255, 0.537255, 0.537255], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`FunctionTemplateToggle[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
            ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
               FontSize -> 11, StripOnInput -> False], 
              "\"Format selection as literal Wolfram Language code\""}, 
             "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               
               FunctionResource`DocuToolsTemplate`\
FunctionTemplateLiteralInput[]]), FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
            Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
            ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Insert Delimiter\"", "Text", FontFamily -> "Source Sans Pro",
                FontSize -> 11, StripOnInput -> False], 
              "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`DocDelimiter[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
            ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Subscripted Variable\"", "Text", FontFamily -> 
               "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
              "\"Insert subscripted variable placeholder\""}, 
             "PrettyTooltipTemplate"], 
            ButtonFunction :> (
             Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
               Symbol["System`ResourceFunction"]]; Identity[
               FunctionResource`DocuToolsTemplate`InsertSubscript[]]), 
            FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
               FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
              Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                "], "Byte", ColorSpace -> 
                "RGB", Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
              Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                "], "Byte", 
                ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
            RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
            ImageSize -> {All, 20}, Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
               "\"Tables\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\"", "Text", FontFamily -> "Source Sans Pro", FontSize -> 
                11, StripOnInput -> False], "\"Table Functions\""}, 
              "PrettyTooltipTemplate"], 
             ButtonFunction :> (
              Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                Symbol["System`ResourceFunction"]]; 
              FunctionResource`DefinitionNotebook`Private`showProgress[Null]),
              FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue["MouseOver"], {FontColor -> RGBColor[1, 1, 1]}, {
                FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
               Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                 "], "Byte", ColorSpace -> 
                 "RGB", Interleaving -> True], "Hover" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
               Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                 "], "Byte", 
                 ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
             RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
             ImageSize -> {All, 20}, Evaluator -> Automatic], {
            "\"Insert table with two columns\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableInsert[2]]", InputForm], 
             "\"Insert table with three columns\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableInsert[3]]", InputForm], 
             "\"Add a row to the selected table\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
System`FrontEndExecute[{System`FrontEndToken[System`ButtonNotebook[], \
\"NewRow\"]}]]", InputForm], "\"Sort the selected table\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableSort[]]", InputForm], 
             "\"Merge selected tables\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DocuToolsTemplate`TableMerge[]]", InputForm]}, Appearance -> 
            None, Method -> "Queued"], 
           DynamicBox[
            ToBoxes[
             If[
              CurrentValue[
               EvaluationNotebook[], {
               TaggingRules, "SubmissionReviewData", "Review"}, False], 
              Button[
               RawBoxes[
                TemplateBox[{
                  StyleBox[
                  "\"Insert Comment\"", "Text", FontFamily -> 
                   "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                  "\"Insert comment for reviewer\""}, 
                 "PrettyTooltipTemplate"]], 
               Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False}, 
                 Symbol["System`ResourceFunction"]]; Identity[
                 FunctionResource`DocuToolsTemplate`InsertComment[]], 
               FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> Dynamic[
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1, 1, 1]}, {
                  FontColor -> RGBColor[0.92549, 0.498039, 0.235294]}], 
                 Evaluator -> "System"], 
               Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh9mpryfFAVBQDZcMVzZr9un
gFK/H1+BWwFkA0WA4nBlf988A+l9fgvNMUARoDhQFuJaoJYP0xKwOhsoDpRl
AANilBFpGvFuI9KnxIcbMbGABrDGKQDn48Vx
                   "], "Byte", 
                   ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
                 Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUh8mRbxvd4MgIBuuGK7s1+1T
7zs8fvbb/JkCRUA2UAQoDlf2982zDxNDf05AqIGqnGADFAfKQlwL1PKhwx1N
DQQBxYGyDGBAjDIiTSPebUT6lPhwIyYWiIlTAA7cjww=
                   "], "Byte", 
                   ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
                 Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQ/PvwGo5+3zsPQciCyMqAUu/6wt42OkMQkA1XDFf26/ap
t81urxOUXodLQ1GCElAEKA5X9vfNs3c9wa/jFRFqICheESgOlIW4FqjlXYMz
uhowAooDZRnAgBhlRJpGvNuI9Cnx4UZMLBATpwBrEHs/
                   "], "Byte", 
                   ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
               RGBColor[0.996078, 0.941176, 0.921569], Method -> "Queued", 
               ImageSize -> {All, 20}], ""], StandardForm], Evaluator -> 
            "System", SingleEvaluation -> True], 
           ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.996078, 0.941176, 0.921569]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.996078, 0.941176, 0.921569]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{
                 Thickness[0.022222222222222223`], {
                  FaceForm[{
                    RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                   0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {
                   0., 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {
                   34.926, 45.}, {45., 34.926}, {45., 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                    
                    "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                    27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                    26.308999999999997`}, {21.375, 26.258000000000003`}, {
                    21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                    15.602}, {21.426, 15.547}, {23.828, 
                    15.315999999999999`}, {23.828, 14.242}}, {{24.578, 
                    18.75}, {24.578, 23.078000000000003`}, {24.578, 23.539}, {
                    24.953, 23.914}, {25.418, 23.91}, {29.746, 23.91}, {
                    30.203, 23.91}, {30.578, 23.539}, {30.578, 
                    23.078000000000003`}, {30.578, 18.75}, {
                    30.581999999999997`, 18.288999999999998`}, {30.207, 
                    17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                    17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                    14.242}, {31.328, 15.315999999999999`}, {33.684, 
                    15.539000000000001`}, {33.789, 15.602}, {33.789, 
                    17.641}, {33.789, 24.188}, {33.789, 26.227}, {33.684, 
                    26.281}, {31.328, 26.512000000000004`}, {31.328, 
                    27.586}, {36.113, 27.586}, {36.113, 
                    14.234000000000002`}}}]}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], Background -> 
                 RGBColor[0.988235, 0.419608, 0.203922], AspectRatio -> 
                 Automatic, ImageSize -> {45., 45.}, 
                 PlotRange -> {{0., 45.}, {0., 45.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Function Resource\"", FontFamily -> 
                    "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
                    StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "ColumnsIndexed" -> {2 -> GrayLevel[1]}, 
                    "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", 
           ItemBox[
            TemplateBox[{
              StyleBox[
              "\"Function Repository \[RightGuillemet]  \"", "Text", 
               FontColor -> GrayLevel[1], StripOnInput -> False], 
              "https://resources.wolframcloud.com/FunctionRepository/"}, 
             "HyperlinkURL"], Alignment -> {Right, Bottom}, StripOnInput -> 
            False]}, {
           TemplateBox[{
             
             TemplateBox[{
              "\"Open Sample\"", 
               "\"View a completed sample definition notebook\""}, 
              "PrettyTooltipTemplate"], 
             
             FunctionResource`DefinitionNotebook`Private`viewExampleNotebook[]\
& , "\"View a completed sample definition notebook\"", True}, 
            "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Style Guidelines\"", 
               "\"View general guidelines for authoring resource \
functions\""}, "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`viewStyleGuidelines[]\
& , "\"View general guidelines for authoring resource functions\"", True}, 
            "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 12, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 12, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`getResource[
              ButtonNotebook[], "Tools"]& , 
             "\"Toggle documentation toolbar\"", False}, 
            "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.994118, 0.709804, 0.601961]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             FunctionResource`DefinitionNotebook`Private`checkNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             True}, "OrangeButtonTemplate"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Preview \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"In a notebook\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Preview\"]]", InputForm], "\"On the cloud\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Cloud\"]]", InputForm]}, Appearance -> None, Method -> "Queued"], 
           ActionMenuBox[
            
            TemplateBox[{
             "\"Deploy \[FilledDownTriangle]\"", Null& , "\"\"", True}, 
             "OrangeButtonTemplate"], {
            "\"Locally on this computer\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Local\"]]", InputForm], "\"For my cloud account\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"Cloud\"]]", InputForm], "\"Publicly in the cloud\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"CloudPublic\"]]", InputForm], 
             "\"In this session only (without documentation)\"" :> 
             ToExpression[
              "System`Block[{ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = System`False}, \
System`Symbol[\"System`ResourceFunction\"]; \
FunctionResource`DefinitionNotebook`Private`getResource[System`ButtonNotebook[\
], \"KernelSession\"]]", InputForm]}, Appearance -> None, Method -> "Queued"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", Initialization :> If[
                Not[$CloudEvaluation], CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                ""]], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           DynamicBox[
            ToBoxes[
             If[
              CurrentValue[
               EvaluationNotebook[], {
               TaggingRules, "SubmissionReviewData", "Review"}, False], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349206349206349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, 
                    FaceForm[
                    RGBColor[0.960784, 0.705882, 0.498039, 1.]], StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, 
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]], StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> F\
alse, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit changes to update your resource submission\""}, 
                  "PrettyTooltipTemplate"], 
                 FunctionResource`DefinitionNotebook`Private`\
submitRepositoryUpdate[
                  ButtonNotebook[]]& , 
                 "\"Submit changes to update your resource submission\"", 
                 True}, "OrangeButtonTemplate"]], 
              RawBoxes[
               TemplateBox[{
                 TemplateBox[{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349206349206349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, 
                    FaceForm[
                    RGBColor[0.960784, 0.705882, 0.498039, 1.]], StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, 
                    FaceForm[
                    RGBColor[1., 1., 1., 1.]], StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                   "\"Submit your function to the Wolfram Function Repository\
\""}, "PrettyTooltipTemplate"], 
                 FunctionResource`DefinitionNotebook`Private`submitRepository[
                 
                  ButtonNotebook[]]& , 
                 "\"Submit your function to the Wolfram Function \
Repository\"", True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
            "System", SingleEvaluation -> True]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.988235, 0.419608, 0.203922], 
             RGBColor[0.921569, 0.341176, 0.105882]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.988235, 0.419608, 0.203922], 2 -> 
             RGBColor[0.921569, 0.341176, 0.105882]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.988235, 0.419608, 0.203922]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.022222222222222223`], {
                FaceForm[{
                  RGBColor[0.87451, 0.278431, 0.03137260000000001], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}}, {{{45., 22.5}, {45., 10.073999999999998`}, {34.926, 
                 0.}, {22.5, 0.}, {10.074, 0.}, {0., 10.073999999999998`}, {
                 0., 22.5}, {0., 34.926}, {10.074, 45.}, {22.5, 45.}, {34.926,
                  45.}, {45., 34.926}, {45., 22.5}}}]}, {
                FaceForm[{
                  RGBColor[1., 1., 1.], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                  0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                  2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
                  0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwAWIQLcESxqe7SdlhqnN3zvPblg4w/omyffOl/K0cEp9e
ULq9U9lhT8lkCZZrVg6VL9UMOd4oO1SLrHN/GGXtcKUCKOCh4sDDpN0udtPa
4fnvlR8v8ao6ZIE12ELMrVZzmAIymNfOAWj43PfpGg45YIV2Dguk9O+qsGlB
9M+0h9gjpgOxh8fBYePc98uPees5MICAggNE/TF9B6Bl574rO0DcMcsAwmd2
cNCM6T/0VcPQAeQsjh6oeWWGEPt97R3UDTnWyMwyhKh7Yefw5S/QB22GEHe1
2zlIg5yTaAh3by7InUKGDmBnLrR1cOkGudzAYZHrts9/Q2wdHi+dfUShwMBh
Q1HGxLcytg5BO+RaXwsaQN1r6/BdA2jRVn1oeNk6aIEcWq4HcccvWwfTuF2e
PEy6UPPtHIC+CH68VBvOP70QaNFeLTg/T6j5wKlELYdPl3yTBCLsIOGkowVx
71tbhycg93zQdAjonZ4ndNgGzgern2ENVw90TZVInhUkfqy1IO65ZQl3L4wP
iW99B/NOx4SnEyzh4Q+W32XhcBUc0PoQd7dawM1D568H2cdnCOd/A9nzVc/h
I9hdWg4ZoIg6oueQD/Kfoh40nSD4fkDfWpboQOw7oYDBh6mHxIcy3DxYek4A
peOfCD7MPTA+zL0yUSnW9/sV4Hxw/DgpQOL7igUkfi8qwsMHAHSDTZ8=
                  
                  "], {{19.051000000000002`, 14.242}, {19.051000000000002`, 
                  27.594}, {23.828, 27.594}, {23.828, 26.543}, {21.426, 
                  26.308999999999997`}, {21.375, 26.258000000000003`}, {
                  21.375, 24.219}, {21.375, 17.535000000000004`}, {21.375, 
                  15.602}, {21.426, 15.547}, {23.828, 15.315999999999999`}, {
                  23.828, 14.242}}, {{24.578, 18.75}, {24.578, 
                  23.078000000000003`}, {24.578, 23.539}, {24.953, 23.914}, {
                  25.418, 23.91}, {29.746, 23.91}, {30.203, 23.91}, {30.578, 
                  23.539}, {30.578, 23.078000000000003`}, {30.578, 18.75}, {
                  30.581999999999997`, 18.288999999999998`}, {30.207, 
                  17.91}, {29.746, 17.91}, {25.418, 17.91}, {24.953, 
                  17.906}, {24.574, 18.285}, {24.578, 18.75}}, {{31.328, 
                  14.242}, {31.328, 15.315999999999999`}, {33.684, 
                  15.539000000000001`}, {33.789, 15.602}, {33.789, 17.641}, {
                  33.789, 24.188}, {33.789, 26.227}, {33.684, 26.281}, {
                  31.328, 26.512000000000004`}, {31.328, 27.586}, {36.113, 
                  27.586}, {36.113, 14.234000000000002`}}}]}}, {
              ImageSize -> 12, Background -> None, AspectRatio -> Automatic, 
               ImageSize -> {45., 45.}, PlotRange -> {{0., 45.}, {0., 45.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro SemiBold", 
         FontWeight -> "SemiBold", FontTracking -> -0.9, FontSize -> 13, 
         FontColor -> GrayLevel[1], StripOnInput -> False], ButtonFunction :> 
        Block[{ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
           False}, Symbol["System`ResourceFunction"]; If[
            TrueQ[#4], CurrentValue[
               ButtonNotebook[], {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]; 
            FunctionResource`DefinitionNotebook`Private`showProgress, 
            Identity][
            #2[]]], FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqPngeIQhCyIrAwodd2K5Yo5IwQB2XDFcGXPA8Wu
WjBdNmVARkARoDhCWZjUdUsWNDUQBBQHykJcC9RyxRzdKAgCigNlGcCAGGVE
mka824j1KdHhRkwsEBOnAMp0Eag=
            "], "Byte", ColorSpace -> "RGB", 
            Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqMHARIQhCyIrAwotdGIa7UuOwQB2XDFcGX3/MXX
6LEv12ZDRkARoDhc2ctQqQ1GnGhqIAgoDpSFuBarUcgGMoABMcqINI14txHp
U+LDjZhYICZOAZ5bBHA=
            "], "Byte", ColorSpace -> "RGB", 
            Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqN3hfYQhCyIrAwo9e36ma8PbkIQkA1XDFf2vtzt
28Obu6Jsl2uzQRCQDRQBisOVvYlR+nr99I5gU7gaCAKKAMWBshDXArV8vnUR
TQ0EAcWBsgxgQIwyIk0j3m1E+pT4cCMmFoiJUwBDsjmM
            "], "Byte", 
            ColorSpace -> "RGB", Interleaving -> True]}, Background -> 
        RGBColor[0.921569, 0.341176, 0.105882], Method -> "Queued", 
        ImageSize -> {All, 23}, Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro SemiBold", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{FunctionResourceTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, Before, 
          CellContents]; Null], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {
     "ReturnKeyDown" :> 
      With[{FunctionResourceTools`BuildDefinitionNotebook`Private`nb = 
         Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; 
        NotebookWrite[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[
         FunctionResourceTools`BuildDefinitionNotebook`Private`nb, Before, 
          CellContents]; Null], {"KeyDown", "\t"} :> Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, StyleKeyMapping -> {}, 
    DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> False, 
    GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None, FontSize -> 14], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.921569, 0.341176, 0.105882]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.614379, 0.227451, 0.0705882]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[0.0196078, 0.286275, 0.65098]]]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False]}, Visible -> 
  False, FrontEndVersion -> "12.0 for Linux x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Title"->{
  Cell[558, 20, 55, 1, 70, "Title",ExpressionUUID->"32ea2796-6062-4a28-b1e4-adbe789b7a4c",
   CellTags->"Title"]},
 "Description"->{
  Cell[616, 23, 152, 4, 70, "Text",ExpressionUUID->"36d08cfc-f901-4caa-a3b8-b9b7534be623",
   CellTags->"Description"]},
 "Definition"->{
  Cell[793, 31, 887, 21, 70, "Section",ExpressionUUID->"e091bc10-2dcc-4752-9ead-e68e6d35f005",
   CellTags->"Definition",
   CellID->474513213]},
 "Documentation"->{
  Cell[24533, 640, 99, 3, 70, "Section",ExpressionUUID->"df5b2add-10bd-4e9b-bb27-dd80a997326c",
   CellTags->"Documentation",
   CellID->855965831]},
 "Usage"->{
  Cell[24657, 647, 1650, 42, 70, "Subsection",ExpressionUUID->"a7bbef43-0009-4d46-abea-22ebffcb46ea",
   CellTags->"Usage",
   CellID->643497520]},
 "Details & Options"->{
  Cell[27187, 731, 1131, 24, 70, "Subsection",ExpressionUUID->"40827e2a-7987-4ec9-b3b8-8c68325528fb",
   CellTags->"Details & Options",
   CellID->66019318]},
 "TabNext"->{
  Cell[29083, 770, 750, 15, 70, "Notes",ExpressionUUID->"c22e3106-c27d-47a1-b041-fada17981819",
   CellTags->"TabNext",
   CellID->521904482],
  Cell[1399200, 26418, 508, 8, 70, "Item",ExpressionUUID->"ec62b9a2-eb72-40dc-816c-70cc8c96d5fb",
   CellTags->"TabNext",
   CellID->960273585],
  Cell[1418852, 27069, 687, 15, 70, "Text",ExpressionUUID->"b878a0e5-52a5-457b-9005-8b63b396af23",
   CellTags->"TabNext",
   CellID->567921317],
  Cell[1420299, 27110, 495, 8, 70, "Text",ExpressionUUID->"2c6d6ff0-baa7-41cb-9a8d-c4a0fff19aeb",
   CellTags->"TabNext",
   CellID->920818074]},
 "Examples"->{
  Cell[34437, 887, 6400, 143, 70, "Section",ExpressionUUID->"412d407e-b5ec-4c85-9d6d-20797b75a746",
   CellTags->"Examples",
   CellID->180595041]},
 "Source & Additional Information"->{
  Cell[1395493, 26283, 135, 3, 70, "Section",ExpressionUUID->"1d01704b-1ebb-4fd8-87c3-5c19a2f9833b",
   CellTags->"Source & Additional Information",
   CellID->318391102]},
 "Contributed By"->{
  Cell[1395653, 26290, 683, 18, 70, "Subsection",ExpressionUUID->"ca9ea530-93f2-4caf-9505-564010e2097b",
   CellTags->"Contributed By",
   CellID->127820888]},
 "Keywords"->{
  Cell[1396405, 26315, 684, 18, 70, "Subsection",ExpressionUUID->"df51d5b9-3b1a-46e9-9693-3c3c500fb335",
   CellTags->"Keywords",
   CellID->547400482]},
 "Categories"->{
  Cell[1397248, 26346, 126, 4, 70, "Subsection",ExpressionUUID->"add2c78f-f85f-476c-a040-9d27c6d8636e",
   CellTags->"Categories",
   CellID->749076926]},
 "Related Symbols"->{
  Cell[1397600, 26363, 661, 18, 70, "Subsection",ExpressionUUID->"8996226d-4b62-4ee5-9964-7b5ac00dca04",
   CellTags->"Related Symbols",
   CellID->161079978]},
 "Related Resource Objects"->{
  Cell[1398486, 26398, 711, 18, 70, "Subsection",ExpressionUUID->"7a3ea79b-9eb7-406a-b339-fa0f9e5efbda",
   CellTags->"Related Resource Objects",
   CellID->588449267]},
 "Source/Reference Citation"->{
  Cell[1399745, 26431, 762, 19, 70, "Subsection",ExpressionUUID->"55e3b615-fff3-4909-a948-69d307b8a45b",
   CellTags->"Source/Reference Citation",
   CellID->642091068]},
 "Links"->{
  Cell[1400702, 26461, 614, 18, 70, "Subsection",ExpressionUUID->"de20f52e-40d6-44a7-aebb-1da36f1cafe9",
   CellTags->"Links",
   CellID->521525586]},
 "Tests"->{
  Cell[1401854, 26504, 767, 20, 70, "Subsection",ExpressionUUID->"73d5be0c-48cd-401a-b48d-9422e295fef1",
   CellTags->"Tests",
   CellID->74308299]},
 "Author Notes"->{
  Cell[1418722, 27063, 127, 4, 70, "Section",ExpressionUUID->"aa283c85-8d60-495d-a880-cee9a818fd4f",
   CellTags->"Author Notes",
   CellID->795110225]},
 "Submission Notes"->{
  Cell[1419576, 27089, 720, 19, 70, "Section",ExpressionUUID->"c3672934-a857-408c-8f21-5a6973a68443",
   CellTags->"Submission Notes",
   CellID->843283583]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Title", 1493082, 28511},
 {"Description", 1493215, 28514},
 {"Definition", 1493353, 28517},
 {"Documentation", 1493519, 28521},
 {"Usage", 1493681, 28525},
 {"Details & Options", 1493853, 28529},
 {"TabNext", 1494026, 28533},
 {"Examples", 1494621, 28546},
 {"Source & Additional Information", 1494808, 28550},
 {"Contributed By", 1495002, 28554},
 {"Keywords", 1495177, 28558},
 {"Categories", 1495348, 28562},
 {"Related Symbols", 1495525, 28566},
 {"Related Resource Objects", 1495717, 28570},
 {"Source/Reference Citation", 1495919, 28574},
 {"Links", 1496102, 28578},
 {"Tests", 1496265, 28582},
 {"Author Notes", 1496434, 28586},
 {"Submission Notes", 1496611, 28590}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 55, 1, 70, "Title",ExpressionUUID->"32ea2796-6062-4a28-b1e4-adbe789b7a4c",
 CellTags->"Title"],
Cell[616, 23, 152, 4, 70, "Text",ExpressionUUID->"36d08cfc-f901-4caa-a3b8-b9b7534be623",
 CellTags->"Description"],
Cell[CellGroupData[{
Cell[793, 31, 887, 21, 70, "Section",ExpressionUUID->"e091bc10-2dcc-4752-9ead-e68e6d35f005",
 CellTags->"Definition",
 CellID->474513213],
Cell[1683, 54, 22835, 583, 70, "Input",ExpressionUUID->"cfc19ac4-9e9c-46ba-a51d-034344a24177",
 CellID->192351897]
}, Open  ]],
Cell[24533, 640, 99, 3, 70, "Section",ExpressionUUID->"df5b2add-10bd-4e9b-bb27-dd80a997326c",
 CellTags->"Documentation",
 CellID->855965831],
Cell[CellGroupData[{
Cell[24657, 647, 1650, 42, 70, "Subsection",ExpressionUUID->"a7bbef43-0009-4d46-abea-22ebffcb46ea",
 CellTags->"Usage",
 CellID->643497520],
Cell[CellGroupData[{
Cell[26332, 693, 181, 5, 70, "UsageInputs",ExpressionUUID->"98417d5b-ee98-4474-a8ee-0e90d1e397bc"],
Cell[26516, 700, 251, 8, 70, "UsageDescription",ExpressionUUID->"d52bc739-c358-4a35-bbe6-81a7260716b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26804, 713, 214, 6, 70, "UsageInputs",ExpressionUUID->"a8ea94ba-115e-4db4-b259-52142aef3ec1"],
Cell[27021, 721, 117, 4, 70, "UsageDescription",ExpressionUUID->"cf844511-8082-4b7d-a864-4defa51b9786"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27187, 731, 1131, 24, 70, "Subsection",ExpressionUUID->"40827e2a-7987-4ec9-b3b8-8c68325528fb",
 CellTags->"Details & Options",
 CellID->66019318],
Cell[28321, 757, 759, 11, 70, "Notes",ExpressionUUID->"c6ae4f78-7573-4eb2-a7db-29edeb6df964",
 CellID->644890978],
Cell[29083, 770, 750, 15, 70, "Notes",ExpressionUUID->"c22e3106-c27d-47a1-b041-fada17981819",
 CellTags->"TabNext",
 CellID->521904482],
Cell[29836, 787, 851, 13, 70, "Notes",ExpressionUUID->"a062c976-ff28-423e-8d26-398d104b9eb0",
 CellID->932926317],
Cell[30690, 802, 1025, 15, 70, "Notes",ExpressionUUID->"78ec3794-a9f4-4260-ac29-874aad0c5719",
 CellID->1454340227],
Cell[31718, 819, 2003, 50, 70, "TableNotes",ExpressionUUID->"e2036f37-e928-4bc4-8f4e-7233b524718c",
 CellID->15349902],
Cell[33724, 871, 676, 11, 70, "Notes",ExpressionUUID->"2d3b63e9-b93b-4d26-b2fd-89bddc18058f",
 CellID->773822928]
}, Open  ]],
Cell[CellGroupData[{
Cell[34437, 887, 6400, 143, 70, "Section",ExpressionUUID->"412d407e-b5ec-4c85-9d6d-20797b75a746",
 CellTags->"Examples",
 CellID->180595041],
Cell[CellGroupData[{
Cell[40862, 1034, 79, 2, 70, "Subsection",ExpressionUUID->"16e0721c-3107-4f6e-8fb1-28a118f10958",
 CellID->462042388],
Cell[40944, 1038, 173, 3, 70, "Text",ExpressionUUID->"7f424508-c86d-408d-bf1c-e6982acd0714",
 CellID->13078159],
Cell[41120, 1043, 1291, 28, 70, "Input",ExpressionUUID->"50594024-7e2f-48e2-90b8-097c59f22f46",
 CellID->443871870],
Cell[42414, 1073, 454, 15, 70, "Text",ExpressionUUID->"65ae03ad-c9fe-4fb9-8218-8359f3ae427c",
 CellID->1694020473],
Cell[42871, 1090, 1043, 19, 70, "Input",ExpressionUUID->"31c0c0f0-4028-4aac-8401-e09580eaf9e3",
 CellID->1910655430],
Cell[43917, 1111, 216, 3, 70, "Text",ExpressionUUID->"10ab818a-887c-4064-83c5-ad45eb87a371",
 CellID->2001378160],
Cell[CellGroupData[{
Cell[44158, 1118, 236, 6, 70, "Input",ExpressionUUID->"7bd493de-e86f-43ef-9976-0e8aa02a3362",
 CellID->973059540],
Cell[44397, 1126, 8049, 193, 70, "Output",ExpressionUUID->"4a6fd4ab-4c5e-47e9-ba25-a1f584e763be",
 CellID->200350540]
}, Open  ]],
Cell[52461, 1322, 213, 5, 70, "Text",ExpressionUUID->"577193f3-27c1-4b43-9971-b8871be57835",
 CellID->1912686119],
Cell[CellGroupData[{
Cell[52699, 1331, 1436, 32, 70, "Input",ExpressionUUID->"043de6f2-0661-4a1f-b8f7-ac384a8b65f5",
 CellID->1110694998],
Cell[54138, 1365, 27583, 559, 70, "Output",ExpressionUUID->"4a9ca003-a107-450d-8d88-d1f6628504e8",
 CellID->37167284]
}, Open  ]],
Cell[81736, 1927, 345, 7, 70, "Text",ExpressionUUID->"3fc6bfc4-42fd-4520-9c26-c3921509671a",
 CellID->676882694],
Cell[CellGroupData[{
Cell[82106, 1938, 870, 22, 70, "Input",ExpressionUUID->"9dd0b8d1-5387-4ed9-b6f4-6743284ec79b",
 CellID->1412693484],
Cell[82979, 1962, 550, 9, 70, "Output",ExpressionUUID->"d6b203ba-9498-46c1-8790-39069193a2e1",
 CellID->1900284558]
}, Open  ]],
Cell[83544, 1974, 410, 11, 70, "Text",ExpressionUUID->"cb3b440f-5f47-47de-ae75-f5660c913f02",
 CellID->231253758]
}, Open  ]],
Cell[CellGroupData[{
Cell[83991, 1990, 70, 2, 70, "Subsection",ExpressionUUID->"ed67107d-2e55-4ea9-a097-8b98abd0e314",
 CellID->964056545],
Cell[84064, 1994, 225, 5, 70, "Text",ExpressionUUID->"2dd14bcf-1650-4850-971e-4fdefae4b146",
 CellID->2146074136],
Cell[CellGroupData[{
Cell[84314, 2003, 1244, 37, 70, "Input",ExpressionUUID->"98da966a-21f4-4bc5-a2ea-bb96ef98ad28",
 CellID->1111448832],
Cell[85561, 2042, 18926, 388, 70, "Output",ExpressionUUID->"cc87cada-591a-4d02-9270-91e29008d8a0",
 CellID->705768122]
}, Open  ]],
Cell[CellGroupData[{
Cell[104524, 2435, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"3588ed7b-cefc-498f-a4ff-f6e40c3af8f7",
 CellID->2067138768],
Cell[104653, 2440, 329, 6, 70, "Text",ExpressionUUID->"89c79bc9-d5b0-4f47-87fd-d60fd2c15769",
 CellID->669793857],
Cell[CellGroupData[{
Cell[105007, 2450, 1467, 41, 70, "Input",ExpressionUUID->"3b0f0f06-c38e-43fe-8d3d-187e27110dfe",
 CellID->484079091],
Cell[106477, 2493, 25981, 492, 70, "Output",ExpressionUUID->"eab5e3f4-6107-4ee0-9785-d7e6a8b51f71",
 CellID->28167653]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132507, 2991, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"13ba4b14-2427-4347-9ea8-2ef8ddac4495",
 CellID->1804791228],
Cell[132636, 2996, 299, 7, 70, "Text",ExpressionUUID->"62410f9b-2434-4d17-ae6d-ee6135fee8c2",
 CellID->649685796],
Cell[132938, 3005, 497, 13, 70, "Input",ExpressionUUID->"f1942ba4-358b-40e9-ad2b-8130d9b375ca",
 CellID->836153427]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[133484, 3024, 72, 2, 70, "Subsection",ExpressionUUID->"23e2edad-310a-4e4a-b3f4-a0612c62792b",
 CellID->776923543],
Cell[CellGroupData[{
Cell[133581, 3030, 152, 3, 70, "Subsubsection",ExpressionUUID->"47a4d240-a196-4ba6-8c28-01ff7cbaa30a",
 CellID->330660962],
Cell[133736, 3035, 767, 22, 70, "Text",ExpressionUUID->"24166c47-2e92-4591-82f8-faaea8be5ea9",
 CellID->2068667370],
Cell[134506, 3059, 701, 18, 70, "Input",ExpressionUUID->"bbc86fc4-6e5c-4d81-8aaa-ea803069850a",
 CellID->1925318953],
Cell[CellGroupData[{
Cell[135232, 3081, 1352, 32, 70, "Input",ExpressionUUID->"ae4179c2-cf9a-4fdb-a161-25f34ce032d5",
 CellID->1068833306],
Cell[136587, 3115, 32747, 674, 70, "Output",ExpressionUUID->"3521f3f8-899c-426b-978a-8dc17a574a5c",
 CellID->1641587915]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169383, 3795, 143, 3, 70, "Subsubsection",ExpressionUUID->"20e86fd6-84ef-4512-a82e-49162c45ae86",
 CellID->1083201938],
Cell[169529, 3800, 1797, 55, 70, "Text",ExpressionUUID->"c6d16d40-7096-48f9-a506-5fd32cd63207",
 CellID->1638918958],
Cell[171329, 3857, 633, 17, 70, "Input",ExpressionUUID->"d74627e0-d9ec-443b-948e-93a01eed6ff3",
 CellID->1019496439],
Cell[CellGroupData[{
Cell[171987, 3878, 900, 22, 70, "Input",ExpressionUUID->"6dac564a-11b0-4e97-a453-06533aeb59bf",
 CellID->1874949453],
Cell[172890, 3902, 19397, 400, 70, "Output",ExpressionUUID->"02f2edc1-f029-4097-9583-6d276b06e454",
 CellID->1445674396]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192348, 4309, 77, 2, 70, "Subsection",ExpressionUUID->"869fbd34-d3fe-42bb-a5cc-d853a1170eda",
 CellID->568056528],
Cell[CellGroupData[{
Cell[192450, 4315, 214, 4, 70, "Subsubsection",ExpressionUUID->"b12fb136-3445-4e46-bca1-2a6d8cf41a91",
 CellID->38901514],
Cell[192667, 4321, 260, 6, 70, "Text",ExpressionUUID->"dcf4b25c-6982-4b2c-809c-4ae75c4aa5ee",
 CellID->60280420],
Cell[CellGroupData[{
Cell[192952, 4331, 1149, 32, 70, "Input",ExpressionUUID->"96cb90aa-0354-454f-830f-43aa59a8de67",
 CellID->1571093571],
Cell[194104, 4365, 10874, 197, 70, "Output",ExpressionUUID->"5f724a71-509c-4486-9bfb-fd1886edea2b",
 CellID->1286315960]
}, Open  ]],
Cell[204993, 4565, 159, 3, 70, "Text",ExpressionUUID->"92e9346a-2249-48c4-8bd0-a63ff51689c7",
 CellID->1919664181],
Cell[205155, 4570, 639, 15, 70, "Input",ExpressionUUID->"87161aab-2703-4f8f-9110-957f616ff7b1",
 CellID->1285359108],
Cell[205797, 4587, 148, 2, 70, "Text",ExpressionUUID->"e86b2dc2-cee9-41a3-97b8-ad78148aa915",
 CellID->2145133676],
Cell[CellGroupData[{
Cell[205970, 4593, 1416, 36, 70, "Input",ExpressionUUID->"475db71b-c127-4328-b9fb-ee21ed7c2ab1",
 CellID->205308562],
Cell[207389, 4631, 84532, 1537, 70, "Output",ExpressionUUID->"da87a9cd-39b3-435b-84ca-683d4c5975ee",
 CellID->962893800]
}, Open  ]],
Cell[291936, 6171, 352, 7, 70, "Text",ExpressionUUID->"4b9a58e6-82c8-47a5-9502-495ca8811917",
 CellID->2084879848]
}, Open  ]],
Cell[CellGroupData[{
Cell[292325, 6183, 160, 3, 70, "Subsubsection",ExpressionUUID->"548889ee-b59d-4c06-bf70-5a6526097d8c",
 CellID->1312985546],
Cell[292488, 6188, 538, 13, 70, "Text",ExpressionUUID->"b7888da6-54e2-4634-bf2a-90b9e357b835",
 CellID->469855503],
Cell[293029, 6203, 170, 4, 70, "Text",ExpressionUUID->"b589e8c8-940f-469b-b0b7-59719ce60bac",
 CellID->23717981],
Cell[CellGroupData[{
Cell[293224, 6211, 871, 25, 70, "Input",ExpressionUUID->"0a8701d0-3592-4e77-b8ff-b3d877817701",
 CellID->841051804],
Cell[294098, 6238, 9392, 171, 70, "Output",ExpressionUUID->"c9d0bcf7-38be-4662-bfcd-a08f66ffca31",
 CellID->2022877639]
}, Open  ]],
Cell[303505, 6412, 234, 5, 70, "Text",ExpressionUUID->"c604cc79-3cde-46be-b8f3-92ce47b2ce54",
 CellID->1690863016],
Cell[CellGroupData[{
Cell[303764, 6421, 522, 15, 70, "Input",ExpressionUUID->"93b07690-d5cb-4768-ab77-123f510369d7",
 CellID->1047275153],
Cell[304289, 6438, 295, 8, 70, "Output",ExpressionUUID->"98b4aa47-9bad-4d47-87c0-8b72076cef17",
 CellID->1682536684]
}, Open  ]],
Cell[304599, 6449, 134, 2, 70, "Text",ExpressionUUID->"e222c9af-41ee-41ba-8b40-a9e730fe6883",
 CellID->937555125],
Cell[304736, 6453, 614, 17, 70, "Input",ExpressionUUID->"6da2bc1a-ace9-4287-a79f-b2a20fed971f",
 CellID->124337916],
Cell[305353, 6472, 150, 2, 70, "Text",ExpressionUUID->"dd67af77-0658-4abe-9ade-d6955d6bda42",
 CellID->1116479181],
Cell[CellGroupData[{
Cell[305528, 6478, 543, 15, 70, "Input",ExpressionUUID->"d44235c4-c0cb-4092-99c2-b240121ebbd1",
 CellID->1532965732],
Cell[306074, 6495, 25385, 484, 70, "Output",ExpressionUUID->"69918cb2-1cc5-4776-b19a-d891f3f765c8",
 CellID->631082734]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[331508, 6985, 325, 5, 70, "Subsubsection",ExpressionUUID->"d4c70c2d-90b9-49a9-971e-943b801777ed",
 CellID->240605516],
Cell[331836, 6992, 137, 2, 70, "Text",ExpressionUUID->"23a97756-6156-48ee-a57a-d25c39b3408c",
 CellID->1318421321],
Cell[CellGroupData[{
Cell[331998, 6998, 481, 14, 70, "Input",ExpressionUUID->"0b6a31aa-e7b3-422a-b3a7-f4a25e08efed",
 CellID->2081815143],
Cell[332482, 7014, 18643, 345, 70, "Output",ExpressionUUID->"57b30793-797c-4700-a091-4e2cd90ba75c",
 CellID->331628042]
}, Open  ]],
Cell[CellGroupData[{
Cell[351162, 7364, 216, 5, 70, "Input",ExpressionUUID->"684ad052-667d-42b4-ace8-5b6dbc9f6ea1",
 CellID->1201518347],
Cell[351381, 7371, 217, 4, 70, "Output",ExpressionUUID->"556bf75c-b940-4388-9732-63b643d5b518",
 CellID->952437929]
}, Open  ]],
Cell[351613, 7378, 217, 3, 70, "Text",ExpressionUUID->"b662d90b-a8d4-427c-acde-222f3e3afa1d",
 CellID->1360825045],
Cell[CellGroupData[{
Cell[351855, 7385, 1200, 30, 70, "Input",ExpressionUUID->"fc825c29-20b4-4e90-b7f0-29f167300134",
 CellID->257040343],
Cell[353058, 7417, 35531, 656, 70, "Output",ExpressionUUID->"4b64ecb8-6909-4202-9492-732f55403118",
 CellID->11237927]
}, Open  ]],
Cell[388604, 8076, 189, 3, 70, "Text",ExpressionUUID->"798ee119-c7ff-4c80-a258-6975dd6b26cb",
 CellID->1204486972],
Cell[CellGroupData[{
Cell[388818, 8083, 1513, 38, 70, "Input",ExpressionUUID->"244701d2-84aa-40bc-b0bb-33aa8061a6aa",
 CellID->1888678157],
Cell[390334, 8123, 50224, 808, 70, "Output",ExpressionUUID->"c44dac63-b46a-4a4f-9b88-63d97a08c570",
 CellID->691553357]
}, Open  ]],
Cell[440573, 8934, 205, 3, 70, "Text",ExpressionUUID->"6a8a9801-a1ee-4b10-9b40-4305eea40120",
 CellID->1763409051],
Cell[CellGroupData[{
Cell[440803, 8941, 860, 25, 70, "Input",ExpressionUUID->"6240aa3f-ea9c-45e0-b64d-1e7b6116f9e2",
 CellID->1372668660],
Cell[441666, 8968, 571, 12, 70, "Output",ExpressionUUID->"3801a76a-c16c-438a-9d68-6263bda4630c",
 CellID->1303735716]
}, Open  ]],
Cell[442252, 8983, 141, 2, 70, "Text",ExpressionUUID->"49360696-4223-4509-af27-8f371d9f0695",
 CellID->1871726874],
Cell[CellGroupData[{
Cell[442418, 8989, 1547, 41, 70, "Input",ExpressionUUID->"6eb54b4e-6002-4ae7-b229-5d39b2df5283",
 CellID->765994676],
Cell[443968, 9032, 39775, 753, 70, "Output",ExpressionUUID->"6a86b1bb-cb49-48b0-85e0-9919afea1bd1",
 CellID->1207380335]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[483792, 9791, 170, 3, 70, "Subsubsection",ExpressionUUID->"5c301136-b83f-41f7-afd0-a384cf947d80",
 CellID->1688565735],
Cell[483965, 9796, 123, 2, 70, "Text",ExpressionUUID->"d74dbb6c-75bb-4c1c-9c01-4b3aa3a9f493",
 CellID->1772551697],
Cell[CellGroupData[{
Cell[484113, 9802, 677, 18, 70, "Input",ExpressionUUID->"cffb459d-d958-4eb9-8cc0-7af60727956c",
 CellID->792686013],
Cell[484793, 9822, 19055, 322, 70, "Output",ExpressionUUID->"68109963-e748-40d5-9c82-95b449bf6ca4",
 CellID->1504749873]
}, Open  ]],
Cell[503863, 10147, 159, 2, 70, "Text",ExpressionUUID->"e122ccc1-5fbd-454c-8a15-734b46099da8",
 CellID->104364058],
Cell[504025, 10151, 279, 7, 70, "Input",ExpressionUUID->"20966cef-d7f1-4ee3-b8ff-e450223c4054",
 CellID->1809220094],
Cell[504307, 10160, 262, 4, 70, "Text",ExpressionUUID->"3c892218-a52d-4598-a3a9-f76f4b0b35f6",
 CellID->815622139],
Cell[504572, 10166, 830, 21, 70, "Input",ExpressionUUID->"531809f4-09c8-46ed-844a-d85a78c481d0",
 CellID->367777530],
Cell[505405, 10189, 148, 2, 70, "Text",ExpressionUUID->"f672814d-e5f8-441f-a4f6-ab40938ee503",
 CellID->2065401284],
Cell[CellGroupData[{
Cell[505578, 10195, 1898, 43, 70, "Input",ExpressionUUID->"ffb99222-f25d-4a29-b6b4-1bd7e504b3e5",
 CellID->1117086007],
Cell[507479, 10240, 173482, 2849, 70, "Output",ExpressionUUID->"6bcad7d7-0339-4443-9510-0fc152d79c79",
 CellID->163079264]
}, Open  ]],
Cell[680976, 13092, 316, 7, 70, "Text",ExpressionUUID->"2525f744-e76b-402d-ae09-c2556cd80a9b",
 CellID->396030784],
Cell[CellGroupData[{
Cell[681317, 13103, 1590, 39, 70, "Input",ExpressionUUID->"148c7da9-6c2a-4a33-817b-422312e36822",
 CellID->776533662],
Cell[682910, 13144, 2716, 64, 70, "Output",ExpressionUUID->"368ec59a-14a8-4159-966c-2fdd0f3868b7",
 CellID->1939983852]
}, Open  ]],
Cell[685641, 13211, 467, 13, 70, "Text",ExpressionUUID->"9feed00c-da51-45cc-b49e-5ae128232900",
 CellID->1562030865],
Cell[686111, 13226, 380, 10, 70, "Input",ExpressionUUID->"ed68db52-a585-44ed-bc56-197057133efc",
 CellID->674840832],
Cell[686494, 13238, 1223, 31, 70, "Input",ExpressionUUID->"6efe0b7d-2386-447d-bdfd-8d5f615397f3",
 CellID->240731310],
Cell[CellGroupData[{
Cell[687742, 13273, 2578, 62, 70, "Input",ExpressionUUID->"0de6085e-69cb-41c3-b535-bfe52e6d241c",
 CellID->2145678552],
Cell[690323, 13337, 67206, 1255, 70, "Output",ExpressionUUID->"db682ef7-9f41-4ea8-a570-f011929762b3",
 CellID->895695620]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[757590, 14599, 90, 2, 70, "Subsection",ExpressionUUID->"b46493a4-f0de-41be-9742-de2f10f79253",
 CellID->754506620],
Cell[757683, 14603, 2337, 72, 70, "Text",ExpressionUUID->"bf2fd836-5e37-4b66-8b5f-39ce632937dc",
 CellID->1243579173],
Cell[760023, 14677, 495, 11, 70, "Input",ExpressionUUID->"3d876b34-e56b-4735-846b-71fe80c8c46c",
 CellID->1050110365],
Cell[760521, 14690, 591, 16, 70, "Input",ExpressionUUID->"426313cf-556a-4ced-8eee-006ca052e784",
 CellID->188879776],
Cell[CellGroupData[{
Cell[761137, 14710, 1325, 32, 70, "Input",ExpressionUUID->"2a50d299-0d8b-437d-901a-239d814e37e7",
 CellID->1184293509],
Cell[762465, 14744, 44941, 831, 70, "Output",ExpressionUUID->"98a76e18-4b70-4599-b1a9-aa55c26b6cd5",
 CellID->63522793]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[807455, 15581, 79, 2, 70, "Subsection",ExpressionUUID->"29ca82d2-666a-4f1e-adb2-f4c750e37988",
 CellID->92483860],
Cell[CellGroupData[{
Cell[807559, 15587, 151, 3, 70, "Subsubsection",ExpressionUUID->"a09c6bd5-8974-40c1-b0c8-ad16ff13a6f5",
 CellID->157840012],
Cell[807713, 15592, 278, 6, 70, "Text",ExpressionUUID->"b2ff1de6-ec69-4ea1-a300-a72338a18c04",
 CellID->1497282460]
}, Open  ]],
Cell[CellGroupData[{
Cell[808028, 15603, 167, 3, 70, "Subsubsection",ExpressionUUID->"a06a51b8-1eb1-4f5c-b5d7-8ccb10b30e6a",
 CellID->648410349],
Cell[808198, 15608, 486, 12, 70, "Text",ExpressionUUID->"e45b51dc-b998-4ec8-afe5-56fad3ec1631",
 CellID->1603166877],
Cell[808687, 15622, 400, 12, 70, "Text",ExpressionUUID->"a56e6e40-6acb-4bed-84bc-a740c83d7451",
 CellID->1017010272],
Cell[CellGroupData[{
Cell[809112, 15638, 1882, 46, 70, "Input",ExpressionUUID->"f22e696d-6c22-42e4-91d1-f1cf13969e46",
 CellID->534144792],
Cell[810997, 15686, 43334, 797, 70, "Output",ExpressionUUID->"c3ae009c-2bf3-4e1b-9ceb-e73f95089455",
 CellID->2017163776]
}, Open  ]],
Cell[854346, 16486, 397, 12, 70, "Text",ExpressionUUID->"faa192d3-a84b-43c9-be61-53839e0a1edc",
 CellID->1906024299],
Cell[CellGroupData[{
Cell[854768, 16502, 1932, 47, 70, "Input",ExpressionUUID->"ecb1b00e-b388-4265-b5ae-2859b563979f",
 CellID->536830994],
Cell[856703, 16551, 44039, 810, 70, "Output",ExpressionUUID->"da52f518-16eb-4e4a-9d35-0d44468b95e1",
 CellID->1899728100]
}, Open  ]],
Cell[900757, 17364, 332, 10, 70, "Text",ExpressionUUID->"4d3adcec-3147-41cb-8bf5-552d341d75c0",
 CellID->1874164639],
Cell[CellGroupData[{
Cell[901114, 17378, 2032, 49, 70, "Input",ExpressionUUID->"9925059f-1adb-4322-8221-7149779d9d8a",
 CellID->1453034500],
Cell[903149, 17429, 57496, 1052, 70, "Output",ExpressionUUID->"47ab5a5a-3e28-440c-a5d5-15ccbc1f29e8",
 CellID->179225339]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[960694, 18487, 148, 3, 70, "Subsubsection",ExpressionUUID->"77c4f2a1-a6ac-4639-9adf-4e2116534f8c",
 CellID->2121107667],
Cell[960845, 18492, 144, 2, 70, "Text",ExpressionUUID->"8b0a5342-bbec-4695-bd72-4eaa222f6e56",
 CellID->2089227274],
Cell[CellGroupData[{
Cell[961014, 18498, 3154, 65, 70, "Input",ExpressionUUID->"86c20fda-6974-4e8c-abf3-4511c113459a",
 CellID->1368447171],
Cell[964171, 18565, 2281, 57, 70, "Output",ExpressionUUID->"d554c49f-59f2-48d9-8f34-9c24d6172806",
 CellID->1441539523]
}, Open  ]],
Cell[966467, 18625, 176, 3, 70, "Text",ExpressionUUID->"ff04183a-430a-4dea-bb4e-639959a1ef01",
 CellID->1513732170],
Cell[966646, 18630, 564, 14, 70, "Input",ExpressionUUID->"d98367df-af4d-44fe-8009-34db88cd59ed",
 CellID->2118136108],
Cell[967213, 18646, 173, 3, 70, "Text",ExpressionUUID->"3c24b90c-c8e0-457c-b094-a108479e792b",
 CellID->2142470525],
Cell[967389, 18651, 567, 14, 70, "Input",ExpressionUUID->"288a6f7d-f041-4bc6-a200-2f3e1e271681",
 CellID->1664936718],
Cell[967959, 18667, 147, 2, 70, "Text",ExpressionUUID->"770ffd70-3848-420e-8367-6d3a81dbb2db",
 CellID->640572641],
Cell[CellGroupData[{
Cell[968131, 18673, 1110, 27, 70, "Input",ExpressionUUID->"52e39cf9-88f7-41fb-a593-5b17fc4dcf1e",
 CellID->1175712376],
Cell[969244, 18702, 57258, 1028, 70, "Output",ExpressionUUID->"9398a11b-be7d-4956-8064-745dc9763646",
 CellID->1834468673]
}, Open  ]],
Cell[1026517, 19733, 426, 8, 70, "Text",ExpressionUUID->"10d4610d-f165-4759-be59-016bc24a63ee",
 CellID->1455168527]
}, Open  ]],
Cell[CellGroupData[{
Cell[1026980, 19746, 168, 3, 70, "Subsubsection",ExpressionUUID->"380743bf-10fb-4ed0-95f1-fa56034873c4",
 CellID->1838844664],
Cell[1027151, 19751, 417, 8, 70, "Text",ExpressionUUID->"1232440e-f800-46be-ae4e-8546b8d3062e",
 CellID->1747003077],
Cell[1027571, 19761, 253, 4, 70, "Text",ExpressionUUID->"1aaf0376-cf00-42c2-83d7-f3ea381088d6",
 CellID->1017504490],
Cell[1027827, 19767, 730, 19, 70, "Input",ExpressionUUID->"a24478bf-e947-4e61-ae57-499e8c56077f",
 CellID->1158853262],
Cell[1028560, 19788, 185, 3, 70, "Text",ExpressionUUID->"d1c4d9d9-75bf-481e-a9a6-75f32888bab0",
 CellID->337716033],
Cell[CellGroupData[{
Cell[1028770, 19795, 2009, 50, 70, "Input",ExpressionUUID->"9cd4eac7-d85f-4718-b5b0-7ae64707dfa8",
 CellID->1243742461],
Cell[1030782, 19847, 109503, 2085, 70, "Output",ExpressionUUID->"02f4f61a-ce87-4610-be6e-e4e586516e54",
 CellID->405357707]
}, Open  ]],
Cell[1140300, 21935, 140, 2, 70, "Text",ExpressionUUID->"9f9c7990-bf4c-4334-8603-f5a4d37e91db",
 CellID->946362831],
Cell[CellGroupData[{
Cell[1140465, 21941, 800, 20, 70, "Input",ExpressionUUID->"31b8d3dd-e739-4c2d-a671-e7616c028f5a",
 CellID->848282469],
Cell[1141268, 21963, 2711, 64, 70, "Output",ExpressionUUID->"d6eecb23-fa22-4270-aabc-bc56ca86b605",
 CellID->1028853265]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1144028, 22033, 145, 3, 70, "Subsubsection",ExpressionUUID->"1a6e06ac-e1f4-4707-9a24-9b8bfb833025",
 CellID->2047156370],
Cell[1144176, 22038, 351, 7, 70, "Text",ExpressionUUID->"bea2e476-7dfd-4f67-8e19-5336ff155be9",
 CellID->1164751688],
Cell[1144530, 22047, 641, 14, 70, "Input",ExpressionUUID->"6825a1c7-c9bf-4836-8237-5b1ac78055d5",
 CellID->286552493],
Cell[CellGroupData[{
Cell[1145196, 22065, 327, 7, 70, "Input",ExpressionUUID->"d3f9ad72-8aea-4a83-b6e2-6afd0b17a421",
 CellID->2008431976],
Cell[1145526, 22074, 407, 9, 70, "Message",ExpressionUUID->"2fbbc95c-f666-47cc-8fb2-cb168938547e",
 CellID->398499211],
Cell[1145936, 22085, 408, 9, 70, "Message",ExpressionUUID->"ff6d35da-2ebb-481d-a622-8661abef8464",
 CellID->1722227931],
Cell[1146347, 22096, 410, 9, 70, "Message",ExpressionUUID->"f31a1f41-2d45-4634-ba8f-6bbbb88b5c37",
 CellID->1700242051],
Cell[1146760, 22107, 508, 10, 70, "Message",ExpressionUUID->"92650cb1-22f6-4290-b70d-4b1b320ba62f",
 CellID->1550744175],
Cell[1147271, 22119, 554, 17, 70, "Output",ExpressionUUID->"de31e834-94bc-411e-bae9-fd1660026093",
 CellID->1495809233]
}, Open  ]],
Cell[CellGroupData[{
Cell[1147862, 22141, 590, 14, 70, "Input",ExpressionUUID->"6570a1f5-d12f-4925-a2bd-696b8195000f",
 CellID->548846758],
Cell[1148455, 22157, 563, 12, 70, "Output",ExpressionUUID->"f85bc769-65ab-4eb4-bce1-881ca27d1e59",
 CellID->1622207249]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1149079, 22176, 78, 2, 70, "Subsection",ExpressionUUID->"67fb6737-4b9b-4720-9df9-4d9bc685c31b",
 CellID->540091361],
Cell[1149160, 22180, 252, 4, 70, "Text",ExpressionUUID->"38158ce9-55e8-4596-8d71-c8e1fc8da6f9",
 CellID->218835221],
Cell[CellGroupData[{
Cell[1149437, 22188, 5465, 137, 70, "Input",ExpressionUUID->"b2866cb3-efa2-4582-9bd4-26b5b1db8a37",
 CellID->1208248389],
Cell[1154905, 22327, 240527, 3949, 70, "Output",ExpressionUUID->"6e2d4753-df6a-4d3d-8285-6586a3fa4360",
 CellID->1465549173]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1395493, 26283, 135, 3, 70, "Section",ExpressionUUID->"1d01704b-1ebb-4fd8-87c3-5c19a2f9833b",
 CellTags->"Source & Additional Information",
 CellID->318391102],
Cell[CellGroupData[{
Cell[1395653, 26290, 683, 18, 70, "Subsection",ExpressionUUID->"ca9ea530-93f2-4caf-9505-564010e2097b",
 CellTags->"Contributed By",
 CellID->127820888],
Cell[1396339, 26310, 29, 0, 70, "Text",ExpressionUUID->"4e3c3cf2-7f28-42bc-936d-03c90a22456a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396405, 26315, 684, 18, 70, "Subsection",ExpressionUUID->"df51d5b9-3b1a-46e9-9693-3c3c500fb335",
 CellTags->"Keywords",
 CellID->547400482],
Cell[1397092, 26335, 25, 0, 70, "Item",ExpressionUUID->"e8a815fe-0137-496e-82ad-9690a4e581e7"],
Cell[1397120, 26337, 24, 0, 70, "Item",ExpressionUUID->"8ee5cc1e-5afe-4159-b915-757dfe9772bb"],
Cell[1397147, 26339, 26, 0, 70, "Item",ExpressionUUID->"c112df82-8c8a-4d2f-afde-2f88878900fa"],
Cell[1397176, 26341, 35, 0, 70, "Item",ExpressionUUID->"2a4fc215-5ff3-4ded-9391-9e0d6b5b59b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1397248, 26346, 126, 4, 70, "Subsection",ExpressionUUID->"add2c78f-f85f-476c-a040-9d27c6d8636e",
 CellTags->"Categories",
 CellID->749076926],
Cell[1397377, 26352, 44, 0, 70, "Item",ExpressionUUID->"b52316da-eb2a-4985-a2f4-0c25160f4588"],
Cell[1397424, 26354, 44, 0, 70, "Item",ExpressionUUID->"8fdf4d02-f966-4af4-8cef-5cf4c6c01407"],
Cell[1397471, 26356, 32, 0, 70, "Item",ExpressionUUID->"8a0633ac-8ce5-4df5-b90c-9d852c9566e9"],
Cell[1397506, 26358, 57, 0, 70, "Item",ExpressionUUID->"fc04c307-215e-441b-82d5-cbc5b4f5e586"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1397600, 26363, 661, 18, 70, "Subsection",ExpressionUUID->"8996226d-4b62-4ee5-9964-7b5ac00dca04",
 CellTags->"Related Symbols",
 CellID->161079978],
Cell[1398264, 26383, 28, 0, 70, "Item",ExpressionUUID->"101c46a2-596d-4f43-9ca0-d4ecff9ed8e0"],
Cell[1398295, 26385, 27, 0, 70, "Item",ExpressionUUID->"763c0dae-c5f3-466a-995f-cd5c2fd77d2a"],
Cell[1398325, 26387, 19, 0, 70, "Item",ExpressionUUID->"77630106-621d-457e-86ce-60d24229b9c0"],
Cell[1398347, 26389, 30, 0, 70, "Item",ExpressionUUID->"6632569a-dce3-4114-bb00-64822fc0f9ac"],
Cell[1398380, 26391, 33, 0, 70, "Item",ExpressionUUID->"7f4ee981-23fa-44d4-ba48-b4426edc98f0"],
Cell[1398416, 26393, 33, 0, 70, "Item",ExpressionUUID->"aa159ba1-44c3-4e02-9519-a04a5c52d7b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1398486, 26398, 711, 18, 70, "Subsection",ExpressionUUID->"7a3ea79b-9eb7-406a-b339-fa0f9e5efbda",
 CellTags->"Related Resource Objects",
 CellID->588449267],
Cell[1399200, 26418, 508, 8, 70, "Item",ExpressionUUID->"ec62b9a2-eb72-40dc-816c-70cc8c96d5fb",
 CellTags->"TabNext",
 CellID->960273585]
}, Open  ]],
Cell[CellGroupData[{
Cell[1399745, 26431, 762, 19, 70, "Subsection",ExpressionUUID->"55e3b615-fff3-4909-a948-69d307b8a45b",
 CellTags->"Source/Reference Citation",
 CellID->642091068],
Cell[1400510, 26452, 155, 4, 70, "Text",ExpressionUUID->"e754ecfb-2d4a-4a5b-b87f-5ee47df3fb68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1400702, 26461, 614, 18, 70, "Subsection",ExpressionUUID->"de20f52e-40d6-44a7-aebb-1da36f1cafe9",
 CellTags->"Links",
 CellID->521525586],
Cell[1401319, 26481, 131, 3, 70, "Item",ExpressionUUID->"a13c4085-04e9-4010-8b58-a402f5cc06f5"],
Cell[1401453, 26486, 118, 3, 70, "Item",ExpressionUUID->"0107f04a-c84a-4dd7-9e31-41792a1f82b9"],
Cell[1401574, 26491, 114, 3, 70, "Item",ExpressionUUID->"698afb98-967b-4238-93ff-b53edb299d82"],
Cell[1401691, 26496, 126, 3, 70, "Item",ExpressionUUID->"89a3ff17-d6c0-4b7b-a2f0-ebd70d1648e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1401854, 26504, 767, 20, 70, "Subsection",ExpressionUUID->"73d5be0c-48cd-401a-b48d-9422e295fef1",
 CellTags->"Tests",
 CellID->74308299],
Cell[CellGroupData[{
Cell[1402646, 26528, 138, 3, 70, "Subsubsection",ExpressionUUID->"b45b8c14-645a-426d-ae55-c9c2d63cb7fa",
 CellID->703442214],
Cell[1402787, 26533, 648, 20, 70, "Input",ExpressionUUID->"66ac1fc5-e2a1-4484-8c25-15a7c913220f",
 CellID->1337665581],
Cell[1403438, 26555, 698, 21, 70, "Input",ExpressionUUID->"a7ee38fe-6b57-48f8-9f0f-205ec373b68d",
 CellID->318624977],
Cell[1404139, 26578, 607, 16, 70, "Input",ExpressionUUID->"1461338a-0195-4158-9668-b01cb3400e3f",
 CellID->684581104]
}, Open  ]],
Cell[CellGroupData[{
Cell[1404783, 26599, 152, 3, 70, "Subsubsection",ExpressionUUID->"44ca3cb2-1a3b-4eb6-9626-91d469c4d4ab",
 CellID->2118918720],
Cell[1404938, 26604, 280, 8, 70, "Input",ExpressionUUID->"adb65124-abbc-47f3-b1ae-3e8f7cd56174",
 CellID->418441983],
Cell[CellGroupData[{
Cell[1405243, 26616, 718, 21, 70, "Input",ExpressionUUID->"006576a6-f5a6-4b92-ae64-46739d811931",
 CellID->1845770328],
Cell[1405964, 26639, 189, 4, 70, "Output",ExpressionUUID->"925a0874-0b5a-4580-af2b-8f934ed8d32f",
 CellID->667603642]
}, Open  ]],
Cell[CellGroupData[{
Cell[1406190, 26648, 273, 8, 70, "Input",ExpressionUUID->"3bdf1427-218e-4097-b5dd-d306f773d08b",
 CellID->644631377],
Cell[1406466, 26658, 188, 4, 70, "Output",ExpressionUUID->"40ab6e60-8ffb-4a5e-9d1f-cc93cd8d3019",
 CellID->1959839166]
}, Open  ]],
Cell[CellGroupData[{
Cell[1406691, 26667, 861, 25, 70, "Input",ExpressionUUID->"2bc3e21e-e68d-46a8-9bc4-0dbd308b4558",
 CellID->221286964],
Cell[1407555, 26694, 185, 4, 70, "Output",ExpressionUUID->"ef90b788-6a6f-4a5e-a29e-0dbf5f158b9e",
 CellID->912685276]
}, Open  ]],
Cell[CellGroupData[{
Cell[1407777, 26703, 824, 24, 70, "Input",ExpressionUUID->"e120a549-3600-4cff-b8b6-524440969033",
 CellID->1283738496],
Cell[1408604, 26729, 186, 4, 70, "Output",ExpressionUUID->"86bc2a7e-b305-4dfd-8d89-5aab9e05028d",
 CellID->74394904]
}, Open  ]],
Cell[CellGroupData[{
Cell[1408827, 26738, 785, 24, 70, "Input",ExpressionUUID->"256a6664-7fc5-4e15-99ee-8749555ac60f",
 CellID->1810221430],
Cell[1409615, 26764, 186, 4, 70, "Output",ExpressionUUID->"b86b69eb-1cc8-451b-a032-0d29f565b103",
 CellID->519668974]
}, Open  ]],
Cell[CellGroupData[{
Cell[1409838, 26773, 692, 20, 70, "Input",ExpressionUUID->"01b51d96-b8f4-4ca5-8a4d-2f95107cfd21",
 CellID->1686310410],
Cell[1410533, 26795, 187, 4, 70, "Output",ExpressionUUID->"1bb72cc1-0c30-4bd1-8b1d-5f95fdadb149",
 CellID->1146825728]
}, Open  ]],
Cell[CellGroupData[{
Cell[1410757, 26804, 1254, 36, 70, "Input",ExpressionUUID->"b851bf57-bf15-4da7-814f-1492a858ad3d",
 CellID->109706185],
Cell[1412014, 26842, 193, 4, 70, "Output",ExpressionUUID->"401aab89-8b74-434f-ae9a-05f14e9c159c",
 CellID->945764187]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1412256, 26852, 154, 3, 70, "Subsubsection",ExpressionUUID->"05a3d41e-62ec-4d9b-b0ab-452de1806a84",
 CellID->615134506],
Cell[CellGroupData[{
Cell[1412435, 26859, 222, 5, 70, "Input",ExpressionUUID->"6f6d166d-4bcf-424c-90bd-03b66aed5149",
 CellID->734024638],
Cell[1412660, 26866, 451, 10, 70, "Message",ExpressionUUID->"258cf0a6-59ff-445f-8f75-69267ea475a3",
 CellID->1932219462],
Cell[1413114, 26878, 182, 5, 70, "Output",ExpressionUUID->"e92e705a-0876-40f1-b8e7-0ab79a2b0e17",
 CellID->564787900]
}, Open  ]],
Cell[CellGroupData[{
Cell[1413333, 26888, 222, 5, 70, "Input",ExpressionUUID->"86e5eb0d-ac9b-434d-bf57-467c4eb32700",
 CellID->380599863],
Cell[1413558, 26895, 399, 9, 70, "Message",ExpressionUUID->"c1bc4d14-fb9b-4fa4-8b91-2cafd644db8b",
 CellID->512515560],
Cell[1413960, 26906, 154, 4, 70, "Output",ExpressionUUID->"8ac5bf92-1bda-40e1-b0e4-c0ac2dc41121",
 CellID->292108803]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414151, 26915, 223, 5, 70, "Input",ExpressionUUID->"88519885-4176-4cc6-a58a-107d0f3135f9",
 CellID->729311389],
Cell[1414377, 26922, 405, 9, 70, "Message",ExpressionUUID->"b8ce3c56-6d78-4109-b67a-2f2aa833c458",
 CellID->325034979],
Cell[1414785, 26933, 153, 4, 70, "Output",ExpressionUUID->"2e146bf0-fa21-436e-9cfa-970c20cd338e",
 CellID->1811977732]
}, Open  ]],
Cell[CellGroupData[{
Cell[1414975, 26942, 277, 6, 70, "Input",ExpressionUUID->"28329443-9375-4c98-94ad-f19ce77224fd",
 CellID->1649473428],
Cell[1415255, 26950, 422, 10, 70, "Message",ExpressionUUID->"a30e47ec-829d-4cc3-b3f8-46fad872b9ff",
 CellID->444143617],
Cell[1415680, 26962, 181, 5, 70, "Output",ExpressionUUID->"b1054cf3-7fb1-4230-b8bc-8fe4fc5e7aed",
 CellID->68613947]
}, Open  ]],
Cell[CellGroupData[{
Cell[1415898, 26972, 268, 6, 70, "Input",ExpressionUUID->"4fe841b0-699d-4649-9bb4-5e6639e5c189",
 CellID->639096797],
Cell[1416169, 26980, 424, 10, 70, "Message",ExpressionUUID->"af3b84ef-61d2-45e7-894b-d6e43dee574e",
 CellID->2143372437],
Cell[1416596, 26992, 182, 5, 70, "Output",ExpressionUUID->"88df6c82-6bed-4d6f-b9ce-7626155bff87",
 CellID->1769853881]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416815, 27002, 326, 7, 70, "Input",ExpressionUUID->"ba19c2bd-63f8-4b01-afa0-0bb37656cd49",
 CellID->849536809],
Cell[1417144, 27011, 398, 9, 70, "Message",ExpressionUUID->"52d1807c-036c-4c35-b15b-8dfa0346df55",
 CellID->1811055761],
Cell[1417545, 27022, 157, 4, 70, "Output",ExpressionUUID->"1c663e47-f23a-4e80-b300-9a33b26342ad",
 CellID->2128446196]
}, Open  ]],
Cell[CellGroupData[{
Cell[1417739, 27031, 321, 7, 70, "Input",ExpressionUUID->"1bbd4f84-5b03-4060-8af4-5d1b69bfc6b0",
 CellID->1897572783],
Cell[1418063, 27040, 430, 9, 70, "Message",ExpressionUUID->"3b9073a0-e77f-4757-9fe2-fbf72a22cd09",
 CellID->12624446],
Cell[1418496, 27051, 153, 4, 70, "Output",ExpressionUUID->"1ea7b8e2-d2b5-4d85-b4e0-2b2abbdae224",
 CellID->1725666516]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1418722, 27063, 127, 4, 70, "Section",ExpressionUUID->"aa283c85-8d60-495d-a880-cee9a818fd4f",
 CellTags->"Author Notes",
 CellID->795110225],
Cell[1418852, 27069, 687, 15, 70, "Text",ExpressionUUID->"b878a0e5-52a5-457b-9005-8b63b396af23",
 CellTags->"TabNext",
 CellID->567921317]
}, Open  ]],
Cell[CellGroupData[{
Cell[1419576, 27089, 720, 19, 70, "Section",ExpressionUUID->"c3672934-a857-408c-8f21-5a6973a68443",
 CellTags->"Submission Notes",
 CellID->843283583],
Cell[1420299, 27110, 495, 8, 70, "Text",ExpressionUUID->"2c6d6ff0-baa7-41cb-9a8d-c4a0fff19aeb",
 CellTags->"TabNext",
 CellID->920818074]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
